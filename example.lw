let scalus.benchmarks.KnightsTest$.toList17=(lam self16:scalus.benchmarks.KnightsTest$.Queue[A#30384] -> scalus.prelude.List[A#30384][(ProdDataList -> PackedSumDataList)].
    HeadList( self16 )
  )in 
  let scalus.prelude.List$.isEmpty22=(lam self18:scalus.prelude.List[A#94477] -> Boolean[(SumDataList -> Constant)].
      ListMatch{listInput19(=
        var(self18:scalus.prelude.List[A#94477][SumDataList])
      ) matchCons(consHead20(= HeadList( listInput19 ) ),consTail21(=
               TailList( listInput19 )
             )) =>(con bool False)Nil =>(con bool True)}:Boolean
    )in 
    let scalus.benchmarks.KnightsTest$.isEmpty24=(lam self23:scalus.benchmarks.KnightsTest$.Queue[A#30302] -> Boolean[(ProdDataList -> Constant)].
        App(scalus.prelude.List$.isEmpty22 UnListData(
            App(scalus.benchmarks.KnightsTest$.toList17 self23)
          ))
      )in 
      let scalus.benchmarks.KnightsTest$.emptyQueue26=(lam _25:Unit ->  [A#30383] =>> scalus.benchmarks.KnightsTest$.Queue[A#30383][(Constant -> ProdDataList)].
          Constr( [A#30383] =>> scalus.benchmarks.KnightsTest$.Queue[A#30383],
            MkCons(ListData(
              cast.repr.proxy(
                cast.repr.proxy(
                  [(builtin mkNilData) (con unit ())]
                :scalus.prelude.List[*][SumDataList])
              :scalus.prelude.List[A#30383][SumDataList])
            ) [(builtin mkNilData) (con unit ())])
          )
        )in 
        let scalus.prelude.List$.headOption31=(lam self27:scalus.prelude.List[A#96626] -> scalus.prelude.Option[A#96626][(SumDataList -> DataConstr)].
            ListMatch{listInput28(=
              var(self27:scalus.prelude.List[A#96626][SumDataList])
            ) matchCons(consHead29(= HeadList( listInput28 ) ),consTail30(=
                     TailList( listInput28 )
                   )) =>cast.repr.proxy(
                       cast.repr.proxy(
                         ConstrData((con integer 0) Constr(scalus.prelude.Option$.Some[A#96626],
                           MkCons(cast.repr.proxy( consHead29 :A#96626[TypeVar]) [
                             (builtin mkNilData) (con unit ())
                           ])
                         ))
                       :scalus.prelude.Option[*][DataConstr])
                     :scalus.prelude.Option[A#96626][DataConstr])Nil =>cast.repr.proxy(
                       ConstrData((con integer 1) Constr(scalus.prelude.Option$.None,
                         [(builtin mkNilData) (con unit ())]
                       ))
                     :scalus.prelude.Option[*][DataConstr])}:scalus.prelude.Option[A#96626]
          )in 
          let scalus.prelude.List$.head38=(lam self32:scalus.prelude.List[A#96624] -> Nothing[(SumDataList -> TypeVar)].
              let self$proxy1133=App(scalus.prelude.List$.headOption31 self32)in 
                if EqualsInteger(_match_constr_idx35(=
                    FstPair( _match_scrutinee34(= UnConstrData( self$proxy1133 ) ) )
                  ) (con integer 0))
                then cast.repr.proxy(
                    value37(= HeadList( _match_datalist36(= SndPair( _match_scrutinee34 ) ) ) )
                  :A#96624[TypeVar])
                else if EqualsInteger(_match_constr_idx35 (con integer 1))
                     then (force [
                         (force (builtin trace)) (con string "head of empty list") (delay (error))
                       ])
                     else (force [
                         (force (builtin trace))
                         (con string "Incorrect constructor index for type scalus.prelude.Option[A#96624]")
                         (delay (error))
                       ])
              
            )in 
            let scalus.benchmarks.KnightsTest$.head40=(lam self39:scalus.benchmarks.KnightsTest$.Queue[A#30192] ->  [A#30385] =>> A#30385[(ProdDataList -> TypeVar)].
                App(scalus.prelude.List$.head38 UnListData(
                    App(scalus.benchmarks.KnightsTest$.toList17 self39)
                  ))
              )in 
              let scalus.benchmarks.KnightsTest$.appendFront44=(lam self41:scalus.benchmarks.KnightsTest$.Queue[A#30392] -> A#30392 -> scalus.benchmarks.KnightsTest$.Queue[A#30392][(ProdDataList -> (TypeVar -> ProdDataList))].
                  (lam item42:A#30392 -> scalus.benchmarks.KnightsTest$.Queue[A#30392][(TypeVar -> ProdDataList)].
                    Constr(scalus.benchmarks.KnightsTest$.Queue[A#30392],
                      MkCons(ListData(
                        let self$proxy143=App(scalus.benchmarks.KnightsTest$.toList17 self41)in 
                          cast.repr.proxy(
                            cast.repr.proxy(
                              MkCons(cast.repr.proxy( item42 :A#30392[TypeVar]) UnListData(
                                self$proxy143
                              ))
                            :scalus.prelude.List[*][SumDataList])
                          :scalus.prelude.List[A#30392][SumDataList])
                        
                      ) [(builtin mkNilData) (con unit ())])
                    )
                  )
                )in 
                let scalus.prelude.List$.tail49=(lam self45:scalus.prelude.List[A#96629] -> scalus.prelude.List[A#96629][(SumDataList -> SumDataList)].
                    ListMatch{listInput46(=
                      var(self45:scalus.prelude.List[A#96629][SumDataList])
                    ) matchCons(consHead47(= HeadList( listInput46 ) ),consTail48(=
                             TailList( listInput46 )
                           )) =>consTail48Nil =>(force [
                               (force (builtin trace)) (con string "tail of empty list")
                               (delay (error))
                             ])}:scalus.prelude.List[A#96629]
                  )in 
                  let scalus.benchmarks.KnightsTest$.removeFront51=(lam self50:scalus.benchmarks.KnightsTest$.Queue[A#30408] -> scalus.benchmarks.KnightsTest$.Queue[A#30408][(ProdDataList -> ProdDataList)].
                      Constr(scalus.benchmarks.KnightsTest$.Queue[A#30408],
                        MkCons(ListData(
                          App(scalus.prelude.List$.tail49 UnListData(
                              App(scalus.benchmarks.KnightsTest$.toList17 self50)
                            ))
                        ) [(builtin mkNilData) (con unit ())])
                      )
                    )in 
                    let scalus.prelude.List$.appendedAll59=(lam self52:scalus.prelude.List[A#94732] -> scalus.prelude.List[B#94734] -> scalus.prelude.List[B#94734][(SumDataList -> (SumDataList -> SumDataList))].
                        (lam other53:scalus.prelude.List[B#94734] -> scalus.prelude.List[B#94734][(SumDataList -> SumDataList)].
                          (letrec go54=(lam lst55:scalus.prelude.List[B#94734] -> scalus.prelude.List[B#94734][(SumDataList -> SumDataList)].
                              ListMatch{listInput56(=
                                var(lst55:scalus.prelude.List[B#94734][SumDataList])
                              ) matchCons(consHead57(= HeadList( listInput56 ) ),consTail58(=
                                       TailList( listInput56 )
                                     )) =>cast.repr.proxy(
                                         cast.repr.proxy(
                                           MkCons(cast.repr.proxy( consHead57 :B#94734[TypeVar])
                                           App(go54 consTail58))
                                         :scalus.prelude.List[*][SumDataList])
                                       :scalus.prelude.List[B#94734][SumDataList])Nil =>other53}:scalus.prelude.List[B#94734]
                            ) in
                            if if App(scalus.prelude.List$.isEmpty22 other53) then (con bool False)
                               else (con bool True) then App(go54 self52) else self52
                          )
                        )
                      )in 
                      let scalus.benchmarks.KnightsTest$.appendAllFront64=(lam self60:scalus.benchmarks.KnightsTest$.Queue[A#30398] -> scalus.prelude.List[A#30398] -> scalus.benchmarks.KnightsTest$.Queue[A#30398][(ProdDataList -> (SumDataList -> ProdDataList))].
                          (lam list61:scalus.prelude.List[A#30398] -> scalus.benchmarks.KnightsTest$.Queue[A#30398][(SumDataList -> ProdDataList)].
                            Constr(scalus.benchmarks.KnightsTest$.Queue[A#30398],
                              MkCons(ListData(
                                let other$proxy162=App(scalus.benchmarks.KnightsTest$.toList17
                                  self60)in 
                                  App(App(scalus.prelude.List$.appendedAll59 list61) UnListData(
                                      other$proxy162
                                    ))
                                
                              ) [(builtin mkNilData) (con unit ())])
                            )
                          )
                        )in 
                        (letrec scalus.benchmarks.KnightsTest$.depthSearch65=(lam depth66:Int -> scalus.benchmarks.KnightsTest$.Queue[A#30506] -> (A#30506 -> scalus.prelude.List[A#30506]) -> (A#30506 -> Boolean) -> scalus.benchmarks.KnightsTest$.Queue[A#30383][(Constant -> (ProdDataList -> ((TypeVar -> SumDataList) -> ((TypeVar -> Constant) -> ProdDataList))))].
                            (lam queue67:scalus.benchmarks.KnightsTest$.Queue[A#30506] -> (A#30506 -> scalus.prelude.List[A#30506]) -> (A#30506 -> Boolean) -> scalus.benchmarks.KnightsTest$.Queue[A#30383][(ProdDataList -> ((TypeVar -> SumDataList) -> ((TypeVar -> Constant) -> ProdDataList)))].
                              (lam grow68:(A#30506 -> scalus.prelude.List[A#30506]) -> (A#30506 -> Boolean) -> scalus.benchmarks.KnightsTest$.Queue[A#30383][((TypeVar -> SumDataList) -> ((TypeVar -> Constant) -> ProdDataList))].
                                (lam done69:(A#30506 -> Boolean) -> scalus.benchmarks.KnightsTest$.Queue[A#30383][((TypeVar -> Constant) -> ProdDataList)].
                                  if if let i270=(con integer 0)in 
                                         App(App((builtin equalsInteger) depth66) i270)
                                        then (con bool True)
                                     else App(scalus.benchmarks.KnightsTest$.isEmpty24 queue67)
                                  then App(scalus.benchmarks.KnightsTest$.emptyQueue26
                                    (con unit ()))
                                  else if App(done69 App(scalus.benchmarks.KnightsTest$.head40
                                           queue67))
                                       then App(App(scalus.benchmarks.KnightsTest$.appendFront44
                                           App(App(App(App(scalus.benchmarks.KnightsTest$.depthSearch65
                                                   App(App((builtin subtractInteger) depth66)
                                                     (con integer 1)))
                                                 App(scalus.benchmarks.KnightsTest$.removeFront51
                                                   queue67)) grow68) done69))
                                         App(scalus.benchmarks.KnightsTest$.head40 queue67))
                                       else
                                         App(App(App(App(scalus.benchmarks.KnightsTest$.depthSearch65
                                               App(App((builtin subtractInteger) depth66)
                                                 (con integer 1)))
                                             App(App(scalus.benchmarks.KnightsTest$.appendAllFront64
                                                 App(scalus.benchmarks.KnightsTest$.removeFront51
                                                   queue67)) App(grow68
                                                 App(scalus.benchmarks.KnightsTest$.head40
                                                   queue67)))) grow68) done69)
                                )
                              )
                            )
                          ) in
                          (letrec scalus.prelude.List$.range102=(lam from103:Int -> Int -> scalus.prelude.List[Int][(Constant -> (Constant -> SumDataList))].
                              (lam to104:Int -> scalus.prelude.List[Int][(Constant -> SumDataList)].
                                if App(App((builtin lessThanEqualsInteger) from103) to104)
                                then cast.repr.proxy(
                                    cast.repr.proxy(
                                      MkCons(IData( from103 ) App(App(scalus.prelude.List$.range102
                                        App(App((builtin addInteger) from103) (con integer 1)))
                                      to104))
                                    :scalus.prelude.List[*][SumDataList])
                                  :scalus.prelude.List[Int][SumDataList])
                                else cast.repr.proxy(
                                    [(builtin mkNilData) (con unit ())]
                                  :scalus.prelude.List[*][SumDataList])
                              )
                            ) in
                            (letrec scalus.prelude.List$.foldRight108=(lam self109:scalus.prelude.List[A#94628] -> B#94630 -> (A#94628 -> B#94630 -> B#94630) -> B#94630[(SumDataList -> (TypeVar -> ((TypeVar -> (TypeVar -> TypeVar)) -> TypeVar)))].
                                (lam init110:B#94630 -> (A#94628 -> B#94630 -> B#94630) -> B#94630[(TypeVar -> ((TypeVar -> (TypeVar -> TypeVar)) -> TypeVar))].
                                  (lam combiner111:(A#94628 -> B#94630 -> B#94630) -> B#94630[((TypeVar -> (TypeVar -> TypeVar)) -> TypeVar)].
                                    ListMatch{listInput112(=
                                      var(self109:scalus.prelude.List[A#94628][SumDataList])
                                    ) matchCons(consHead113(=
                                             HeadList( listInput112 )
                                           ),consTail114(=
                                             TailList( listInput112 )
                                           )) =>App(App(combiner111 cast.repr.proxy(
                                                   cast.repr.proxy( consHead113 :A#94628[TypeVar])
                                                 :A#94628[TypeVar])) cast.repr.proxy(
                                                 App(App(App(scalus.prelude.List$.foldRight108
                                                     consTail114) cast.repr.proxy(
                                                       cast.repr.proxy( init110 :B#94630[TypeVar])
                                                     : [B#94632,A#94631] =>> B#94632[TypeVar]))
                                                 combiner111)
                                               :B#94630[TypeVar]))Nil =>cast.repr.proxy(
                                               init110
                                             :B#94630[TypeVar])}:B#94630
                                  )
                                )
                              ) in
                              let scalus.prelude.List$.flatMap140=(lam self125:scalus.prelude.List[A#96551] -> (A#96551 -> scalus.prelude.List[B#96553]) -> scalus.prelude.List[B#96553][(SumDataList -> ((TypeVar -> SumDataList) -> SumDataList))].
                                  (lam mapper126:(A#96551 -> scalus.prelude.List[B#96553]) -> scalus.prelude.List[B#96553][((TypeVar -> SumDataList) -> SumDataList)].
                                    App((lam xIn131:(A#96555 -> scalus.prelude.List[B#96553] -> scalus.prelude.List[B#96553]) -> scalus.prelude.List[B#96553][((TypeVar -> (SumDataList -> SumDataList)) -> SumDataList)].
                                        UnListData(
                                          repr.proxy(
                                            App(App(App(scalus.prelude.List$.foldRight108 self125)
                                              repr.proxy(
                                                  ListData(
                                                    cast.repr.proxy(
                                                      cast.repr.proxy(
                                                        [(builtin mkNilData) (con unit ())]
                                                      :scalus.prelude.List[*][SumDataList])
                                                    :scalus.prelude.List[B#96553][SumDataList])
                                                  )
                                                [TypeVar]))
                                            (lam xIn132:A#96555 -> scalus.prelude.List[B#96553] -> scalus.prelude.List[B#96553][(TypeVar -> (TypeVar -> TypeVar))].
                                                (lam xIn133:scalus.prelude.List[B#96553] -> scalus.prelude.List[B#96553][(TypeVar -> TypeVar)].
                                                  repr.proxy(
                                                    ListData(
                                                      App(App(xIn131 xIn132) UnListData(
                                                          repr.proxy( xIn133 [PackedSumDataList])
                                                        ))
                                                    )
                                                  [TypeVar])
                                                )
                                              ))
                                          [PackedSumDataList])
                                        )
                                      )
                                    (lam head134:A#96551 -> scalus.prelude.List[B#96553] ->  [B#96556] =>> scalus.prelude.List[B#96556][(TypeVar -> (SumDataList -> SumDataList))].
                                        (lam tail135:scalus.prelude.List[B#96553] ->  [B#96556] =>> scalus.prelude.List[B#96556][(SumDataList -> SumDataList)].
                                          let self$proxy8136=App(mapper126 cast.repr.proxy(
                                                cast.repr.proxy( head134 :A#96551[TypeVar])
                                              :A#96551[TypeVar]))in 
                                            App(App(scalus.prelude.List$.appendedAll59
                                              self$proxy8136) tail135)
                                          
                                        )
                                      ))
                                  )
                                )in 
                                let scalus.prelude.List$.map154=(lam self141:scalus.prelude.List[A#82193] -> (A#82193 -> B#82195) -> scalus.prelude.List[B#82195][(SumDataList -> ((TypeVar -> TypeVar) -> SumDataList))].
                                    (lam mapper142:(A#82193 -> B#82195) -> scalus.prelude.List[B#82195][((TypeVar -> TypeVar) -> SumDataList)].
                                      App((lam xIn147:(A#94634 -> scalus.prelude.List[B#82195] -> scalus.prelude.List[B#82195]) -> scalus.prelude.List[B#82195][((TypeVar -> (SumDataList -> SumDataList)) -> SumDataList)].
                                          UnListData(
                                            repr.proxy(
                                              App(App(App(scalus.prelude.List$.foldRight108 self141)
                                                repr.proxy(
                                                    ListData(
                                                      cast.repr.proxy(
                                                        cast.repr.proxy(
                                                          [(builtin mkNilData) (con unit ())]
                                                        :scalus.prelude.List[*][SumDataList])
                                                      :scalus.prelude.List[B#82195][SumDataList])
                                                    )
                                                  [TypeVar]))
                                              (lam xIn148:A#94634 -> scalus.prelude.List[B#82195] -> scalus.prelude.List[B#82195][(TypeVar -> (TypeVar -> TypeVar))].
                                                  (lam xIn149:scalus.prelude.List[B#82195] -> scalus.prelude.List[B#82195][(TypeVar -> TypeVar)].
                                                    repr.proxy(
                                                      ListData(
                                                        App(App(xIn147 xIn148) UnListData(
                                                            repr.proxy( xIn149 [PackedSumDataList])
                                                          ))
                                                      )
                                                    [TypeVar])
                                                  )
                                                ))
                                            [PackedSumDataList])
                                          )
                                        )
                                      (lam head150:A#82193 -> scalus.prelude.List[B#82195] -> scalus.prelude.List[B#82195][(TypeVar -> (SumDataList -> SumDataList))].
                                          (lam tail151:scalus.prelude.List[B#82195] -> scalus.prelude.List[B#82195][(SumDataList -> SumDataList)].
                                            cast.repr.proxy(
                                              cast.repr.proxy(
                                                MkCons(App(mapper142 cast.repr.proxy(
                                                    cast.repr.proxy( head150 :A#82193[TypeVar])
                                                  :A#82193[TypeVar])) tail151)
                                              :scalus.prelude.List[*][SumDataList])
                                            :scalus.prelude.List[B#82195][SumDataList])
                                          )
                                        ))
                                    )
                                  )in 
                                  let scalus.prelude.List$.single156=(lam a155:A#94410 -> scalus.prelude.List[A#94410][(TypeVar -> SumDataList)].
                                      cast.repr.proxy(
                                        cast.repr.proxy(
                                          MkCons(cast.repr.proxy( a155 :A#94410[TypeVar]) [
                                            (builtin mkNilData) (con unit ())
                                          ])
                                        :scalus.prelude.List[*][SumDataList])
                                      :scalus.prelude.List[A#94410][SumDataList])
                                    )in 
                                    let scalus.benchmarks.KnightsTest$.createBoard159=(lam size157:Int -> scala.Tuple2[Int, Int] -> scalus.benchmarks.KnightsTest$.ChessSet[(Constant -> (ProdDataList -> ProdDataList))].
                                        (lam initSquare158:scala.Tuple2[Int, Int] -> scalus.benchmarks.KnightsTest$.ChessSet[(ProdDataList -> ProdDataList)].
                                          Constr(scalus.benchmarks.KnightsTest$.ChessSet,
                                            MkCons(IData( size157 ) MkCons(IData( (con integer 1) )
                                            MkCons(cast.repr.proxy(
                                              cast.repr.proxy(
                                                ConstrData((con integer 0)
                                                Constr(scalus.prelude.Option$.Some[scala.Tuple2[Int, Int]],
                                                  MkCons(ConstrData((con integer 0) initSquare158) [
                                                    (builtin mkNilData) (con unit ())
                                                  ])
                                                ))
                                              :scalus.prelude.Option[*][DataConstr])
                                            :scalus.prelude.Option[scala.Tuple2[Int, Int]][DataConstr])
                                            MkCons(MapData(
                                              App($dataListToTuplesList14(=
                                                  (letrec fun_$dataListToTuplesList8=(lam list9:scalus.prelude.List[scala.Tuple2[A#1228757168, B#1228757168]] -> scalus.prelude.List[scala.Tuple2[A#1228757168, B#1228757168]][(SumDataList -> SumDataPairList)].
                                                      force(
                                                        App(App(ChooseList( list9 ) delay(
                                                              [
                                                                (builtin mkNilPairData)
                                                                (con unit ())
                                                              ]
                                                            )) delay(
                                                            MkCons(MkPairData(HeadList(
                                                              prodList12(=
                                                                SndPair(
                                                                  UnConstrData(
                                                                    headVal10(= HeadList( list9 ) )
                                                                  )
                                                                )
                                                              )
                                                            ) HeadList( TailList( prodList12 ) ))
                                                            App(fun_$dataListToTuplesList8
                                                            tailVal11(= TailList( list9 ) )))
                                                          ))
                                                      )
                                                    ) in fun_$dataListToTuplesList8 )
                                                ) App(scalus.prelude.List$.single156
                                                ConstrData((con integer 0) initSquare158)))
                                            ) [(builtin mkNilData) (con unit ())]))))
                                          )
                                        )
                                      )in 
                                      let scalus.benchmarks.KnightsTest$.startTour168=(lam tile160:scala.Tuple2[Int, Int] -> Int -> scalus.benchmarks.KnightsTest$.ChessSet[(ProdDataList -> (Constant -> ProdDataList))].
                                          (lam size161:Int -> scalus.benchmarks.KnightsTest$.ChessSet[(Constant -> ProdDataList)].
                                            let __KnightsTest_line_1003166=if
                                                                             let x$proxy5163=App(App((builtin remainderInteger)
                                                                                 size161)
                                                                               (con integer 2))in 
                                                                               let i2164=(con integer 0)in
                                                                               
                                                                                 App(App((builtin equalsInteger)
                                                                                   x$proxy5163)
                                                                                 i2164)
                                                                               
                                                                              then (con unit ())
                                                                           else (force [
                                                                               (force (builtin trace))
                                                                               (con string "RequirementError")
                                                                               (delay (error))
                                                                             ])in 
                                              App(App(scalus.benchmarks.KnightsTest$.createBoard159
                                                size161) tile160)
                                            
                                          )
                                        )in 
                                        (letrec scalus.prelude.List$.foldLeft169=(lam self170:scalus.prelude.List[A#94435] -> B#94437 -> (B#94437 -> A#94435 -> B#94437) -> B#94437[(SumDataList -> (TypeVar -> ((TypeVar -> (TypeVar -> TypeVar)) -> TypeVar)))].
                                            (lam init171:B#94437 -> (B#94437 -> A#94435 -> B#94437) -> B#94437[(TypeVar -> ((TypeVar -> (TypeVar -> TypeVar)) -> TypeVar))].
                                              (lam combiner172:(B#94437 -> A#94435 -> B#94437) -> B#94437[((TypeVar -> (TypeVar -> TypeVar)) -> TypeVar)].
                                                ListMatch{listInput173(=
                                                  var(self170:scalus.prelude.List[A#94435][SumDataList])
                                                ) matchCons(consHead174(=
                                                         HeadList( listInput173 )
                                                       ),consTail175(=
                                                         TailList( listInput173 )
                                                       )) =>App(App(App(scalus.prelude.List$.foldLeft169
                                                             consTail175) cast.repr.proxy(
                                                               App(App(combiner172 cast.repr.proxy(
                                                                     cast.repr.proxy(
                                                                       init171
                                                                     :B#94437[TypeVar])
                                                                   :B#94437[TypeVar]))
                                                               cast.repr.proxy(
                                                                   cast.repr.proxy(
                                                                     consHead174
                                                                   :A#94435[TypeVar])
                                                                 :A#94435[TypeVar]))
                                                             : [B#94439,A#94438] =>> B#94439[TypeVar]))
                                                         combiner172)Nil =>cast.repr.proxy(
                                                           init171
                                                         :B#94437[TypeVar])}:B#94437
                                              )
                                            )
                                          ) in
                                          let scalus.prelude.List$.length204=(lam self186:scalus.prelude.List[A#94499] -> Int[(SumDataList -> Constant)].
                                              App((lam xIn191:(Int -> A#94503 -> Int) -> Int[((Constant -> (TypeVar -> Constant)) -> Constant)].
                                                  UnIData(
                                                    App(App(App(scalus.prelude.List$.foldLeft169
                                                        self186) IData( (con integer 0) ))
                                                    (lam x194195:Int -> A#94503 -> Int[(TypeVar -> (TypeVar -> PackedData))].
                                                        (lam x197198:A#94503 -> Int[(TypeVar -> PackedData)].
                                                          App(App((lam xIn192:Int -> A#94503 -> Int[(TypeVar -> (TypeVar -> PackedData))].
                                                                (lam xIn193:A#94503 -> Int[(TypeVar -> PackedData)].
                                                                  IData(
                                                                    App(App(xIn191 UnIData(
                                                                          xIn192
                                                                        )) xIn193)
                                                                  )
                                                                )
                                                              ) x194195) cast.repr.proxy(
                                                              x197198
                                                            :A#94503[TypeVar]))
                                                        )
                                                      ))
                                                  )
                                                )
                                              (lam counter199:Int -> A#94499 -> Int[(Constant -> (TypeVar -> Constant))].
                                                  (lam _$4200:A#94499 -> Int[(TypeVar -> Constant)].
                                                    App(App((builtin addInteger) counter199)
                                                    (con integer 1))
                                                  )
                                                ))
                                            )in 
                                            (letrec scalus.prelude.List$.zip205=(lam self206:scalus.prelude.List[A#96510] -> scalus.prelude.List[B#96512] -> scalus.prelude.List[scala.Tuple2[A#96510, B#96512]][(SumDataList -> (SumDataList -> SumDataPairList))].
                                                (lam other207:scalus.prelude.List[B#96512] -> scalus.prelude.List[scala.Tuple2[A#96510, B#96512]][(SumDataList -> SumDataPairList)].
                                                  ListMatch{listInput208(=
                                                    var(self206:scalus.prelude.List[A#96510][SumDataList])
                                                  ) matchCons(consHead209(=
                                                           HeadList( listInput208 )
                                                         ),consTail210(=
                                                           TailList( listInput208 )
                                                         )) =>ListMatch{listInput211(=
                                                             var(other207:scalus.prelude.List[B#96512][SumDataList])
                                                           ) matchCons(consHead212(=
                                                                    HeadList( listInput211 )
                                                                  ),consTail213(=
                                                                    TailList( listInput211 )
                                                                  )) =>cast.repr.proxy(
                                                                      cast.repr.proxy(
                                                                        MkCons(MkPairData(HeadList(
                                                                          dl_to_pair_input215(=
                                                                            Constr(scala.Tuple2[A#96510, B#96512],
                                                                              MkCons(cast.repr.proxy(
                                                                                consHead209
                                                                              :A#96510[TypeVar])
                                                                              MkCons(cast.repr.proxy(
                                                                                consHead212
                                                                              :B#96512[TypeVar]) [
                                                                                (builtin mkNilData)
                                                                                (con unit ())
                                                                              ]))
                                                                            )
                                                                          )
                                                                        ) HeadList(
                                                                          TailList(
                                                                            dl_to_pair_input215
                                                                          )
                                                                        ))
                                                                        App(App(scalus.prelude.List$.zip205
                                                                          consTail210) consTail213))
                                                                      :scalus.prelude.List[*][SumDataPairList])
                                                                    :scalus.prelude.List[scala.Tuple2[A#96510, B#96512]][SumDataPairList])Nil =>[
                                                                      (builtin mkNilPairData)
                                                                      (con unit ())
                                                                    ]}:scalus.prelude.List[scala.Tuple2[A#96510, B#96512]]Nil =>[
                                                             (builtin mkNilPairData) (con unit ())
                                                           ]}:scalus.prelude.List[scala.Tuple2[A#96510, B#96512]]
                                                )
                                              ) in
                                              (letrec scalus.prelude.List$.fill216=(lam value217:A#96302 -> Int -> scalus.prelude.List[A#96302][(TypeVar -> (Constant -> SumDataList))].
                                                  (lam times218:Int -> scalus.prelude.List[A#96302][(Constant -> SumDataList)].
                                                    if App(App((builtin lessThanInteger)
                                                        (con integer 0)) times218)
                                                    then cast.repr.proxy(
                                                        cast.repr.proxy(
                                                          MkCons(cast.repr.proxy(
                                                            value217
                                                          :A#96302[TypeVar])
                                                          App(App(scalus.prelude.List$.fill216
                                                            cast.repr.proxy(
                                                                cast.repr.proxy(
                                                                  value217
                                                                :A#96302[TypeVar])
                                                              : [A#96302] =>> A#96302[TypeVar]))
                                                          App(App((builtin subtractInteger)
                                                              times218) (con integer 1))))
                                                        :scalus.prelude.List[*][SumDataList])
                                                      :scalus.prelude.List[A#96302][SumDataList])
                                                    else cast.repr.proxy(
                                                        [(builtin mkNilData) (con unit ())]
                                                      :scalus.prelude.List[*][SumDataList])
                                                  )
                                                ) in
                                                let scalus.benchmarks.KnightsTest$.makeStarts242=(lam size222:Int -> scalus.prelude.List[scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet]][(Constant -> SumDataPairList)].
                                                    let it224=App(App(scalus.prelude.List$.range102
                                                        (con integer 1)) size222)in 
                                                      let l234=App((lam xIn225:(Int -> scalus.prelude.List[B#96555]) -> scalus.prelude.List[B#96555][((Constant -> SumDataList) -> SumDataList)].
                                                            App(App(scalus.prelude.List$.flatMap140
                                                              it224)
                                                            (lam xIn226:Int -> scalus.prelude.List[B#96555][(TypeVar -> SumDataList)].
                                                                App(xIn225 UnIData( xIn226 ))
                                                              ))
                                                          )
                                                        (lam x227:Int -> scalus.prelude.List[scalus.benchmarks.KnightsTest$.ChessSet][(Constant -> SumDataList)].
                                                            App((lam xIn228:(Int -> B#82197) -> scalus.prelude.List[B#82197][((Constant -> TypeVar) -> SumDataList)].
                                                                App(App(scalus.prelude.List$.map154
                                                                  it224)
                                                                (lam xIn229:Int -> B#82197[(TypeVar -> TypeVar)].
                                                                    App(xIn228 UnIData( xIn229 ))
                                                                  ))
                                                              )
                                                            (lam xIn232:Int -> scalus.benchmarks.KnightsTest$.ChessSet[(Constant -> ProdDataConstr)].
                                                                ConstrData((con integer 0)
                                                                App((lam y230:Int -> scalus.benchmarks.KnightsTest$.ChessSet[(Constant -> ProdDataList)].
                                                                    App(App(scalus.benchmarks.KnightsTest$.startTour168
                                                                      Constr(scala.Tuple2[Int, Int],
                                                                          MkCons(IData( x227 )
                                                                          MkCons(IData( y230 ) [
                                                                            (builtin mkNilData)
                                                                            (con unit ())
                                                                          ]))
                                                                        )) size222)
                                                                  ) xIn232))
                                                              ))
                                                          ))in 
                                                        let length235=App(scalus.prelude.List$.length204
                                                          l234)in 
                                                          let __KnightsTest_line_1108238=if
                                                                                           App(App((builtin equalsInteger)
                                                                                             length235)
                                                                                           App(App((builtin multiplyInteger)
                                                                                               size222)
                                                                                             size222))
                                                                                         then
                                                                                           (con unit ())
                                                                                         else
                                                                                           (force [
                                                                                             (force (builtin trace))
                                                                                             (con string "RequirementError")
                                                                                             (delay (error))
                                                                                           ])in 
                                                            App(App(scalus.prelude.List$.zip205
                                                              App(App(scalus.prelude.List$.fill216
                                                                  IData(
                                                                      App(App((builtin subtractInteger)
                                                                        (con integer 1)) length235)
                                                                    )) length235)) l234)
                                                          
                                                        
                                                      
                                                    
                                                  )in 
                                                  let scalus.benchmarks.KnightsTest$.root245=(lam size243:Int -> scalus.benchmarks.KnightsTest$.Queue[scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet]][(Constant -> ProdDataList)].
                                                      App((lam xIn244:scalus.prelude.List[scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet]] -> scalus.benchmarks.KnightsTest$.Queue[scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet]][(SumDataPairList -> ProdDataList)].
                                                          App(App(scalus.benchmarks.KnightsTest$.appendAllFront64
                                                            App(scalus.benchmarks.KnightsTest$.emptyQueue26
                                                              (con unit ())))
                                                          App($TuplesListToDataList6(=
                                                                (letrec fun_$TuplesListToDataList1=(lam list2:scalus.prelude.List[scala.Tuple2[A#2084379728, B#2084379728]] -> scalus.prelude.List[scala.Tuple2[A#2084379728, B#2084379728]][(SumDataPairList -> SumDataList)].
                                                                    force(
                                                                      App(App(ChooseList( list2 )
                                                                        delay(
                                                                            [
                                                                              (builtin mkNilData)
                                                                              (con unit ())
                                                                            ]
                                                                          )) delay(
                                                                          MkCons(ConstrData((con integer 0)
                                                                          MkCons(FstPair(
                                                                            headVal3(=
                                                                              HeadList( list2 )
                                                                            )
                                                                          ) MkCons(SndPair(
                                                                            headVal3
                                                                          ) [
                                                                            (builtin mkNilData)
                                                                            (con unit ())
                                                                          ])))
                                                                          App(fun_$TuplesListToDataList1
                                                                          tailVal4(=
                                                                              TailList( list2 )
                                                                            )))
                                                                        ))
                                                                    )
                                                                  ) in fun_$TuplesListToDataList1 )
                                                              ) xIn244))
                                                        )
                                                      App(scalus.benchmarks.KnightsTest$.makeStarts242
                                                        size243))
                                                    )in 
                                                    (letrec scalus.prelude.List$.find246=(lam self247:scalus.prelude.List[A#82094] -> (A#82094 -> Boolean) -> scalus.prelude.Option[A#82094][(SumDataList -> ((TypeVar -> Constant) -> DataConstr))].
                                                        (lam predicate248:(A#82094 -> Boolean) -> scalus.prelude.Option[A#82094][((TypeVar -> Constant) -> DataConstr)].
                                                          ListMatch{listInput249(=
                                                            var(self247:scalus.prelude.List[A#82094][SumDataList])
                                                          ) matchCons(consHead250(=
                                                                   HeadList( listInput249 )
                                                                 ),consTail251(=
                                                                   TailList( listInput249 )
                                                                 )) =>if App(predicate248
                                                                        cast.repr.proxy(
                                                                            cast.repr.proxy(
                                                                              consHead250
                                                                            :A#82094[TypeVar])
                                                                          :A#82094[TypeVar]))
                                                                      then cast.repr.proxy(
                                                                          cast.repr.proxy(
                                                                            ConstrData((con integer 0)
                                                                            Constr(scalus.prelude.Option$.Some[A#82094],
                                                                              MkCons(cast.repr.proxy(
                                                                                consHead250
                                                                              :A#82094[TypeVar]) [
                                                                                (builtin mkNilData)
                                                                                (con unit ())
                                                                              ])
                                                                            ))
                                                                          :scalus.prelude.Option[*][DataConstr])
                                                                        :scalus.prelude.Option[A#82094][DataConstr])
                                                                      else
                                                                        App(App(scalus.prelude.List$.find246
                                                                          consTail251)
                                                                        predicate248)Nil =>cast.repr.proxy(
                                                                     ConstrData((con integer 1)
                                                                     Constr(scalus.prelude.Option$.None,
                                                                       [
                                                                         (builtin mkNilData)
                                                                         (con unit ())
                                                                       ]
                                                                     ))
                                                                   :scalus.prelude.Option[*][DataConstr])}:scalus.prelude.Option[A#82094]
                                                        )
                                                      ) in
                                                      let scalus.prelude.Option$.isEmpty260=(lam self255:scalus.prelude.Option[A#96747] -> Boolean[(DataConstr -> Constant)].
                                                          if EqualsInteger(_match_constr_idx257(=
                                                              FstPair(
                                                                _match_scrutinee256(=
                                                                  UnConstrData( self255 )
                                                                )
                                                              )
                                                            ) (con integer 0)) then (con bool False)
                                                          else if EqualsInteger(_match_constr_idx257
                                                                 (con integer 1))
                                                               then (con bool True)
                                                               else (force [
                                                                   (force (builtin trace))
                                                                   (con string "Incorrect constructor index for type scalus.prelude.Option[A#96747]")
                                                                   (delay (error))
                                                                 ])
                                                        )in 
                                                        let scalus.prelude.List$.contains270=(lam self261:scalus.prelude.List[A#96432] -> B#96434 -> (B#96434 -> B#96434 -> Boolean) -> Boolean[(SumDataList -> (TypeVar -> ((TypeVar -> (TypeVar -> Constant)) -> Constant)))].
                                                            (lam elem262:B#96434 -> (B#96434 -> B#96434 -> Boolean) -> Boolean[(TypeVar -> ((TypeVar -> (TypeVar -> Constant)) -> Constant))].
                                                              (lam eq263:(B#96434 -> B#96434 -> Boolean) -> Boolean[((TypeVar -> (TypeVar -> Constant)) -> Constant)].
                                                                let self$proxy7269=App(App(scalus.prelude.List$.find246
                                                                    self261)
                                                                  (lam _$1266:A#96432 -> Boolean[(TypeVar -> Constant)].
                                                                      App(App(eq263 cast.repr.proxy(
                                                                            cast.repr.proxy(
                                                                              _$1266
                                                                            :A#96432[TypeVar])
                                                                          :B#96434[TypeVar]))
                                                                      cast.repr.proxy(
                                                                          cast.repr.proxy(
                                                                            elem262
                                                                          :B#96434[TypeVar])
                                                                        :B#96434[TypeVar]))
                                                                    ))in 
                                                                  if
                                                                    App(scalus.prelude.Option$.isEmpty260
                                                                    self$proxy7269)
                                                                  then (con bool False)
                                                                  else (con bool True)
                                                                
                                                              )
                                                            )
                                                          )in 
                                                          let scalus.prelude.EqCompanion$.by277=(lam mapper271:(A#252106 -> B#252107) -> (B#252107 -> B#252107 -> Boolean) -> A#252106 -> A#252106 -> Boolean[((TypeVar -> TypeVar) -> ((TypeVar -> (TypeVar -> Constant)) -> (TypeVar -> (TypeVar -> Constant))))].
                                                              (lam evidence$1272:(B#252107 -> B#252107 -> Boolean) -> A#252106 -> A#252106 -> Boolean[((TypeVar -> (TypeVar -> Constant)) -> (TypeVar -> (TypeVar -> Constant)))].
                                                                (lam lhs273:A#252106 -> A#252106 -> Boolean[(TypeVar -> (TypeVar -> Constant))].
                                                                  (lam rhs274:A#252106 -> Boolean[(TypeVar -> Constant)].
                                                                    let x$proxy3275=App(mapper271
                                                                      cast.repr.proxy(
                                                                          cast.repr.proxy(
                                                                            lhs273
                                                                          :A#252106[TypeVar])
                                                                        :A#252106[TypeVar]))in 
                                                                      App(App(evidence$1272
                                                                        cast.repr.proxy(
                                                                            cast.repr.proxy(
                                                                              x$proxy3275
                                                                            :B#252107[TypeVar])
                                                                          :B#252107[TypeVar]))
                                                                      cast.repr.proxy(
                                                                          App(mapper271
                                                                          cast.repr.proxy(
                                                                              cast.repr.proxy(
                                                                                rhs274
                                                                              :A#252106[TypeVar])
                                                                            :A#252106[TypeVar]))
                                                                        :B#252107[TypeVar]))
                                                                    
                                                                  )
                                                                )
                                                              )
                                                            )in 
                                                            let scalus.prelude.EqCompanion$.orElseBy296=(lam self278:(A#252127 -> A#252127 -> Boolean) -> (A#252127 -> B#252129) -> (B#252129 -> B#252129 -> Boolean) -> A#252127 -> A#252127 -> Boolean[((TypeVar -> (TypeVar -> Constant)) -> ((TypeVar -> TypeVar) -> ((TypeVar -> (TypeVar -> Constant)) -> (TypeVar -> (TypeVar -> Constant)))))].
                                                                (lam mapper279:(A#252127 -> B#252129) -> (B#252129 -> B#252129 -> Boolean) -> A#252127 -> A#252127 -> Boolean[((TypeVar -> TypeVar) -> ((TypeVar -> (TypeVar -> Constant)) -> (TypeVar -> (TypeVar -> Constant))))].
                                                                  (lam evidence$1280:(B#252129 -> B#252129 -> Boolean) -> A#252127 -> A#252127 -> Boolean[((TypeVar -> (TypeVar -> Constant)) -> (TypeVar -> (TypeVar -> Constant)))].
                                                                    (lam lhs281:A#252127 -> A#252127 -> Boolean[(TypeVar -> (TypeVar -> Constant))].
                                                                      (lam rhs282:A#252127 -> Boolean[(TypeVar -> Constant)].
                                                                        if App(App(self278
                                                                            cast.repr.proxy(
                                                                                cast.repr.proxy(
                                                                                  lhs281
                                                                                :A#252127[TypeVar])
                                                                              :A#252127[TypeVar]))
                                                                          cast.repr.proxy(
                                                                              cast.repr.proxy(
                                                                                rhs282
                                                                              :A#252127[TypeVar])
                                                                            :A#252127[TypeVar]))
                                                                        then
                                                                          let self$proxy12294=App(App(scalus.prelude.EqCompanion$.by277
                                                                              mapper279)
                                                                            evidence$1280)in 
                                                                            App(App(self$proxy12294
                                                                              cast.repr.proxy(
                                                                                  cast.repr.proxy(
                                                                                    lhs281
                                                                                  :A#252127[TypeVar])
                                                                                :A#252127[TypeVar]))
                                                                            cast.repr.proxy(
                                                                                cast.repr.proxy(
                                                                                  rhs282
                                                                                :A#252127[TypeVar])
                                                                              :A#252127[TypeVar]))
                                                                           else (con bool False)
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )in 
                                                              let scalus.prelude.EqCompanion$.given_Eq_A_B330=(lam evidence$1297:(A#252102 -> A#252102 -> Boolean) -> (B#252103 -> B#252103 -> Boolean) -> scala.Tuple2[A#252102, B#252103] -> scala.Tuple2[A#252102, B#252103] -> Boolean[((TypeVar -> (TypeVar -> Constant)) -> ((TypeVar -> (TypeVar -> Constant)) -> (ProdDataList -> (ProdDataList -> Constant))))].
                                                                  (lam evidence$2298:(B#252103 -> B#252103 -> Boolean) -> scala.Tuple2[A#252102, B#252103] -> scala.Tuple2[A#252102, B#252103] -> Boolean[((TypeVar -> (TypeVar -> Constant)) -> (ProdDataList -> (ProdDataList -> Constant)))].
                                                                    App(App((lam xIn312:(scala.Tuple2[A#252102, B#252103] -> B#252131) -> (B#252131 -> B#252131 -> Boolean) -> scala.Tuple2[A#252102, B#252103] -> scala.Tuple2[A#252102, B#252103] -> Boolean[((ProdDataList -> TypeVar) -> ((TypeVar -> (TypeVar -> Constant)) -> (ProdDataList -> (ProdDataList -> Constant))))].
                                                                          (lam xIn314:(B#252131 -> B#252131 -> Boolean) -> scala.Tuple2[A#252102, B#252103] -> scala.Tuple2[A#252102, B#252103] -> Boolean[((TypeVar -> (TypeVar -> Constant)) -> (ProdDataList -> (ProdDataList -> Constant)))].
                                                                            (lam xIn317:scala.Tuple2[A#252102, B#252103] -> scala.Tuple2[A#252102, B#252103] -> Boolean[(ProdDataList -> (ProdDataList -> Constant))].
                                                                              (lam xIn318:scala.Tuple2[A#252102, B#252103] -> Boolean[(ProdDataList -> Constant)].
                                                                                App(App(App(App(App(scalus.prelude.EqCompanion$.orElseBy296
                                                                                        (lam xIn310:scala.Tuple2[A#252102, B#252103] -> scala.Tuple2[A#252102, B#252103] -> Boolean[(TypeVar -> (TypeVar -> Constant))].
                                                                                            (lam xIn311:scala.Tuple2[A#252102, B#252103] -> Boolean[(TypeVar -> Constant)].
                                                                                              App(App(App((lam xIn301:(B#252109 -> A#252102 -> Boolean) -> scala.Tuple2[A#252102, B#252103] -> scala.Tuple2[A#252102, B#252103] -> Boolean[((TypeVar -> (TypeVar -> Constant)) -> (ProdDataList -> (ProdDataList -> Constant)))].
                                                                                                      (lam xIn304:scala.Tuple2[A#252102, B#252103] -> scala.Tuple2[A#252102, B#252103] -> Boolean[(ProdDataList -> (ProdDataList -> Constant))].
                                                                                                        (lam xIn305:scala.Tuple2[A#252102, B#252103] -> Boolean[(ProdDataList -> Constant)].
                                                                                                          App(App(App(App(scalus.prelude.EqCompanion$.by277
                                                                                                                (lam xIn300:scala.Tuple2[A#252102, B#252103] -> A#252102[(TypeVar -> TypeVar)].
                                                                                                                    App((lam _$17299:scala.Tuple2[A#252102, B#252103] -> A#252102[(ProdDataList -> TypeVar)].
                                                                                                                        HeadList(
                                                                                                                          _$17299
                                                                                                                        )
                                                                                                                      )
                                                                                                                    SndPair(
                                                                                                                        UnConstrData(
                                                                                                                          repr.proxy(
                                                                                                                            xIn300
                                                                                                                          [ProdDataConstr])
                                                                                                                        )
                                                                                                                      ))
                                                                                                                  ))
                                                                                                              xIn301)
                                                                                                            ConstrData((con integer 0)
                                                                                                              xIn304))
                                                                                                          ConstrData((con integer 0)
                                                                                                            xIn305))
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  evidence$1297)
                                                                                                SndPair(
                                                                                                    UnConstrData(
                                                                                                      repr.proxy(
                                                                                                        xIn310
                                                                                                      [ProdDataConstr])
                                                                                                    )
                                                                                                  ))
                                                                                              SndPair(
                                                                                                  UnConstrData(
                                                                                                    repr.proxy(
                                                                                                      xIn311
                                                                                                    [ProdDataConstr])
                                                                                                  )
                                                                                                ))
                                                                                            )
                                                                                          ))
                                                                                      (lam xIn313:scala.Tuple2[A#252102, B#252103] -> B#252131[(TypeVar -> TypeVar)].
                                                                                          App(xIn312
                                                                                          SndPair(
                                                                                              UnConstrData(
                                                                                                repr.proxy(
                                                                                                  xIn313
                                                                                                [ProdDataConstr])
                                                                                              )
                                                                                            ))
                                                                                        )) xIn314)
                                                                                  ConstrData((con integer 0)
                                                                                    xIn317))
                                                                                ConstrData((con integer 0)
                                                                                  xIn318))
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      (lam _$18319:scala.Tuple2[A#252102, B#252103] -> B#252103[(ProdDataList -> TypeVar)].
                                                                          HeadList(
                                                                            _$18319_tail_1(=
                                                                              TailList( _$18319 )
                                                                            )
                                                                          )
                                                                        )) evidence$2298)
                                                                  )
                                                                )in 
                                                                let scalus.benchmarks.KnightsTest$.isSquareFree359=(lam self331:scalus.benchmarks.KnightsTest$.ChessSet -> scala.Tuple2[Int, Int] -> Boolean[(ProdDataList -> (ProdDataList -> Constant))].
                                                                    (lam tile332:scala.Tuple2[Int, Int] -> Boolean[(ProdDataList -> Constant)].
                                                                      if
                                                                        App((lam xIn337:(scala.Tuple2[Int, Int] -> scala.Tuple2[Int, Int] -> Boolean) -> Boolean[((ProdDataList -> (ProdDataList -> Constant)) -> Constant)].
                                                                            App(App(App(scalus.prelude.List$.contains270
                                                                                App($TuplesListToDataList6
                                                                                  UnMapData(
                                                                                      HeadList(
                                                                                        self331_tail_3(=
                                                                                          TailList(
                                                                                            self331_tail_2(=
                                                                                              TailList(
                                                                                                self331_tail_1(=
                                                                                                  TailList(
                                                                                                    self331
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )))
                                                                              ConstrData((con integer 0)
                                                                                tile332))
                                                                            (lam xIn338:scala.Tuple2[Int, Int] -> scala.Tuple2[Int, Int] -> Boolean[(TypeVar -> (TypeVar -> Constant))].
                                                                                (lam xIn339:scala.Tuple2[Int, Int] -> Boolean[(TypeVar -> Constant)].
                                                                                  App(App(xIn337
                                                                                    SndPair(
                                                                                        UnConstrData(
                                                                                          repr.proxy(
                                                                                            xIn338
                                                                                          [ProdDataConstr])
                                                                                        )
                                                                                      )) SndPair(
                                                                                      UnConstrData(
                                                                                        repr.proxy(
                                                                                          xIn339
                                                                                        [ProdDataConstr])
                                                                                      )
                                                                                    ))
                                                                                )
                                                                              ))
                                                                          )
                                                                        App((lam xIn345:(Int -> Int -> Boolean) -> scala.Tuple2[Int, Int] -> scala.Tuple2[Int, Int] -> Boolean[((Constant -> (Constant -> Constant)) -> (ProdDataList -> (ProdDataList -> Constant)))].
                                                                              App(App(scalus.prelude.EqCompanion$.given_Eq_A_B330
                                                                                (lam xIn343:Int -> Int -> Boolean[(TypeVar -> (TypeVar -> Constant))].
                                                                                    (lam xIn344:Int -> Boolean[(TypeVar -> Constant)].
                                                                                      App(App((lam i1340:Int -> Int -> Boolean[(Constant -> (Constant -> Constant))].
                                                                                            (lam i2341:Int -> Boolean[(Constant -> Constant)].
                                                                                              App(App((builtin equalsInteger)
                                                                                                i1340)
                                                                                              i2341)
                                                                                            )
                                                                                          ) UnIData(
                                                                                            xIn343
                                                                                          ))
                                                                                      UnIData(
                                                                                          xIn344
                                                                                        ))
                                                                                    )
                                                                                  ))
                                                                              (lam xIn346:Int -> Int -> Boolean[(TypeVar -> (TypeVar -> Constant))].
                                                                                  (lam xIn347:Int -> Boolean[(TypeVar -> Constant)].
                                                                                    App(App(xIn345
                                                                                      UnIData(
                                                                                          xIn346
                                                                                        )) UnIData(
                                                                                        xIn347
                                                                                      ))
                                                                                  )
                                                                                ))
                                                                            )
                                                                          (lam i1350:Int -> Int -> Boolean[(Constant -> (Constant -> Constant))].
                                                                              (lam i2351:Int -> Boolean[(Constant -> Constant)].
                                                                                App(App((builtin equalsInteger)
                                                                                  i1350) i2351)
                                                                              )
                                                                            )))
                                                                      then (con bool False)
                                                                      else (con bool True)
                                                                    )
                                                                  )in 
                                                                  let scalus.benchmarks.KnightsTest$.canMoveTo373=(lam self360:scalus.benchmarks.KnightsTest$.ChessSet -> scala.Tuple2[Int, Int] -> Boolean[(ProdDataList -> (ProdDataList -> Constant))].
                                                                      (lam tile361:scala.Tuple2[Int, Int] -> Boolean[(ProdDataList -> Constant)].
                                                                        let $2$364=Constr(scala.Tuple2[Int, Int],
                                                                            MkCons(cast.repr.proxy(
                                                                              x362(=
                                                                                HeadList( tile361 )
                                                                              )
                                                                            :Int[PackedData])
                                                                            MkCons(cast.repr.proxy(
                                                                              y363(=
                                                                                HeadList(
                                                                                  tile361_t(=
                                                                                    TailList(
                                                                                      tile361
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            :Int[PackedData]) [
                                                                              (builtin mkNilData)
                                                                              (con unit ())
                                                                            ]))
                                                                          )in 
                                                                          let x365=HeadList(
                                                                              $2$364
                                                                            )in 
                                                                            let y366=HeadList(
                                                                                $2$364_tail_1(=
                                                                                  TailList( $2$364 )
                                                                                )
                                                                              )in 
                                                                              let size367=HeadList(
                                                                                  self360
                                                                                )in 
                                                                                if if if if
                                                                                           App(App((builtin lessThanEqualsInteger)
                                                                                             (con integer 1))
                                                                                           UnIData(
                                                                                               x365
                                                                                             ))
                                                                                         then
                                                                                           App(App((builtin lessThanEqualsInteger)
                                                                                             UnIData(
                                                                                                 x365
                                                                                               ))
                                                                                           UnIData(
                                                                                               size367
                                                                                             ))
                                                                                         else
                                                                                           (con bool False)
                                                                                      then
                                                                                        App(App((builtin lessThanEqualsInteger)
                                                                                          (con integer 1))
                                                                                        UnIData(
                                                                                            y366
                                                                                          ))
                                                                                      else
                                                                                        (con bool False)
                                                                                   then
                                                                                     App(App((builtin lessThanEqualsInteger)
                                                                                       UnIData(
                                                                                           y366
                                                                                         )) UnIData(
                                                                                         size367
                                                                                       ))
                                                                                   else
                                                                                     (con bool False)
                                                                                then
                                                                                  App(App(scalus.benchmarks.KnightsTest$.isSquareFree359
                                                                                    self360)
                                                                                  tile361)
                                                                                else
                                                                                  (con bool False)
                                                                              
                                                                            
                                                                          
                                                                        
                                                                      )
                                                                    )in 
                                                                    let scalus.prelude.List$.reverse386=(lam self374:scalus.prelude.List[A#96480] -> scalus.prelude.List[A#96480][(SumDataList -> SumDataList)].
                                                                        App((lam xIn379:(scalus.prelude.List[A#96480] -> A#96484 -> scalus.prelude.List[A#96480]) -> scalus.prelude.List[A#96480][((SumDataList -> (TypeVar -> SumDataList)) -> SumDataList)].
                                                                            UnListData(
                                                                              repr.proxy(
                                                                                App(App(App(scalus.prelude.List$.foldLeft169
                                                                                    self374)
                                                                                  repr.proxy(
                                                                                      ListData(
                                                                                        cast.repr.proxy(
                                                                                          cast.repr.proxy(
                                                                                            [
                                                                                              (builtin mkNilData)
                                                                                              (con unit ())
                                                                                            ]
                                                                                          :scalus.prelude.List[*][SumDataList])
                                                                                        :scalus.prelude.List[A#96480][SumDataList])
                                                                                      )
                                                                                    [TypeVar]))
                                                                                (lam xIn380:scalus.prelude.List[A#96480] -> A#96484 -> scalus.prelude.List[A#96480][(TypeVar -> (TypeVar -> TypeVar))].
                                                                                    (lam xIn381:A#96484 -> scalus.prelude.List[A#96480][(TypeVar -> TypeVar)].
                                                                                      repr.proxy(
                                                                                        ListData(
                                                                                          App(App(xIn379
                                                                                            UnListData(
                                                                                                repr.proxy(
                                                                                                  xIn380
                                                                                                [PackedSumDataList])
                                                                                              ))
                                                                                          xIn381)
                                                                                        )
                                                                                      [TypeVar])
                                                                                    )
                                                                                  ))
                                                                              [PackedSumDataList])
                                                                            )
                                                                          )
                                                                        (lam acc382:scalus.prelude.List[A#96480] -> A#96480 -> scalus.prelude.List[A#96480][(SumDataList -> (TypeVar -> SumDataList))].
                                                                            (lam elem383:A#96480 -> scalus.prelude.List[A#96480][(TypeVar -> SumDataList)].
                                                                              cast.repr.proxy(
                                                                                cast.repr.proxy(
                                                                                  MkCons(cast.repr.proxy(
                                                                                    elem383
                                                                                  :A#96480[TypeVar])
                                                                                  acc382)
                                                                                :scalus.prelude.List[*][SumDataList])
                                                                              :scalus.prelude.List[A#96480][SumDataList])
                                                                            )
                                                                          ))
                                                                      )in 
                                                                      let scalus.prelude.List$.dropRight404=(lam self387:scalus.prelude.List[A#96638] -> Int -> scalus.prelude.List[A#96638][(SumDataList -> (Constant -> SumDataList))].
                                                                          (lam skip388:Int -> scalus.prelude.List[A#96638][(Constant -> SumDataList)].
                                                                            if
                                                                              App(App((builtin lessThanEqualsInteger)
                                                                                skip388)
                                                                              (con integer 0))
                                                                            then self387
                                                                            else UnListData(
                                                                                HeadList(
                                                                                  list_sel403(=
                                                                                    App((lam xIn394:(A#96642 -> scala.Tuple2[scalus.prelude.List[A#96638], Int] -> scala.Tuple2[scalus.prelude.List[A#96638], Int]) -> scala.Tuple2[scalus.prelude.List[A#96638], Int][((TypeVar -> (ProdDataList -> ProdDataList)) -> ProdDataList)].
                                                                                        SndPair(
                                                                                          UnConstrData(
                                                                                            repr.proxy(
                                                                                              App(App(App(scalus.prelude.List$.foldRight108
                                                                                                  self387)
                                                                                                ConstrData((con integer 0)
                                                                                                  Constr(scala.Tuple2[scalus.prelude.List[A#96638], Int],
                                                                                                    MkCons(ListData(
                                                                                                      cast.repr.proxy(
                                                                                                        cast.repr.proxy(
                                                                                                          [
                                                                                                            (builtin mkNilData)
                                                                                                            (con unit ())
                                                                                                          ]
                                                                                                        :scalus.prelude.List[*][SumDataList])
                                                                                                      :scalus.prelude.List[A#96638][SumDataList])
                                                                                                    )
                                                                                                    MkCons(IData(
                                                                                                      skip388
                                                                                                    )
                                                                                                    [
                                                                                                      (builtin mkNilData)
                                                                                                      (con unit ())
                                                                                                    ]))
                                                                                                  )))
                                                                                              repr.proxy(
                                                                                                  (lam xIn395:A#96642 -> scala.Tuple2[scalus.prelude.List[A#96638], Int] -> scala.Tuple2[scalus.prelude.List[A#96638], Int][(TypeVar -> (TypeVar -> ProdDataConstr))].
                                                                                                    (lam xIn396:scala.Tuple2[scalus.prelude.List[A#96638], Int] -> scala.Tuple2[scalus.prelude.List[A#96638], Int][(TypeVar -> ProdDataConstr)].
                                                                                                      ConstrData((con integer 0)
                                                                                                      App(App(xIn394
                                                                                                        xIn395)
                                                                                                      SndPair(
                                                                                                          UnConstrData(
                                                                                                            repr.proxy(
                                                                                                              xIn396
                                                                                                            [ProdDataConstr])
                                                                                                          )
                                                                                                        )))
                                                                                                    )
                                                                                                  )
                                                                                                [(TypeVar -> (TypeVar -> TypeVar))]))
                                                                                            [ProdDataConstr])
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    (lam head397:A#96638 -> scala.Tuple2[scalus.prelude.List[A#96638], Int] -> scala.Tuple2[scalus.prelude.List[Nothing], Int][(TypeVar -> (ProdDataList -> ProdDataList))].
                                                                                      (lam acc398:scala.Tuple2[scalus.prelude.List[A#96638], Int] -> scala.Tuple2[scalus.prelude.List[Nothing], Int][(ProdDataList -> ProdDataList)].
                                                                                        if
                                                                                          App(App((builtin lessThanInteger)
                                                                                            (con integer 0))
                                                                                          UnIData(
                                                                                              HeadList(
                                                                                                acc398_tail_1(=
                                                                                                  TailList(
                                                                                                    acc398
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            ))
                                                                                        then
                                                                                          Constr(scala.Tuple2[scalus.prelude.List[Nothing], Int],
                                                                                            MkCons(ListData(
                                                                                              [
                                                                                                (builtin mkNilData)
                                                                                                (con unit ())
                                                                                              ]
                                                                                            )
                                                                                            MkCons(IData(
                                                                                              App(App((builtin subtractInteger)
                                                                                                UnIData(
                                                                                                    HeadList(
                                                                                                      acc398_tail_1
                                                                                                    )
                                                                                                  ))
                                                                                              (con integer 1))
                                                                                            ) [
                                                                                              (builtin mkNilData)
                                                                                              (con unit ())
                                                                                            ]))
                                                                                          )
                                                                                        else
                                                                                          Constr(scala.Tuple2[scalus.prelude.List[A#96638], Int],
                                                                                            MkCons(ListData(
                                                                                              cast.repr.proxy(
                                                                                                cast.repr.proxy(
                                                                                                  MkCons(cast.repr.proxy(
                                                                                                    head397
                                                                                                  :A#96638[TypeVar])
                                                                                                  UnListData(
                                                                                                    HeadList(
                                                                                                      acc398
                                                                                                    )
                                                                                                  ))
                                                                                                :scalus.prelude.List[*][SumDataList])
                                                                                              :scalus.prelude.List[A#96638][SumDataList])
                                                                                            )
                                                                                            MkCons(HeadList(
                                                                                              acc398_tail_1
                                                                                            ) [
                                                                                              (builtin mkNilData)
                                                                                              (con unit ())
                                                                                            ]))
                                                                                          )
                                                                                      )
                                                                                    ))
                                                                                    :scala.Tuple2[scalus.prelude.List[Nothing], Int][ProdDataList]
                                                                                    
                                                                                  )
                                                                                )
                                                                              )
                                                                          )
                                                                        )in 
                                                                        let scalus.benchmarks.KnightsTest$.deleteFirst417=(lam self405:scalus.benchmarks.KnightsTest$.ChessSet -> scalus.benchmarks.KnightsTest$.ChessSet[(ProdDataList -> ProdDataList)].
                                                                            let secondLast413=(lam self406:scalus.prelude.List[A#30221] -> scalus.prelude.Option[A#30221][(SumDataList -> DataConstr)].
                                                                                ListMatch{listInput407(=
                                                                                  App(scalus.prelude.List$.reverse386
                                                                                  self406)
                                                                                  : [A#96481] =>> scalus.prelude.List[A#96481][SumDataList]
                                                                                  
                                                                                ) matchCons(consHead408(=
                                                                                         HeadList(
                                                                                           listInput407
                                                                                         )
                                                                                       ),consTail409(=
                                                                                         TailList(
                                                                                           listInput407
                                                                                         )
                                                                                       )) =>ListMatch{listInput410(=
                                                                                           var(consTail409:scalus.prelude.List[A#30221][SumDataList])(=
                                                                                             TailList(
                                                                                               listInput407
                                                                                             )
                                                                                           )
                                                                                         ) matchCons(consHead411(=
                                                                                                  HeadList(
                                                                                                    listInput410
                                                                                                  )
                                                                                                ),consTail412(=
                                                                                                  TailList(
                                                                                                    listInput410
                                                                                                  )
                                                                                                )) =>cast.repr.proxy(
                                                                                                    cast.repr.proxy(
                                                                                                      ConstrData((con integer 0)
                                                                                                      Constr(scalus.prelude.Option$.Some[A#30221],
                                                                                                        MkCons(cast.repr.proxy(
                                                                                                          consHead411
                                                                                                        :A#30221[TypeVar])
                                                                                                        [
                                                                                                          (builtin mkNilData)
                                                                                                          (con unit ())
                                                                                                        ])
                                                                                                      ))
                                                                                                    :scalus.prelude.Option[*][DataConstr])
                                                                                                  :scalus.prelude.Option[A#30221][DataConstr])Nil =>cast.repr.proxy(
                                                                                                    ConstrData((con integer 1)
                                                                                                    Constr(scalus.prelude.Option$.None,
                                                                                                      [
                                                                                                        (builtin mkNilData)
                                                                                                        (con unit ())
                                                                                                      ]
                                                                                                    ))
                                                                                                  :scalus.prelude.Option[*][DataConstr])}:scalus.prelude.Option[A#30221]Nil =>(force [
                                                                                           (force (builtin trace))
                                                                                           (con string "OnchainError")
                                                                                           (delay (error))
                                                                                         ])}:scalus.prelude.Option[A#30221]
                                                                              )in 
                                                                              let newVisited415=if
                                                                                                  App(scalus.prelude.List$.isEmpty22
                                                                                                  App($TuplesListToDataList6
                                                                                                    UnMapData(
                                                                                                        HeadList(
                                                                                                          self405_tail_3(=
                                                                                                            TailList(
                                                                                                              self405_tail_2(=
                                                                                                                TailList(
                                                                                                                  self405_tail_1(=
                                                                                                                    TailList(
                                                                                                                      self405
                                                                                                                    )
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )))
                                                                                                then
                                                                                                  (force [
                                                                                                    (force (builtin trace))
                                                                                                    (con string "init of empty list")
                                                                                                    (delay (error))
                                                                                                  ])
                                                                                                else
                                                                                                  App((lam xIn414:Int -> scalus.prelude.List[scala.Tuple2[Int, Int]][(Constant -> SumDataPairList)].
                                                                                                      App($dataListToTuplesList14
                                                                                                      App(App(scalus.prelude.List$.dropRight404
                                                                                                          App($TuplesListToDataList6
                                                                                                            UnMapData(
                                                                                                                HeadList(
                                                                                                                  self405_tail_3
                                                                                                                )
                                                                                                              )))
                                                                                                        xIn414))
                                                                                                    )
                                                                                                  (con integer 1))in
                                                                              
                                                                                Constr(scalus.benchmarks.KnightsTest$.ChessSet,
                                                                                  MkCons(HeadList(
                                                                                    self405
                                                                                  ) MkCons(IData(
                                                                                    App(App((builtin subtractInteger)
                                                                                      UnIData(
                                                                                          HeadList(
                                                                                            self405_tail_1
                                                                                          )
                                                                                        ))
                                                                                    (con integer 1))
                                                                                  )
                                                                                  MkCons(App(secondLast413
                                                                                  App($TuplesListToDataList6
                                                                                    UnMapData(
                                                                                        HeadList(
                                                                                          self405_tail_3
                                                                                        )
                                                                                      )))
                                                                                  MkCons(MapData(
                                                                                    newVisited415
                                                                                  ) [
                                                                                    (builtin mkNilData)
                                                                                    (con unit ())
                                                                                  ]))))
                                                                                )
                                                                              
                                                                            
                                                                          )in 
                                                                          let scalus.prelude.Option$.get423=(lam self418:scalus.prelude.Option[A#96759] -> Nothing[(DataConstr -> TypeVar)].
                                                                              if
                                                                                EqualsInteger(_match_constr_idx420(=
                                                                                  FstPair(
                                                                                    _match_scrutinee419(=
                                                                                      UnConstrData(
                                                                                        self418
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                ) (con integer 0))
                                                                              then cast.repr.proxy(
                                                                                  value422(=
                                                                                    HeadList(
                                                                                      _match_datalist421(=
                                                                                        SndPair(
                                                                                          _match_scrutinee419
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                :A#96759[TypeVar])
                                                                              else if
                                                                                     EqualsInteger(_match_constr_idx420
                                                                                     (con integer 1))
                                                                                   then (force [
                                                                                       (force (builtin trace))
                                                                                       (con string "None.get")
                                                                                       (delay (error))
                                                                                     ])
                                                                                   else (force [
                                                                                       (force (builtin trace))
                                                                                       (con string "Incorrect constructor index for type scalus.prelude.Option[A#96759]")
                                                                                       (delay (error))
                                                                                     ])
                                                                            )in 
                                                                            let scalus.benchmarks.KnightsTest$.firstPiece425=(lam self424:scalus.benchmarks.KnightsTest$.ChessSet -> scala.Tuple2[Int, Int][(ProdDataList -> TypeVar)].
                                                                                App(scalus.prelude.Option$.get423
                                                                                HeadList(
                                                                                    self424_tail_2(=
                                                                                      TailList(
                                                                                        self424_tail_1(=
                                                                                          TailList(
                                                                                            self424
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  ))
                                                                              )in 
                                                                              let scalus.benchmarks.KnightsTest$.canJumpFirst428=(lam self426:scalus.benchmarks.KnightsTest$.ChessSet -> Boolean[(ProdDataList -> Constant)].
                                                                                  App(App(scalus.benchmarks.KnightsTest$.canMoveTo373
                                                                                    App(scalus.benchmarks.KnightsTest$.deleteFirst417
                                                                                      self426))
                                                                                  SndPair(
                                                                                      UnConstrData(
                                                                                        repr.proxy(
                                                                                          App(scalus.benchmarks.KnightsTest$.firstPiece425
                                                                                          self426)
                                                                                        [ProdDataConstr])
                                                                                      )
                                                                                    ))
                                                                                )in 
                                                                                let scalus.prelude.List$.filter442=(lam self429:scalus.prelude.List[A#82104] -> (A#82104 -> Boolean) -> scalus.prelude.List[A#82104][(SumDataList -> ((TypeVar -> Constant) -> SumDataList))].
                                                                                    (lam predicate430:(A#82104 -> Boolean) -> scalus.prelude.List[A#82104][((TypeVar -> Constant) -> SumDataList)].
                                                                                      App((lam xIn435:(A#94634 -> scalus.prelude.List[A#82104] -> scalus.prelude.List[A#82104]) -> scalus.prelude.List[A#82104][((TypeVar -> (SumDataList -> SumDataList)) -> SumDataList)].
                                                                                          UnListData(
                                                                                            repr.proxy(
                                                                                              App(App(App(scalus.prelude.List$.foldRight108
                                                                                                  self429)
                                                                                                repr.proxy(
                                                                                                    ListData(
                                                                                                      cast.repr.proxy(
                                                                                                        cast.repr.proxy(
                                                                                                          [
                                                                                                            (builtin mkNilData)
                                                                                                            (con unit ())
                                                                                                          ]
                                                                                                        :scalus.prelude.List[*][SumDataList])
                                                                                                      :scalus.prelude.List[A#82104][SumDataList])
                                                                                                    )
                                                                                                  [TypeVar]))
                                                                                              (lam xIn436:A#94634 -> scalus.prelude.List[A#82104] -> scalus.prelude.List[A#82104][(TypeVar -> (TypeVar -> TypeVar))].
                                                                                                  (lam xIn437:scalus.prelude.List[A#82104] -> scalus.prelude.List[A#82104][(TypeVar -> TypeVar)].
                                                                                                    repr.proxy(
                                                                                                      ListData(
                                                                                                        App(App(xIn435
                                                                                                          xIn436)
                                                                                                        UnListData(
                                                                                                            repr.proxy(
                                                                                                              xIn437
                                                                                                            [PackedSumDataList])
                                                                                                          ))
                                                                                                      )
                                                                                                    [TypeVar])
                                                                                                  )
                                                                                                ))
                                                                                            [PackedSumDataList])
                                                                                          )
                                                                                        )
                                                                                      (lam head438:A#82104 -> scalus.prelude.List[A#82104] -> scalus.prelude.List[A#82104][(TypeVar -> (SumDataList -> SumDataList))].
                                                                                          (lam tail439:scalus.prelude.List[A#82104] -> scalus.prelude.List[A#82104][(SumDataList -> SumDataList)].
                                                                                            if
                                                                                              App(predicate430
                                                                                              cast.repr.proxy(
                                                                                                  cast.repr.proxy(
                                                                                                    head438
                                                                                                  :A#82104[TypeVar])
                                                                                                :A#82104[TypeVar]))
                                                                                            then
                                                                                              cast.repr.proxy(
                                                                                                cast.repr.proxy(
                                                                                                  MkCons(cast.repr.proxy(
                                                                                                    head438
                                                                                                  :A#82104[TypeVar])
                                                                                                  tail439)
                                                                                                :scalus.prelude.List[*][SumDataList])
                                                                                              :scalus.prelude.List[A#82104][SumDataList])
                                                                                            else
                                                                                              tail439
                                                                                          )
                                                                                        ))
                                                                                    )
                                                                                  )in 
                                                                                  let scalus.benchmarks.KnightsTest$.directions443=cast.repr.proxy(
                                                                                      cast.repr.proxy(
                                                                                        MkCons(cast.repr.proxy(
                                                                                          ConstrData((con integer 0)
                                                                                          Constr(scalus.benchmarks.KnightsTest$.Direction$.UL,
                                                                                            [
                                                                                              (builtin mkNilData)
                                                                                              (con unit ())
                                                                                            ]
                                                                                          ))
                                                                                        :scalus.benchmarks.KnightsTest$.Direction[DataConstr])
                                                                                        cast.repr.proxy(
                                                                                          cast.repr.proxy(
                                                                                            MkCons(cast.repr.proxy(
                                                                                              ConstrData((con integer 1)
                                                                                              Constr(scalus.benchmarks.KnightsTest$.Direction$.UR,
                                                                                                [
                                                                                                  (builtin mkNilData)
                                                                                                  (con unit ())
                                                                                                ]
                                                                                              ))
                                                                                            :scalus.benchmarks.KnightsTest$.Direction[DataConstr])
                                                                                            cast.repr.proxy(
                                                                                              cast.repr.proxy(
                                                                                                MkCons(cast.repr.proxy(
                                                                                                  ConstrData((con integer 2)
                                                                                                  Constr(scalus.benchmarks.KnightsTest$.Direction$.DL,
                                                                                                    [
                                                                                                      (builtin mkNilData)
                                                                                                      (con unit ())
                                                                                                    ]
                                                                                                  ))
                                                                                                :scalus.benchmarks.KnightsTest$.Direction[DataConstr])
                                                                                                cast.repr.proxy(
                                                                                                  cast.repr.proxy(
                                                                                                    MkCons(cast.repr.proxy(
                                                                                                      ConstrData((con integer 3)
                                                                                                      Constr(scalus.benchmarks.KnightsTest$.Direction$.DR,
                                                                                                        [
                                                                                                          (builtin mkNilData)
                                                                                                          (con unit ())
                                                                                                        ]
                                                                                                      ))
                                                                                                    :scalus.benchmarks.KnightsTest$.Direction[DataConstr])
                                                                                                    cast.repr.proxy(
                                                                                                      cast.repr.proxy(
                                                                                                        MkCons(cast.repr.proxy(
                                                                                                          ConstrData((con integer 4)
                                                                                                          Constr(scalus.benchmarks.KnightsTest$.Direction$.LU,
                                                                                                            [
                                                                                                              (builtin mkNilData)
                                                                                                              (con unit ())
                                                                                                            ]
                                                                                                          ))
                                                                                                        :scalus.benchmarks.KnightsTest$.Direction[DataConstr])
                                                                                                        cast.repr.proxy(
                                                                                                          cast.repr.proxy(
                                                                                                            MkCons(cast.repr.proxy(
                                                                                                              ConstrData((con integer 5)
                                                                                                              Constr(scalus.benchmarks.KnightsTest$.Direction$.LD,
                                                                                                                [
                                                                                                                  (builtin mkNilData)
                                                                                                                  (con unit ())
                                                                                                                ]
                                                                                                              ))
                                                                                                            :scalus.benchmarks.KnightsTest$.Direction[DataConstr])
                                                                                                            cast.repr.proxy(
                                                                                                              cast.repr.proxy(
                                                                                                                MkCons(cast.repr.proxy(
                                                                                                                  ConstrData((con integer 6)
                                                                                                                  Constr(scalus.benchmarks.KnightsTest$.Direction$.RU,
                                                                                                                    [
                                                                                                                      (builtin mkNilData)
                                                                                                                      (con unit ())
                                                                                                                    ]
                                                                                                                  ))
                                                                                                                :scalus.benchmarks.KnightsTest$.Direction[DataConstr])
                                                                                                                cast.repr.proxy(
                                                                                                                  cast.repr.proxy(
                                                                                                                    MkCons(cast.repr.proxy(
                                                                                                                      ConstrData((con integer 7)
                                                                                                                      Constr(scalus.benchmarks.KnightsTest$.Direction$.RD,
                                                                                                                        [
                                                                                                                          (builtin mkNilData)
                                                                                                                          (con unit ())
                                                                                                                        ]
                                                                                                                      ))
                                                                                                                    :scalus.benchmarks.KnightsTest$.Direction[DataConstr])
                                                                                                                    [
                                                                                                                      (builtin mkNilData)
                                                                                                                      (con unit ())
                                                                                                                    ])
                                                                                                                  :scalus.prelude.List[*][SumDataList])
                                                                                                                :scalus.prelude.List[scalus.benchmarks.KnightsTest$.Direction][SumDataList]))
                                                                                                              :scalus.prelude.List[*][SumDataList])
                                                                                                            :scalus.prelude.List[scalus.benchmarks.KnightsTest$.Direction][SumDataList]))
                                                                                                          :scalus.prelude.List[*][SumDataList])
                                                                                                        :scalus.prelude.List[scalus.benchmarks.KnightsTest$.Direction][SumDataList]))
                                                                                                      :scalus.prelude.List[*][SumDataList])
                                                                                                    :scalus.prelude.List[scalus.benchmarks.KnightsTest$.Direction][SumDataList]))
                                                                                                  :scalus.prelude.List[*][SumDataList])
                                                                                                :scalus.prelude.List[scalus.benchmarks.KnightsTest$.Direction][SumDataList]))
                                                                                              :scalus.prelude.List[*][SumDataList])
                                                                                            :scalus.prelude.List[scalus.benchmarks.KnightsTest$.Direction][SumDataList]))
                                                                                          :scalus.prelude.List[*][SumDataList])
                                                                                        :scalus.prelude.List[scalus.benchmarks.KnightsTest$.Direction][SumDataList]))
                                                                                      :scalus.prelude.List[*][SumDataList])
                                                                                    :scalus.prelude.List[scalus.benchmarks.KnightsTest$.Direction][SumDataList])in
                                                                                  
                                                                                    let scalus.benchmarks.KnightsTest$.move470=(lam self444:scala.Tuple2[Int, Int] -> scalus.benchmarks.KnightsTest$.Direction -> scala.Tuple2[Int, Int][(ProdDataList -> (DataConstr -> ProdDataList))].
                                                                                        (lam direction445:scalus.benchmarks.KnightsTest$.Direction -> scala.Tuple2[Int, Int][(DataConstr -> ProdDataList)].
                                                                                          let $1$448=Constr(scala.Tuple2[Int, Int],
                                                                                              MkCons(cast.repr.proxy(
                                                                                                x446(=
                                                                                                  HeadList(
                                                                                                    self444
                                                                                                  )
                                                                                                )
                                                                                              :Int[PackedData])
                                                                                              MkCons(cast.repr.proxy(
                                                                                                y447(=
                                                                                                  HeadList(
                                                                                                    self444_t(=
                                                                                                      TailList(
                                                                                                        self444
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              :Int[PackedData])
                                                                                              [
                                                                                                (builtin mkNilData)
                                                                                                (con unit ())
                                                                                              ]))
                                                                                            )in 
                                                                                            let x449=HeadList(
                                                                                                $1$448
                                                                                              )in 
                                                                                              let y450=HeadList(
                                                                                                  $1$448_tail_1(=
                                                                                                    TailList(
                                                                                                      $1$448
                                                                                                    )
                                                                                                  )
                                                                                                )in 
                                                                                                if
                                                                                                  EqualsInteger(_match_constr_idx452(=
                                                                                                    FstPair(
                                                                                                      _match_scrutinee451(=
                                                                                                        UnConstrData(
                                                                                                          direction445
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                  (con integer 0))
                                                                                                then
                                                                                                  Constr(scala.Tuple2[Int, Int],
                                                                                                    MkCons(IData(
                                                                                                      App(App((builtin subtractInteger)
                                                                                                        UnIData(
                                                                                                            x449
                                                                                                          ))
                                                                                                      (con integer 1))
                                                                                                    )
                                                                                                    MkCons(IData(
                                                                                                      App(App((builtin subtractInteger)
                                                                                                        UnIData(
                                                                                                            y450
                                                                                                          ))
                                                                                                      (con integer 2))
                                                                                                    )
                                                                                                    [
                                                                                                      (builtin mkNilData)
                                                                                                      (con unit ())
                                                                                                    ]))
                                                                                                  )
                                                                                                else
                                                                                                  if
                                                                                                    EqualsInteger(_match_constr_idx452
                                                                                                    (con integer 1))
                                                                                                  then
                                                                                                    Constr(scala.Tuple2[Int, Int],
                                                                                                      MkCons(IData(
                                                                                                        App(App((builtin addInteger)
                                                                                                          UnIData(
                                                                                                              x449
                                                                                                            ))
                                                                                                        (con integer 1))
                                                                                                      )
                                                                                                      MkCons(IData(
                                                                                                        App(App((builtin subtractInteger)
                                                                                                          UnIData(
                                                                                                              y450
                                                                                                            ))
                                                                                                        (con integer 2))
                                                                                                      )
                                                                                                      [
                                                                                                        (builtin mkNilData)
                                                                                                        (con unit ())
                                                                                                      ]))
                                                                                                    )
                                                                                                  else
                                                                                                    if
                                                                                                      EqualsInteger(_match_constr_idx452
                                                                                                      (con integer 2))
                                                                                                    then
                                                                                                      Constr(scala.Tuple2[Int, Int],
                                                                                                        MkCons(IData(
                                                                                                          App(App((builtin subtractInteger)
                                                                                                            UnIData(
                                                                                                                x449
                                                                                                              ))
                                                                                                          (con integer 1))
                                                                                                        )
                                                                                                        MkCons(IData(
                                                                                                          App(App((builtin addInteger)
                                                                                                            UnIData(
                                                                                                                y450
                                                                                                              ))
                                                                                                          (con integer 2))
                                                                                                        )
                                                                                                        [
                                                                                                          (builtin mkNilData)
                                                                                                          (con unit ())
                                                                                                        ]))
                                                                                                      )
                                                                                                    else
                                                                                                      if
                                                                                                        EqualsInteger(_match_constr_idx452
                                                                                                        (con integer 3))
                                                                                                      then
                                                                                                        Constr(scala.Tuple2[Int, Int],
                                                                                                          MkCons(IData(
                                                                                                            App(App((builtin addInteger)
                                                                                                              UnIData(
                                                                                                                  x449
                                                                                                                ))
                                                                                                            (con integer 1))
                                                                                                          )
                                                                                                          MkCons(IData(
                                                                                                            App(App((builtin addInteger)
                                                                                                              UnIData(
                                                                                                                  y450
                                                                                                                ))
                                                                                                            (con integer 2))
                                                                                                          )
                                                                                                          [
                                                                                                            (builtin mkNilData)
                                                                                                            (con unit ())
                                                                                                          ]))
                                                                                                        )
                                                                                                      else
                                                                                                        if
                                                                                                          EqualsInteger(_match_constr_idx452
                                                                                                          (con integer 4))
                                                                                                        then
                                                                                                          Constr(scala.Tuple2[Int, Int],
                                                                                                            MkCons(IData(
                                                                                                              App(App((builtin subtractInteger)
                                                                                                                UnIData(
                                                                                                                    x449
                                                                                                                  ))
                                                                                                              (con integer 2))
                                                                                                            )
                                                                                                            MkCons(IData(
                                                                                                              App(App((builtin subtractInteger)
                                                                                                                UnIData(
                                                                                                                    y450
                                                                                                                  ))
                                                                                                              (con integer 1))
                                                                                                            )
                                                                                                            [
                                                                                                              (builtin mkNilData)
                                                                                                              (con unit ())
                                                                                                            ]))
                                                                                                          )
                                                                                                        else
                                                                                                          if
                                                                                                            EqualsInteger(_match_constr_idx452
                                                                                                            (con integer 5))
                                                                                                          then
                                                                                                            Constr(scala.Tuple2[Int, Int],
                                                                                                              MkCons(IData(
                                                                                                                App(App((builtin subtractInteger)
                                                                                                                  UnIData(
                                                                                                                      x449
                                                                                                                    ))
                                                                                                                (con integer 2))
                                                                                                              )
                                                                                                              MkCons(IData(
                                                                                                                App(App((builtin addInteger)
                                                                                                                  UnIData(
                                                                                                                      y450
                                                                                                                    ))
                                                                                                                (con integer 1))
                                                                                                              )
                                                                                                              [
                                                                                                                (builtin mkNilData)
                                                                                                                (con unit ())
                                                                                                              ]))
                                                                                                            )
                                                                                                          else
                                                                                                            if
                                                                                                              EqualsInteger(_match_constr_idx452
                                                                                                              (con integer 6))
                                                                                                            then
                                                                                                              Constr(scala.Tuple2[Int, Int],
                                                                                                                MkCons(IData(
                                                                                                                  App(App((builtin addInteger)
                                                                                                                    UnIData(
                                                                                                                        x449
                                                                                                                      ))
                                                                                                                  (con integer 2))
                                                                                                                )
                                                                                                                MkCons(IData(
                                                                                                                  App(App((builtin subtractInteger)
                                                                                                                    UnIData(
                                                                                                                        y450
                                                                                                                      ))
                                                                                                                  (con integer 1))
                                                                                                                )
                                                                                                                [
                                                                                                                  (builtin mkNilData)
                                                                                                                  (con unit ())
                                                                                                                ]))
                                                                                                              )
                                                                                                            else
                                                                                                              if
                                                                                                                EqualsInteger(_match_constr_idx452
                                                                                                                (con integer 7))
                                                                                                              then
                                                                                                                Constr(scala.Tuple2[Int, Int],
                                                                                                                  MkCons(IData(
                                                                                                                    App(App((builtin addInteger)
                                                                                                                      UnIData(
                                                                                                                          x449
                                                                                                                        ))
                                                                                                                    (con integer 2))
                                                                                                                  )
                                                                                                                  MkCons(IData(
                                                                                                                    App(App((builtin addInteger)
                                                                                                                      UnIData(
                                                                                                                          y450
                                                                                                                        ))
                                                                                                                    (con integer 1))
                                                                                                                  )
                                                                                                                  [
                                                                                                                    (builtin mkNilData)
                                                                                                                    (con unit ())
                                                                                                                  ]))
                                                                                                                )
                                                                                                              else
                                                                                                                (force [
                                                                                                                  (force (builtin trace))
                                                                                                                  (con string "Incorrect constructor index for type scalus.benchmarks.KnightsTest$.Direction")
                                                                                                                  (delay (error))
                                                                                                                ])
                                                                                              
                                                                                            
                                                                                          
                                                                                        )
                                                                                      )in 
                                                                                      let scalus.benchmarks.KnightsTest$.lastPiece472=(lam self471:scalus.benchmarks.KnightsTest$.ChessSet -> scala.Tuple2[Int, Int][(ProdDataList -> TypeVar)].
                                                                                          App(scalus.prelude.List$.head38
                                                                                          App($TuplesListToDataList6
                                                                                            UnMapData(
                                                                                                HeadList(
                                                                                                  self471_tail_3(=
                                                                                                    TailList(
                                                                                                      self471_tail_2(=
                                                                                                        TailList(
                                                                                                          self471_tail_1(=
                                                                                                            TailList(
                                                                                                              self471
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )))
                                                                                        )in 
                                                                                        let scalus.benchmarks.KnightsTest$.canMove477=(lam self473:scalus.benchmarks.KnightsTest$.ChessSet -> scalus.benchmarks.KnightsTest$.Direction -> Boolean[(ProdDataList -> (DataConstr -> Constant))].
                                                                                            (lam direction474:scalus.benchmarks.KnightsTest$.Direction -> Boolean[(DataConstr -> Constant)].
                                                                                              App(App(scalus.benchmarks.KnightsTest$.canMoveTo373
                                                                                                self473)
                                                                                              App(App(scalus.benchmarks.KnightsTest$.move470
                                                                                                  SndPair(
                                                                                                      UnConstrData(
                                                                                                        repr.proxy(
                                                                                                          App(scalus.benchmarks.KnightsTest$.lastPiece472
                                                                                                          self473)
                                                                                                        [ProdDataConstr])
                                                                                                      )
                                                                                                    ))
                                                                                                direction474))
                                                                                            )
                                                                                          )in 
                                                                                          let scalus.benchmarks.KnightsTest$.possibleMoves484=(lam self478:scalus.benchmarks.KnightsTest$.ChessSet -> scalus.prelude.List[scalus.benchmarks.KnightsTest$.Direction][(ProdDataList -> SumDataList)].
                                                                                              App((lam xIn479:(scalus.benchmarks.KnightsTest$.Direction -> Boolean) -> scalus.prelude.List[scalus.benchmarks.KnightsTest$.Direction][((DataConstr -> Constant) -> SumDataList)].
                                                                                                  App(App(scalus.prelude.List$.filter442
                                                                                                    scalus.benchmarks.KnightsTest$.directions443)
                                                                                                  (lam xIn480:scalus.benchmarks.KnightsTest$.Direction -> Boolean[(TypeVar -> Constant)].
                                                                                                      App(xIn479
                                                                                                      repr.proxy(
                                                                                                          xIn480
                                                                                                        [DataConstr]))
                                                                                                    ))
                                                                                                )
                                                                                              (lam direction481:scalus.benchmarks.KnightsTest$.Direction -> Boolean[(DataConstr -> Constant)].
                                                                                                  App(App(scalus.benchmarks.KnightsTest$.canMove477
                                                                                                    self478)
                                                                                                  direction481)
                                                                                                ))
                                                                                            )in 
                                                                                            let scalus.benchmarks.KnightsTest$.isDeadEnd486=(lam self485:scalus.benchmarks.KnightsTest$.ChessSet -> Boolean[(ProdDataList -> Constant)].
                                                                                                App(scalus.prelude.List$.isEmpty22
                                                                                                App(scalus.benchmarks.KnightsTest$.possibleMoves484
                                                                                                  self485))
                                                                                              )in 
                                                                                              let scalus.benchmarks.KnightsTest$.addPiece490=(lam self487:scalus.benchmarks.KnightsTest$.ChessSet -> scala.Tuple2[Int, Int] -> scalus.benchmarks.KnightsTest$.ChessSet[(ProdDataList -> (ProdDataList -> ProdDataList))].
                                                                                                  (lam tile488:scala.Tuple2[Int, Int] -> scalus.benchmarks.KnightsTest$.ChessSet[(ProdDataList -> ProdDataList)].
                                                                                                    Constr(scalus.benchmarks.KnightsTest$.ChessSet,
                                                                                                      MkCons(HeadList(
                                                                                                        self487
                                                                                                      )
                                                                                                      MkCons(IData(
                                                                                                        App(App((builtin addInteger)
                                                                                                          UnIData(
                                                                                                              HeadList(
                                                                                                                self487_tail_1(=
                                                                                                                  TailList(
                                                                                                                    self487
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            ))
                                                                                                        (con integer 1))
                                                                                                      )
                                                                                                      MkCons(HeadList(
                                                                                                        self487_tail_2(=
                                                                                                          TailList(
                                                                                                            self487_tail_1
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                      MkCons(MapData(
                                                                                                        cast.repr.proxy(
                                                                                                          cast.repr.proxy(
                                                                                                            MkCons(MkPairData(HeadList(
                                                                                                              tile488
                                                                                                            )
                                                                                                            HeadList(
                                                                                                              TailList(
                                                                                                                tile488
                                                                                                              )
                                                                                                            ))
                                                                                                            UnMapData(
                                                                                                              HeadList(
                                                                                                                self487_tail_3(=
                                                                                                                  TailList(
                                                                                                                    self487_tail_2
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                            ))
                                                                                                          :scalus.prelude.List[*][SumDataPairList])
                                                                                                        :scalus.prelude.List[scala.Tuple2[Int, Int]][SumDataPairList])
                                                                                                      )
                                                                                                      [
                                                                                                        (builtin mkNilData)
                                                                                                        (con unit ())
                                                                                                      ]))))
                                                                                                    )
                                                                                                  )
                                                                                                )in 
                                                                                                let scalus.prelude.List$.filterMap508=(lam self491:scalus.prelude.List[A#96563] -> (A#96563 -> scalus.prelude.Option[B#96565]) -> scalus.prelude.List[B#96565][(SumDataList -> ((TypeVar -> DataConstr) -> SumDataList))].
                                                                                                    (lam predicate492:(A#96563 -> scalus.prelude.Option[B#96565]) -> scalus.prelude.List[B#96565][((TypeVar -> DataConstr) -> SumDataList)].
                                                                                                      App((lam xIn497:(A#96567 -> scalus.prelude.List[B#96565] -> scalus.prelude.List[B#96565]) -> scalus.prelude.List[B#96565][((TypeVar -> (SumDataList -> SumDataList)) -> SumDataList)].
                                                                                                          UnListData(
                                                                                                            repr.proxy(
                                                                                                              App(App(App(scalus.prelude.List$.foldRight108
                                                                                                                  self491)
                                                                                                                repr.proxy(
                                                                                                                    ListData(
                                                                                                                      cast.repr.proxy(
                                                                                                                        cast.repr.proxy(
                                                                                                                          [
                                                                                                                            (builtin mkNilData)
                                                                                                                            (con unit ())
                                                                                                                          ]
                                                                                                                        :scalus.prelude.List[*][SumDataList])
                                                                                                                      :scalus.prelude.List[B#96565][SumDataList])
                                                                                                                    )
                                                                                                                  [TypeVar]))
                                                                                                              (lam xIn498:A#96567 -> scalus.prelude.List[B#96565] -> scalus.prelude.List[B#96565][(TypeVar -> (TypeVar -> TypeVar))].
                                                                                                                  (lam xIn499:scalus.prelude.List[B#96565] -> scalus.prelude.List[B#96565][(TypeVar -> TypeVar)].
                                                                                                                    repr.proxy(
                                                                                                                      ListData(
                                                                                                                        App(App(xIn497
                                                                                                                          xIn498)
                                                                                                                        UnListData(
                                                                                                                            repr.proxy(
                                                                                                                              xIn499
                                                                                                                            [PackedSumDataList])
                                                                                                                          ))
                                                                                                                      )
                                                                                                                    [TypeVar])
                                                                                                                  )
                                                                                                                ))
                                                                                                            [PackedSumDataList])
                                                                                                          )
                                                                                                        )
                                                                                                      (lam head500:A#96563 -> scalus.prelude.List[B#96565] -> scalus.prelude.List[B#96565][(TypeVar -> (SumDataList -> SumDataList))].
                                                                                                          (lam tail501:scalus.prelude.List[B#96565] -> scalus.prelude.List[B#96565][(SumDataList -> SumDataList)].
                                                                                                            if
                                                                                                              EqualsInteger(_match_constr_idx503(=
                                                                                                                FstPair(
                                                                                                                  _match_scrutinee502(=
                                                                                                                    UnConstrData(
                                                                                                                      App(predicate492
                                                                                                                      cast.repr.proxy(
                                                                                                                          cast.repr.proxy(
                                                                                                                            head500
                                                                                                                          :A#96563[TypeVar])
                                                                                                                        :A#96563[TypeVar]))
                                                                                                                    )
                                                                                                                  )
                                                                                                                )
                                                                                                              )
                                                                                                              (con integer 0))
                                                                                                            then
                                                                                                              cast.repr.proxy(
                                                                                                                cast.repr.proxy(
                                                                                                                  MkCons(cast.repr.proxy(
                                                                                                                    value505(=
                                                                                                                      HeadList(
                                                                                                                        _match_datalist504(=
                                                                                                                          SndPair(
                                                                                                                            _match_scrutinee502
                                                                                                                          )
                                                                                                                        )
                                                                                                                      )
                                                                                                                    )
                                                                                                                  :B#96565[TypeVar])
                                                                                                                  tail501)
                                                                                                                :scalus.prelude.List[*][SumDataList])
                                                                                                              :scalus.prelude.List[B#96565][SumDataList])
                                                                                                            else
                                                                                                              if
                                                                                                                EqualsInteger(_match_constr_idx503
                                                                                                                (con integer 1))
                                                                                                              then
                                                                                                                tail501
                                                                                                              else
                                                                                                                (force [
                                                                                                                  (force (builtin trace))
                                                                                                                  (con string "Incorrect constructor index for type scalus.prelude.Option[B#96565]")
                                                                                                                  (delay (error))
                                                                                                                ])
                                                                                                          )
                                                                                                        ))
                                                                                                    )
                                                                                                  )in
                                                                                                
                                                                                                  let scalus.benchmarks.KnightsTest$.moveKnight513=(lam self509:scalus.benchmarks.KnightsTest$.ChessSet -> scalus.benchmarks.KnightsTest$.Direction -> scalus.benchmarks.KnightsTest$.ChessSet[(ProdDataList -> (DataConstr -> ProdDataList))].
                                                                                                      (lam direction510:scalus.benchmarks.KnightsTest$.Direction -> scalus.benchmarks.KnightsTest$.ChessSet[(DataConstr -> ProdDataList)].
                                                                                                        App(App(scalus.benchmarks.KnightsTest$.addPiece490
                                                                                                          self509)
                                                                                                        App(App(scalus.benchmarks.KnightsTest$.move470
                                                                                                            SndPair(
                                                                                                                UnConstrData(
                                                                                                                  repr.proxy(
                                                                                                                    App(scalus.benchmarks.KnightsTest$.lastPiece472
                                                                                                                    self509)
                                                                                                                  [ProdDataConstr])
                                                                                                                )
                                                                                                              ))
                                                                                                          direction510))
                                                                                                      )
                                                                                                    )in
                                                                                                  
                                                                                                    let scalus.benchmarks.KnightsTest$.allDescend520=(lam self514:scalus.benchmarks.KnightsTest$.ChessSet -> scalus.prelude.List[scalus.benchmarks.KnightsTest$.ChessSet][(ProdDataList -> SumDataList)].
                                                                                                        App((lam xIn515:(scalus.benchmarks.KnightsTest$.Direction -> B#82197) -> scalus.prelude.List[B#82197][((DataConstr -> TypeVar) -> SumDataList)].
                                                                                                            App(App(scalus.prelude.List$.map154
                                                                                                              App(scalus.benchmarks.KnightsTest$.possibleMoves484
                                                                                                                self514))
                                                                                                            (lam xIn516:scalus.benchmarks.KnightsTest$.Direction -> B#82197[(TypeVar -> TypeVar)].
                                                                                                                App(xIn515
                                                                                                                repr.proxy(
                                                                                                                    xIn516
                                                                                                                  [DataConstr]))
                                                                                                              ))
                                                                                                          )
                                                                                                        (lam xIn519:scalus.benchmarks.KnightsTest$.Direction -> scalus.benchmarks.KnightsTest$.ChessSet[(DataConstr -> ProdDataConstr)].
                                                                                                            ConstrData((con integer 0)
                                                                                                            App((lam direction517:scalus.benchmarks.KnightsTest$.Direction -> scalus.benchmarks.KnightsTest$.ChessSet[(DataConstr -> ProdDataList)].
                                                                                                                App(App(scalus.benchmarks.KnightsTest$.moveKnight513
                                                                                                                  self514)
                                                                                                                direction517)
                                                                                                              )
                                                                                                            xIn519))
                                                                                                          ))
                                                                                                      )in
                                                                                                    
                                                                                                      let scalus.benchmarks.KnightsTest$.descAndNo526=(lam self521:scalus.benchmarks.KnightsTest$.ChessSet -> scalus.prelude.List[scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet]][(ProdDataList -> SumDataList)].
                                                                                                          App((lam xIn522:(scalus.benchmarks.KnightsTest$.ChessSet -> B#82197) -> scalus.prelude.List[B#82197][((ProdDataList -> TypeVar) -> SumDataList)].
                                                                                                              App(App(scalus.prelude.List$.map154
                                                                                                                App(scalus.benchmarks.KnightsTest$.allDescend520
                                                                                                                  self521))
                                                                                                              (lam xIn523:scalus.benchmarks.KnightsTest$.ChessSet -> B#82197[(TypeVar -> TypeVar)].
                                                                                                                  App(xIn522
                                                                                                                  SndPair(
                                                                                                                      UnConstrData(
                                                                                                                        repr.proxy(
                                                                                                                          xIn523
                                                                                                                        [ProdDataConstr])
                                                                                                                      )
                                                                                                                    ))
                                                                                                                ))
                                                                                                            )
                                                                                                          (lam xIn525:scalus.benchmarks.KnightsTest$.ChessSet -> scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet][(ProdDataList -> ProdDataConstr)].
                                                                                                              ConstrData((con integer 0)
                                                                                                              App((lam item524:scalus.benchmarks.KnightsTest$.ChessSet -> scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet][(ProdDataList -> ProdDataList)].
                                                                                                                  Constr(scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet],
                                                                                                                    MkCons(IData(
                                                                                                                      App(scalus.prelude.List$.length204
                                                                                                                      App(scalus.benchmarks.KnightsTest$.possibleMoves484
                                                                                                                        App(scalus.benchmarks.KnightsTest$.deleteFirst417
                                                                                                                          item524)))
                                                                                                                    )
                                                                                                                    MkCons(ConstrData((con integer 0)
                                                                                                                    item524)
                                                                                                                    [
                                                                                                                      (builtin mkNilData)
                                                                                                                      (con unit ())
                                                                                                                    ]))
                                                                                                                  )
                                                                                                                )
                                                                                                              xIn525))
                                                                                                            ))
                                                                                                        )in
                                                                                                      
                                                                                                        let scalus.benchmarks.KnightsTest$.singleDescend539=(lam self527:scalus.benchmarks.KnightsTest$.ChessSet -> scalus.prelude.List[scalus.benchmarks.KnightsTest$.ChessSet][(ProdDataList -> SumDataList)].
                                                                                                            App((lam xIn528:(scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet] -> scalus.prelude.Option[B#96567]) -> scalus.prelude.List[B#96567][((ProdDataList -> DataConstr) -> SumDataList)].
                                                                                                                App(App(scalus.prelude.List$.filterMap508
                                                                                                                  App(scalus.benchmarks.KnightsTest$.descAndNo526
                                                                                                                    self527))
                                                                                                                (lam xIn529:scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet] -> scalus.prelude.Option[B#96567][(TypeVar -> DataConstr)].
                                                                                                                    App(xIn528
                                                                                                                    SndPair(
                                                                                                                        UnConstrData(
                                                                                                                          repr.proxy(
                                                                                                                            xIn529
                                                                                                                          [ProdDataConstr])
                                                                                                                        )
                                                                                                                      ))
                                                                                                                  ))
                                                                                                              )
                                                                                                            (lam item530:scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet] -> scalus.prelude.Option[scalus.benchmarks.KnightsTest$.ChessSet][(ProdDataList -> DataConstr)].
                                                                                                                let $3$533=Constr(scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet],
                                                                                                                    MkCons(cast.repr.proxy(
                                                                                                                      moves531(=
                                                                                                                        HeadList(
                                                                                                                          item530
                                                                                                                        )
                                                                                                                      )
                                                                                                                    :Int[PackedData])
                                                                                                                    MkCons(cast.repr.proxy(
                                                                                                                      board532(=
                                                                                                                        HeadList(
                                                                                                                          item530_t(=
                                                                                                                            TailList(
                                                                                                                              item530
                                                                                                                            )
                                                                                                                          )
                                                                                                                        )
                                                                                                                      )
                                                                                                                    :scalus.benchmarks.KnightsTest$.ChessSet[ProdDataConstr])
                                                                                                                    [
                                                                                                                      (builtin mkNilData)
                                                                                                                      (con unit ())
                                                                                                                    ]))
                                                                                                                  )in
                                                                                                                
                                                                                                                  let moves534=HeadList(
                                                                                                                      $3$533
                                                                                                                    )in
                                                                                                                  
                                                                                                                    let board535=HeadList(
                                                                                                                        $3$533_tail_1(=
                                                                                                                          TailList(
                                                                                                                            $3$533
                                                                                                                          )
                                                                                                                        )
                                                                                                                      )in
                                                                                                                    
                                                                                                                      if
                                                                                                                        let i2536=(con integer 1)in
                                                                                                                        
                                                                                                                          App(App((builtin equalsInteger)
                                                                                                                            UnIData(
                                                                                                                                moves534
                                                                                                                              ))
                                                                                                                          i2536)
                                                                                                                        
                                                                                                                      then
                                                                                                                        cast.repr.proxy(
                                                                                                                          cast.repr.proxy(
                                                                                                                            ConstrData((con integer 0)
                                                                                                                            Constr(scalus.prelude.Option$.Some[scalus.benchmarks.KnightsTest$.ChessSet],
                                                                                                                              MkCons(board535
                                                                                                                              [
                                                                                                                                (builtin mkNilData)
                                                                                                                                (con unit ())
                                                                                                                              ])
                                                                                                                            ))
                                                                                                                          :scalus.prelude.Option[*][DataConstr])
                                                                                                                        :scalus.prelude.Option[scalus.benchmarks.KnightsTest$.ChessSet][DataConstr])
                                                                                                                      else
                                                                                                                        cast.repr.proxy(
                                                                                                                          cast.repr.proxy(
                                                                                                                            ConstrData((con integer 1)
                                                                                                                            Constr(scalus.prelude.Option$.None,
                                                                                                                              [
                                                                                                                                (builtin mkNilData)
                                                                                                                                (con unit ())
                                                                                                                              ]
                                                                                                                            ))
                                                                                                                          :scalus.prelude.Option[*][DataConstr])
                                                                                                                        :scalus.prelude.Option[scalus.benchmarks.KnightsTest$.ChessSet][DataConstr])
                                                                                                                    
                                                                                                                  
                                                                                                                
                                                                                                              ))
                                                                                                          )in
                                                                                                        
                                                                                                          let scalus.prelude.OrdCompanion$.isLess544=(lam self540:scalus.prelude.OrdCompanion$.Order -> Boolean[(DataConstr -> Constant)].
                                                                                                              if
                                                                                                                EqualsInteger(_match_constr_idx542(=
                                                                                                                  FstPair(
                                                                                                                    _match_scrutinee541(=
                                                                                                                      UnConstrData(
                                                                                                                        self540
                                                                                                                      )
                                                                                                                    )
                                                                                                                  )
                                                                                                                )
                                                                                                                (con integer 0))
                                                                                                              then
                                                                                                                (con bool True)
                                                                                                              else
                                                                                                                if
                                                                                                                  EqualsInteger(_match_constr_idx542
                                                                                                                  (con integer 1))
                                                                                                                then
                                                                                                                  (con bool False)
                                                                                                                else
                                                                                                                  if
                                                                                                                    EqualsInteger(_match_constr_idx542
                                                                                                                    (con integer 2))
                                                                                                                  then
                                                                                                                    (con bool False)
                                                                                                                  else
                                                                                                                    (force [
                                                                                                                      (force (builtin trace))
                                                                                                                      (con string "Incorrect constructor index for type scalus.prelude.OrdCompanion$.Order")
                                                                                                                      (delay (error))
                                                                                                                    ])
                                                                                                            )in
                                                                                                          
                                                                                                            (letrec scalus.prelude.List$.quicksort545=(lam self546:scalus.prelude.List[A#96385] -> (A#96385 -> A#96385 -> scalus.prelude.OrdCompanion$.Order) -> scalus.prelude.List[A#96385][(SumDataList -> ((TypeVar -> (TypeVar -> DataConstr)) -> SumDataList))].
                                                                                                                (lam evidence$1547:(A#96385 -> A#96385 -> scalus.prelude.OrdCompanion$.Order) -> scalus.prelude.List[A#96385][((TypeVar -> (TypeVar -> DataConstr)) -> SumDataList)].
                                                                                                                  ListMatch{listInput548(=
                                                                                                                    var(self546:scalus.prelude.List[A#96385][SumDataList])
                                                                                                                  ) matchCons(consHead549(=
                                                                                                                           HeadList(
                                                                                                                             listInput548
                                                                                                                           )
                                                                                                                         ),consTail550(=
                                                                                                                           TailList(
                                                                                                                             listInput548
                                                                                                                           )
                                                                                                                         )) =>let before562=App(App(scalus.prelude.List$.quicksort545
                                                                                                                               App(App(scalus.prelude.List$.filter442
                                                                                                                                   consTail550)
                                                                                                                                 (lam elem553:A#96385 -> Boolean[(TypeVar -> Constant)].
                                                                                                                                     App(scalus.prelude.OrdCompanion$.isLess544
                                                                                                                                     let self$proxy3554=evidence$1547in
                                                                                                                                       
                                                                                                                                         App(App(self$proxy3554
                                                                                                                                           cast.repr.proxy(
                                                                                                                                               cast.repr.proxy(
                                                                                                                                                 elem553
                                                                                                                                               :A#96385[TypeVar])
                                                                                                                                             :A#96385[TypeVar]))
                                                                                                                                         cast.repr.proxy(
                                                                                                                                             cast.repr.proxy(
                                                                                                                                               consHead549
                                                                                                                                             :A#96385[TypeVar])
                                                                                                                                           :A#96385[TypeVar]))
                                                                                                                                       )
                                                                                                                                   )))
                                                                                                                             evidence$1547)in
                                                                                                                           
                                                                                                                             let after574=App(App(scalus.prelude.List$.quicksort545
                                                                                                                                 App(App(scalus.prelude.List$.filter442
                                                                                                                                     consTail550)
                                                                                                                                   (lam elem565:A#96385 -> Boolean[(TypeVar -> Constant)].
                                                                                                                                       if
                                                                                                                                         App(scalus.prelude.OrdCompanion$.isLess544
                                                                                                                                         let self$proxy4566=evidence$1547in
                                                                                                                                           
                                                                                                                                             App(App(self$proxy4566
                                                                                                                                               cast.repr.proxy(
                                                                                                                                                   cast.repr.proxy(
                                                                                                                                                     elem565
                                                                                                                                                   :A#96385[TypeVar])
                                                                                                                                                 :A#96385[TypeVar]))
                                                                                                                                             cast.repr.proxy(
                                                                                                                                                 cast.repr.proxy(
                                                                                                                                                   consHead549
                                                                                                                                                 :A#96385[TypeVar])
                                                                                                                                               :A#96385[TypeVar]))
                                                                                                                                           )
                                                                                                                                       then
                                                                                                                                         (con bool False)
                                                                                                                                       else
                                                                                                                                         (con bool True)
                                                                                                                                     )))
                                                                                                                               evidence$1547)in
                                                                                                                             
                                                                                                                               let other$proxy1575=cast.repr.proxy(
                                                                                                                                   cast.repr.proxy(
                                                                                                                                     MkCons(cast.repr.proxy(
                                                                                                                                       consHead549
                                                                                                                                     :A#96385[TypeVar])
                                                                                                                                     after574)
                                                                                                                                   :scalus.prelude.List[*][SumDataList])
                                                                                                                                 :scalus.prelude.List[A#96385][SumDataList])in
                                                                                                                               
                                                                                                                                 App(App(scalus.prelude.List$.appendedAll59
                                                                                                                                   before562)
                                                                                                                                 other$proxy1575)
                                                                                                                               
                                                                                                                             
                                                                                                                           Nil =>cast.repr.proxy(
                                                                                                                             [
                                                                                                                               (builtin mkNilData)
                                                                                                                               (con unit ())
                                                                                                                             ]
                                                                                                                           :scalus.prelude.List[*][SumDataList])}:scalus.prelude.List[A#96385]
                                                                                                                )
                                                                                                              ) in
                                                                                                              let scalus.prelude.OrdCompanion$.isEqual581=(lam self577:scalus.prelude.OrdCompanion$.Order -> Boolean[(DataConstr -> Constant)].
                                                                                                                  if
                                                                                                                    EqualsInteger(_match_constr_idx579(=
                                                                                                                      FstPair(
                                                                                                                        _match_scrutinee578(=
                                                                                                                          UnConstrData(
                                                                                                                            self577
                                                                                                                          )
                                                                                                                        )
                                                                                                                      )
                                                                                                                    )
                                                                                                                    (con integer 0))
                                                                                                                  then
                                                                                                                    (con bool False)
                                                                                                                  else
                                                                                                                    if
                                                                                                                      EqualsInteger(_match_constr_idx579
                                                                                                                      (con integer 1))
                                                                                                                    then
                                                                                                                      (con bool False)
                                                                                                                    else
                                                                                                                      if
                                                                                                                        EqualsInteger(_match_constr_idx579
                                                                                                                        (con integer 2))
                                                                                                                      then
                                                                                                                        (con bool True)
                                                                                                                      else
                                                                                                                        (force [
                                                                                                                          (force (builtin trace))
                                                                                                                          (con string "Incorrect constructor index for type scalus.prelude.OrdCompanion$.Order")
                                                                                                                          (delay (error))
                                                                                                                        ])
                                                                                                                )in
                                                                                                              
                                                                                                                let scalus.prelude.OrdCompanion$.by589=(lam mapper582:(A#252213 -> B#252214) -> (B#252214 -> B#252214 -> scalus.prelude.OrdCompanion$.Order) -> A#252213 -> A#252213 -> scalus.prelude.OrdCompanion$.Order[((TypeVar -> TypeVar) -> ((TypeVar -> (TypeVar -> DataConstr)) -> (TypeVar -> (TypeVar -> DataConstr))))].
                                                                                                                    (lam evidence$1583:(B#252214 -> B#252214 -> scalus.prelude.OrdCompanion$.Order) -> A#252213 -> A#252213 -> scalus.prelude.OrdCompanion$.Order[((TypeVar -> (TypeVar -> DataConstr)) -> (TypeVar -> (TypeVar -> DataConstr)))].
                                                                                                                      (lam lhs584:A#252213 -> A#252213 -> scalus.prelude.OrdCompanion$.Order[(TypeVar -> (TypeVar -> DataConstr))].
                                                                                                                        (lam rhs585:A#252213 -> scalus.prelude.OrdCompanion$.Order[(TypeVar -> DataConstr)].
                                                                                                                          let self$proxy18586=App(mapper582
                                                                                                                            cast.repr.proxy(
                                                                                                                                cast.repr.proxy(
                                                                                                                                  lhs584
                                                                                                                                :A#252213[TypeVar])
                                                                                                                              :A#252213[TypeVar]))in
                                                                                                                          
                                                                                                                            let self$proxy19587=evidence$1583in
                                                                                                                            
                                                                                                                              App(App(self$proxy19587
                                                                                                                                cast.repr.proxy(
                                                                                                                                    cast.repr.proxy(
                                                                                                                                      self$proxy18586
                                                                                                                                    :B#252214[TypeVar])
                                                                                                                                  :B#252214[TypeVar]))
                                                                                                                              cast.repr.proxy(
                                                                                                                                  App(mapper582
                                                                                                                                  cast.repr.proxy(
                                                                                                                                      cast.repr.proxy(
                                                                                                                                        rhs585
                                                                                                                                      :A#252213[TypeVar])
                                                                                                                                    :A#252213[TypeVar]))
                                                                                                                                :B#252214[TypeVar]))
                                                                                                                            
                                                                                                                          
                                                                                                                        )
                                                                                                                      )
                                                                                                                    )
                                                                                                                  )in
                                                                                                                
                                                                                                                  let scalus.prelude.OrdCompanion$.orElseBy609=(lam self590:(A#252227 -> A#252227 -> scalus.prelude.OrdCompanion$.Order) -> (A#252227 -> B#252229) -> (B#252229 -> B#252229 -> scalus.prelude.OrdCompanion$.Order) -> A#252227 -> A#252227 -> scalus.prelude.OrdCompanion$.Order[((TypeVar -> (TypeVar -> DataConstr)) -> ((TypeVar -> TypeVar) -> ((TypeVar -> (TypeVar -> DataConstr)) -> (TypeVar -> (TypeVar -> DataConstr)))))].
                                                                                                                      (lam mapper591:(A#252227 -> B#252229) -> (B#252229 -> B#252229 -> scalus.prelude.OrdCompanion$.Order) -> A#252227 -> A#252227 -> scalus.prelude.OrdCompanion$.Order[((TypeVar -> TypeVar) -> ((TypeVar -> (TypeVar -> DataConstr)) -> (TypeVar -> (TypeVar -> DataConstr))))].
                                                                                                                        (lam evidence$1592:(B#252229 -> B#252229 -> scalus.prelude.OrdCompanion$.Order) -> A#252227 -> A#252227 -> scalus.prelude.OrdCompanion$.Order[((TypeVar -> (TypeVar -> DataConstr)) -> (TypeVar -> (TypeVar -> DataConstr)))].
                                                                                                                          (lam lhs593:A#252227 -> A#252227 -> scalus.prelude.OrdCompanion$.Order[(TypeVar -> (TypeVar -> DataConstr))].
                                                                                                                            (lam rhs594:A#252227 -> scalus.prelude.OrdCompanion$.Order[(TypeVar -> DataConstr)].
                                                                                                                              let order596=App(App(self590
                                                                                                                                  cast.repr.proxy(
                                                                                                                                      cast.repr.proxy(
                                                                                                                                        lhs593
                                                                                                                                      :A#252227[TypeVar])
                                                                                                                                    :A#252227[TypeVar]))
                                                                                                                                cast.repr.proxy(
                                                                                                                                    cast.repr.proxy(
                                                                                                                                      rhs594
                                                                                                                                    :A#252227[TypeVar])
                                                                                                                                  :A#252227[TypeVar]))in
                                                                                                                              
                                                                                                                                if
                                                                                                                                  if
                                                                                                                                    App(scalus.prelude.OrdCompanion$.isEqual581
                                                                                                                                    order596)
                                                                                                                                  then
                                                                                                                                    (con bool False)
                                                                                                                                  else
                                                                                                                                    (con bool True)
                                                                                                                                then
                                                                                                                                  order596
                                                                                                                                else
                                                                                                                                  let self$proxy20607=App(App(scalus.prelude.OrdCompanion$.by589
                                                                                                                                      mapper591)
                                                                                                                                    evidence$1592)in
                                                                                                                                  
                                                                                                                                    App(App(self$proxy20607
                                                                                                                                      cast.repr.proxy(
                                                                                                                                          cast.repr.proxy(
                                                                                                                                            lhs593
                                                                                                                                          :A#252227[TypeVar])
                                                                                                                                        :A#252227[TypeVar]))
                                                                                                                                    cast.repr.proxy(
                                                                                                                                        cast.repr.proxy(
                                                                                                                                          rhs594
                                                                                                                                        :A#252227[TypeVar])
                                                                                                                                      :A#252227[TypeVar]))
                                                                                                                                  
                                                                                                                              
                                                                                                                            )
                                                                                                                          )
                                                                                                                        )
                                                                                                                      )
                                                                                                                    )in
                                                                                                                  
                                                                                                                    let scalus.prelude.OrdCompanion$.given_Ord_A_B643=(lam evidence$1610:(A#246754 -> A#246754 -> scalus.prelude.OrdCompanion$.Order) -> (B#246755 -> B#246755 -> scalus.prelude.OrdCompanion$.Order) -> scala.Tuple2[A#246754, B#246755] -> scala.Tuple2[A#246754, B#246755] -> scalus.prelude.OrdCompanion$.Order[((TypeVar -> (TypeVar -> DataConstr)) -> ((TypeVar -> (TypeVar -> DataConstr)) -> (ProdDataList -> (ProdDataList -> DataConstr))))].
                                                                                                                        (lam evidence$2611:(B#246755 -> B#246755 -> scalus.prelude.OrdCompanion$.Order) -> scala.Tuple2[A#246754, B#246755] -> scala.Tuple2[A#246754, B#246755] -> scalus.prelude.OrdCompanion$.Order[((TypeVar -> (TypeVar -> DataConstr)) -> (ProdDataList -> (ProdDataList -> DataConstr)))].
                                                                                                                          App(App((lam xIn625:(scala.Tuple2[A#246754, B#246755] -> B#252231) -> (B#252231 -> B#252231 -> scalus.prelude.OrdCompanion$.Order) -> scala.Tuple2[A#246754, B#246755] -> scala.Tuple2[A#246754, B#246755] -> scalus.prelude.OrdCompanion$.Order[((ProdDataList -> TypeVar) -> ((TypeVar -> (TypeVar -> DataConstr)) -> (ProdDataList -> (ProdDataList -> DataConstr))))].
                                                                                                                                (lam xIn627:(B#252231 -> B#252231 -> scalus.prelude.OrdCompanion$.Order) -> scala.Tuple2[A#246754, B#246755] -> scala.Tuple2[A#246754, B#246755] -> scalus.prelude.OrdCompanion$.Order[((TypeVar -> (TypeVar -> DataConstr)) -> (ProdDataList -> (ProdDataList -> DataConstr)))].
                                                                                                                                  (lam xIn630:scala.Tuple2[A#246754, B#246755] -> scala.Tuple2[A#246754, B#246755] -> scalus.prelude.OrdCompanion$.Order[(ProdDataList -> (ProdDataList -> DataConstr))].
                                                                                                                                    (lam xIn631:scala.Tuple2[A#246754, B#246755] -> scalus.prelude.OrdCompanion$.Order[(ProdDataList -> DataConstr)].
                                                                                                                                      App(App(App(App(App(scalus.prelude.OrdCompanion$.orElseBy609
                                                                                                                                              (lam xIn623:scala.Tuple2[A#246754, B#246755] -> scala.Tuple2[A#246754, B#246755] -> scalus.prelude.OrdCompanion$.Order[(TypeVar -> (TypeVar -> DataConstr))].
                                                                                                                                                  (lam xIn624:scala.Tuple2[A#246754, B#246755] -> scalus.prelude.OrdCompanion$.Order[(TypeVar -> DataConstr)].
                                                                                                                                                    App(App(App((lam xIn614:(B#252216 -> A#246754 -> scalus.prelude.OrdCompanion$.Order) -> scala.Tuple2[A#246754, B#246755] -> scala.Tuple2[A#246754, B#246755] -> scalus.prelude.OrdCompanion$.Order[((TypeVar -> (TypeVar -> DataConstr)) -> (ProdDataList -> (ProdDataList -> DataConstr)))].
                                                                                                                                                            (lam xIn617:scala.Tuple2[A#246754, B#246755] -> scala.Tuple2[A#246754, B#246755] -> scalus.prelude.OrdCompanion$.Order[(ProdDataList -> (ProdDataList -> DataConstr))].
                                                                                                                                                              (lam xIn618:scala.Tuple2[A#246754, B#246755] -> scalus.prelude.OrdCompanion$.Order[(ProdDataList -> DataConstr)].
                                                                                                                                                                App(App(App(App(scalus.prelude.OrdCompanion$.by589
                                                                                                                                                                      (lam xIn613:scala.Tuple2[A#246754, B#246755] -> A#246754[(TypeVar -> TypeVar)].
                                                                                                                                                                          App((lam _$20612:scala.Tuple2[A#246754, B#246755] -> A#246754[(ProdDataList -> TypeVar)].
                                                                                                                                                                              HeadList(
                                                                                                                                                                                _$20612
                                                                                                                                                                              )
                                                                                                                                                                            )
                                                                                                                                                                          SndPair(
                                                                                                                                                                              UnConstrData(
                                                                                                                                                                                repr.proxy(
                                                                                                                                                                                  xIn613
                                                                                                                                                                                [ProdDataConstr])
                                                                                                                                                                              )
                                                                                                                                                                            ))
                                                                                                                                                                        ))
                                                                                                                                                                    xIn614)
                                                                                                                                                                  ConstrData((con integer 0)
                                                                                                                                                                    xIn617))
                                                                                                                                                                ConstrData((con integer 0)
                                                                                                                                                                  xIn618))
                                                                                                                                                              )
                                                                                                                                                            )
                                                                                                                                                          )
                                                                                                                                                        evidence$1610)
                                                                                                                                                      SndPair(
                                                                                                                                                          UnConstrData(
                                                                                                                                                            repr.proxy(
                                                                                                                                                              xIn623
                                                                                                                                                            [ProdDataConstr])
                                                                                                                                                          )
                                                                                                                                                        ))
                                                                                                                                                    SndPair(
                                                                                                                                                        UnConstrData(
                                                                                                                                                          repr.proxy(
                                                                                                                                                            xIn624
                                                                                                                                                          [ProdDataConstr])
                                                                                                                                                        )
                                                                                                                                                      ))
                                                                                                                                                  )
                                                                                                                                                ))
                                                                                                                                            (lam xIn626:scala.Tuple2[A#246754, B#246755] -> B#252231[(TypeVar -> TypeVar)].
                                                                                                                                                App(xIn625
                                                                                                                                                SndPair(
                                                                                                                                                    UnConstrData(
                                                                                                                                                      repr.proxy(
                                                                                                                                                        xIn626
                                                                                                                                                      [ProdDataConstr])
                                                                                                                                                    )
                                                                                                                                                  ))
                                                                                                                                              ))
                                                                                                                                          xIn627)
                                                                                                                                        ConstrData((con integer 0)
                                                                                                                                          xIn630))
                                                                                                                                      ConstrData((con integer 0)
                                                                                                                                        xIn631))
                                                                                                                                    )
                                                                                                                                  )
                                                                                                                                )
                                                                                                                              )
                                                                                                                            (lam _$21632:scala.Tuple2[A#246754, B#246755] -> B#246755[(ProdDataList -> TypeVar)].
                                                                                                                                HeadList(
                                                                                                                                  _$21632_tail_1(=
                                                                                                                                    TailList(
                                                                                                                                      _$21632
                                                                                                                                    )
                                                                                                                                  )
                                                                                                                                )
                                                                                                                              ))
                                                                                                                          evidence$2611)
                                                                                                                        )
                                                                                                                      )in
                                                                                                                    
                                                                                                                      let scalus.prelude.OrdCompanion$.given_Ord_BigInt648=(lam x644:Int -> Int -> scalus.prelude.OrdCompanion$.Order[(Constant -> (Constant -> DataConstr))].
                                                                                                                          (lam y645:Int -> scalus.prelude.OrdCompanion$.Order[(Constant -> DataConstr)].
                                                                                                                            if
                                                                                                                              App(App((builtin lessThanInteger)
                                                                                                                                x644)
                                                                                                                              y645)
                                                                                                                            then
                                                                                                                              cast.repr.proxy(
                                                                                                                                ConstrData((con integer 0)
                                                                                                                                Constr(scalus.prelude.OrdCompanion$.Order$.Less,
                                                                                                                                  [
                                                                                                                                    (builtin mkNilData)
                                                                                                                                    (con unit ())
                                                                                                                                  ]
                                                                                                                                ))
                                                                                                                              :scalus.prelude.OrdCompanion$.Order[DataConstr])
                                                                                                                            else
                                                                                                                              if
                                                                                                                                App(App((builtin lessThanInteger)
                                                                                                                                  y645)
                                                                                                                                x644)
                                                                                                                              then
                                                                                                                                cast.repr.proxy(
                                                                                                                                  ConstrData((con integer 1)
                                                                                                                                  Constr(scalus.prelude.OrdCompanion$.Order$.Greater,
                                                                                                                                    [
                                                                                                                                      (builtin mkNilData)
                                                                                                                                      (con unit ())
                                                                                                                                    ]
                                                                                                                                  ))
                                                                                                                                :scalus.prelude.OrdCompanion$.Order[DataConstr])
                                                                                                                              else
                                                                                                                                cast.repr.proxy(
                                                                                                                                  ConstrData((con integer 2)
                                                                                                                                  Constr(scalus.prelude.OrdCompanion$.Order$.Equal,
                                                                                                                                    [
                                                                                                                                      (builtin mkNilData)
                                                                                                                                      (con unit ())
                                                                                                                                    ]
                                                                                                                                  ))
                                                                                                                                :scalus.prelude.OrdCompanion$.Order[DataConstr])
                                                                                                                          )
                                                                                                                        )in
                                                                                                                      
                                                                                                                        (letrec scalus.prelude.List$.listOrd649=(lam evidence$1650:(A#81909 -> A#81909 -> scalus.prelude.OrdCompanion$.Order) -> scalus.prelude.List[A#81909] -> scalus.prelude.List[A#81909] -> scalus.prelude.OrdCompanion$.Order[((TypeVar -> (TypeVar -> DataConstr)) -> (SumDataList -> (SumDataList -> DataConstr)))].
                                                                                                                            (lam lhs651:scalus.prelude.List[A#81909] -> scalus.prelude.List[A#81909] -> scalus.prelude.OrdCompanion$.Order[(SumDataList -> (SumDataList -> DataConstr))].
                                                                                                                              (lam rhs652:scalus.prelude.List[A#81909] -> scalus.prelude.OrdCompanion$.Order[(SumDataList -> DataConstr)].
                                                                                                                                ListMatch{listInput653(=
                                                                                                                                  var(lhs651:scalus.prelude.List[A#81909][SumDataList])
                                                                                                                                ) matchCons(consHead654(=
                                                                                                                                         HeadList(
                                                                                                                                           listInput653
                                                                                                                                         )
                                                                                                                                       ),consTail655(=
                                                                                                                                         TailList(
                                                                                                                                           listInput653
                                                                                                                                         )
                                                                                                                                       )) =>ListMatch{listInput656(=
                                                                                                                                           var(rhs652:scalus.prelude.List[A#81909][SumDataList])
                                                                                                                                         ) matchCons(consHead657(=
                                                                                                                                                  HeadList(
                                                                                                                                                    listInput656
                                                                                                                                                  )
                                                                                                                                                ),consTail658(=
                                                                                                                                                  TailList(
                                                                                                                                                    listInput656
                                                                                                                                                  )
                                                                                                                                                )) =>let order661=let self$proxy1659=evidence$1650in
                                                                                                                                                    
                                                                                                                                                      App(App(self$proxy1659
                                                                                                                                                        cast.repr.proxy(
                                                                                                                                                            cast.repr.proxy(
                                                                                                                                                              consHead654
                                                                                                                                                            :A#81909[TypeVar])
                                                                                                                                                          :A#81909[TypeVar]))
                                                                                                                                                      cast.repr.proxy(
                                                                                                                                                          cast.repr.proxy(
                                                                                                                                                            consHead657
                                                                                                                                                          :A#81909[TypeVar])
                                                                                                                                                        :A#81909[TypeVar]))
                                                                                                                                                    in
                                                                                                                                                  
                                                                                                                                                    if
                                                                                                                                                      if
                                                                                                                                                        App(scalus.prelude.OrdCompanion$.isEqual581
                                                                                                                                                        order661)
                                                                                                                                                      then
                                                                                                                                                        (con bool False)
                                                                                                                                                      else
                                                                                                                                                        (con bool True)
                                                                                                                                                    then
                                                                                                                                                      order661
                                                                                                                                                    else
                                                                                                                                                      let evidence$1$proxy1666=App(scalus.prelude.List$.listOrd649
                                                                                                                                                        evidence$1650)in
                                                                                                                                                      
                                                                                                                                                        let self$proxy2667=evidence$1$proxy1666in
                                                                                                                                                        
                                                                                                                                                          App(App(self$proxy2667
                                                                                                                                                            consTail655)
                                                                                                                                                          consTail658)
                                                                                                                                                        
                                                                                                                                                      
                                                                                                                                                  Nil =>cast.repr.proxy(
                                                                                                                                                    ConstrData((con integer 1)
                                                                                                                                                    Constr(scalus.prelude.OrdCompanion$.Order$.Greater,
                                                                                                                                                      [
                                                                                                                                                        (builtin mkNilData)
                                                                                                                                                        (con unit ())
                                                                                                                                                      ]
                                                                                                                                                    ))
                                                                                                                                                  :scalus.prelude.OrdCompanion$.Order[DataConstr])}:scalus.prelude.OrdCompanion$.OrderNil =>ListMatch{listInput669(=
                                                                                                                                           var(rhs652:scalus.prelude.List[A#81909][SumDataList])
                                                                                                                                         ) matchCons(consHead670(=
                                                                                                                                                  HeadList(
                                                                                                                                                    listInput669
                                                                                                                                                  )
                                                                                                                                                ),consTail671(=
                                                                                                                                                  TailList(
                                                                                                                                                    listInput669
                                                                                                                                                  )
                                                                                                                                                )) =>cast.repr.proxy(
                                                                                                                                                    ConstrData((con integer 0)
                                                                                                                                                    Constr(scalus.prelude.OrdCompanion$.Order$.Less,
                                                                                                                                                      [
                                                                                                                                                        (builtin mkNilData)
                                                                                                                                                        (con unit ())
                                                                                                                                                      ]
                                                                                                                                                    ))
                                                                                                                                                  :scalus.prelude.OrdCompanion$.Order[DataConstr])Nil =>cast.repr.proxy(
                                                                                                                                                    ConstrData((con integer 2)
                                                                                                                                                    Constr(scalus.prelude.OrdCompanion$.Order$.Equal,
                                                                                                                                                      [
                                                                                                                                                        (builtin mkNilData)
                                                                                                                                                        (con unit ())
                                                                                                                                                      ]
                                                                                                                                                    ))
                                                                                                                                                  :scalus.prelude.OrdCompanion$.Order[DataConstr])}:scalus.prelude.OrdCompanion$.Order}:scalus.prelude.OrdCompanion$.Order
                                                                                                                              )
                                                                                                                            )
                                                                                                                          ) in
                                                                                                                          let scalus.benchmarks.KnightsTest$.given_Ord_ChessSet698=App((lam xIn674:(scalus.prelude.List[scala.Tuple2[Int, Int]] -> scalus.prelude.List[scala.Tuple2[Int, Int]] -> scalus.prelude.OrdCompanion$.Order) -> scalus.benchmarks.KnightsTest$.ChessSet -> scalus.benchmarks.KnightsTest$.ChessSet -> scalus.prelude.OrdCompanion$.Order[((SumDataPairList -> (SumDataPairList -> DataConstr)) -> (ProdDataList -> (ProdDataList -> DataConstr)))].
                                                                                                                                (lam xIn677:scalus.benchmarks.KnightsTest$.ChessSet -> scalus.benchmarks.KnightsTest$.ChessSet -> scalus.prelude.OrdCompanion$.Order[(ProdDataList -> (ProdDataList -> DataConstr))].
                                                                                                                                  (lam xIn678:scalus.benchmarks.KnightsTest$.ChessSet -> scalus.prelude.OrdCompanion$.Order[(ProdDataList -> DataConstr)].
                                                                                                                                    App(App(App(App(scalus.prelude.OrdCompanion$.by589
                                                                                                                                          (lam xIn673:scalus.benchmarks.KnightsTest$.ChessSet -> scalus.prelude.List[scala.Tuple2[Int, Int]][(TypeVar -> TypeVar)].
                                                                                                                                              repr.proxy(
                                                                                                                                                ListData(
                                                                                                                                                  App($TuplesListToDataList6
                                                                                                                                                  UnMapData(
                                                                                                                                                      App((lam _$5672:scalus.benchmarks.KnightsTest$.ChessSet -> scalus.prelude.List[scala.Tuple2[Int, Int]][(ProdDataList -> SumDataAssocMap)].
                                                                                                                                                          HeadList(
                                                                                                                                                            _$5672_tail_3(=
                                                                                                                                                              TailList(
                                                                                                                                                                _$5672_tail_2(=
                                                                                                                                                                  TailList(
                                                                                                                                                                    _$5672_tail_1(=
                                                                                                                                                                      TailList(
                                                                                                                                                                        _$5672
                                                                                                                                                                      )
                                                                                                                                                                    )
                                                                                                                                                                  )
                                                                                                                                                                )
                                                                                                                                                              )
                                                                                                                                                            )
                                                                                                                                                          )
                                                                                                                                                        )
                                                                                                                                                      SndPair(
                                                                                                                                                          UnConstrData(
                                                                                                                                                            repr.proxy(
                                                                                                                                                              xIn673
                                                                                                                                                            [ProdDataConstr])
                                                                                                                                                          )
                                                                                                                                                        ))
                                                                                                                                                    ))
                                                                                                                                                )
                                                                                                                                              [TypeVar])
                                                                                                                                            ))
                                                                                                                                        (lam xIn675:scalus.prelude.List[scala.Tuple2[Int, Int]] -> scalus.prelude.List[scala.Tuple2[Int, Int]] -> scalus.prelude.OrdCompanion$.Order[(TypeVar -> (TypeVar -> DataConstr))].
                                                                                                                                            (lam xIn676:scalus.prelude.List[scala.Tuple2[Int, Int]] -> scalus.prelude.OrdCompanion$.Order[(TypeVar -> DataConstr)].
                                                                                                                                              App(App(xIn674
                                                                                                                                                App($dataListToTuplesList14
                                                                                                                                                  UnListData(
                                                                                                                                                      repr.proxy(
                                                                                                                                                        xIn675
                                                                                                                                                      [PackedSumDataList])
                                                                                                                                                    )))
                                                                                                                                              App($dataListToTuplesList14
                                                                                                                                                UnListData(
                                                                                                                                                    repr.proxy(
                                                                                                                                                      xIn676
                                                                                                                                                    [PackedSumDataList])
                                                                                                                                                  )))
                                                                                                                                            )
                                                                                                                                          ))
                                                                                                                                      ConstrData((con integer 0)
                                                                                                                                        xIn677))
                                                                                                                                    ConstrData((con integer 0)
                                                                                                                                      xIn678))
                                                                                                                                  )
                                                                                                                                )
                                                                                                                              )
                                                                                                                            (lam xIn692:scalus.prelude.List[scala.Tuple2[Int, Int]] -> scalus.prelude.List[scala.Tuple2[Int, Int]] -> scalus.prelude.OrdCompanion$.Order[(SumDataPairList -> (SumDataPairList -> DataConstr))].
                                                                                                                                (lam xIn693:scalus.prelude.List[scala.Tuple2[Int, Int]] -> scalus.prelude.OrdCompanion$.Order[(SumDataPairList -> DataConstr)].
                                                                                                                                  App(App(App(scalus.prelude.List$.listOrd649
                                                                                                                                      (lam xIn690:scala.Tuple2[Int, Int] -> scala.Tuple2[Int, Int] -> scalus.prelude.OrdCompanion$.Order[(TypeVar -> (TypeVar -> DataConstr))].
                                                                                                                                          (lam xIn691:scala.Tuple2[Int, Int] -> scalus.prelude.OrdCompanion$.Order[(TypeVar -> DataConstr)].
                                                                                                                                            App(App(App((lam xIn681:(Int -> Int -> scalus.prelude.OrdCompanion$.Order) -> scala.Tuple2[Int, Int] -> scala.Tuple2[Int, Int] -> scalus.prelude.OrdCompanion$.Order[((Constant -> (Constant -> DataConstr)) -> (ProdDataList -> (ProdDataList -> DataConstr)))].
                                                                                                                                                    App(App(scalus.prelude.OrdCompanion$.given_Ord_A_B643
                                                                                                                                                      (lam xIn679:Int -> Int -> scalus.prelude.OrdCompanion$.Order[(TypeVar -> (TypeVar -> DataConstr))].
                                                                                                                                                          (lam xIn680:Int -> scalus.prelude.OrdCompanion$.Order[(TypeVar -> DataConstr)].
                                                                                                                                                            App(App(scalus.prelude.OrdCompanion$.given_Ord_BigInt648
                                                                                                                                                              UnIData(
                                                                                                                                                                  xIn679
                                                                                                                                                                ))
                                                                                                                                                            UnIData(
                                                                                                                                                                xIn680
                                                                                                                                                              ))
                                                                                                                                                          )
                                                                                                                                                        ))
                                                                                                                                                    (lam xIn682:Int -> Int -> scalus.prelude.OrdCompanion$.Order[(TypeVar -> (TypeVar -> DataConstr))].
                                                                                                                                                        (lam xIn683:Int -> scalus.prelude.OrdCompanion$.Order[(TypeVar -> DataConstr)].
                                                                                                                                                          App(App(xIn681
                                                                                                                                                            UnIData(
                                                                                                                                                                xIn682
                                                                                                                                                              ))
                                                                                                                                                          UnIData(
                                                                                                                                                              xIn683
                                                                                                                                                            ))
                                                                                                                                                        )
                                                                                                                                                      ))
                                                                                                                                                  )
                                                                                                                                                scalus.prelude.OrdCompanion$.given_Ord_BigInt648)
                                                                                                                                              SndPair(
                                                                                                                                                  UnConstrData(
                                                                                                                                                    repr.proxy(
                                                                                                                                                      xIn690
                                                                                                                                                    [ProdDataConstr])
                                                                                                                                                  )
                                                                                                                                                ))
                                                                                                                                            SndPair(
                                                                                                                                                UnConstrData(
                                                                                                                                                  repr.proxy(
                                                                                                                                                    xIn691
                                                                                                                                                  [ProdDataConstr])
                                                                                                                                                )
                                                                                                                                              ))
                                                                                                                                          )
                                                                                                                                        ))
                                                                                                                                    App($TuplesListToDataList6
                                                                                                                                      xIn692))
                                                                                                                                  App($TuplesListToDataList6
                                                                                                                                    xIn693))
                                                                                                                                )
                                                                                                                              ))in
                                                                                                                          
                                                                                                                            let scalus.benchmarks.KnightsTest$.descendants725=(lam self699:scalus.benchmarks.KnightsTest$.ChessSet -> scalus.prelude.List[scalus.benchmarks.KnightsTest$.ChessSet][(ProdDataList -> SumDataList)].
                                                                                                                                if
                                                                                                                                  if
                                                                                                                                    App(scalus.benchmarks.KnightsTest$.canJumpFirst428
                                                                                                                                    self699)
                                                                                                                                  then
                                                                                                                                    App(scalus.benchmarks.KnightsTest$.isDeadEnd486
                                                                                                                                    App(App(scalus.benchmarks.KnightsTest$.addPiece490
                                                                                                                                        self699)
                                                                                                                                      SndPair(
                                                                                                                                          UnConstrData(
                                                                                                                                            repr.proxy(
                                                                                                                                              App(scalus.benchmarks.KnightsTest$.firstPiece425
                                                                                                                                              self699)
                                                                                                                                            [ProdDataConstr])
                                                                                                                                          )
                                                                                                                                        )))
                                                                                                                                  else
                                                                                                                                    (con bool False)
                                                                                                                                then
                                                                                                                                  cast.repr.proxy(
                                                                                                                                    cast.repr.proxy(
                                                                                                                                      [
                                                                                                                                        (builtin mkNilData)
                                                                                                                                        (con unit ())
                                                                                                                                      ]
                                                                                                                                    :scalus.prelude.List[*][SumDataList])
                                                                                                                                  :scalus.prelude.List[scalus.benchmarks.KnightsTest$.ChessSet][SumDataList])
                                                                                                                                else
                                                                                                                                  let singles701=App(scalus.benchmarks.KnightsTest$.singleDescend539
                                                                                                                                    self699)in
                                                                                                                                  
                                                                                                                                    ListMatch{listInput702(=
                                                                                                                                      var(singles701:scalus.prelude.List[scalus.benchmarks.KnightsTest$.ChessSet][SumDataList])
                                                                                                                                    ) matchCons(consHead703(=
                                                                                                                                             HeadList(
                                                                                                                                               listInput702
                                                                                                                                             )
                                                                                                                                           ),consTail704(=
                                                                                                                                             TailList(
                                                                                                                                               listInput702
                                                                                                                                             )
                                                                                                                                           )) =>if
                                                                                                                                                  App(scalus.prelude.List$.isEmpty22
                                                                                                                                                  consTail704)
                                                                                                                                                then
                                                                                                                                                  singles701
                                                                                                                                                else
                                                                                                                                                  cast.repr.proxy(
                                                                                                                                                    cast.repr.proxy(
                                                                                                                                                      [
                                                                                                                                                        (builtin mkNilData)
                                                                                                                                                        (con unit ())
                                                                                                                                                      ]
                                                                                                                                                    :scalus.prelude.List[*][SumDataList])
                                                                                                                                                  :scalus.prelude.List[scalus.benchmarks.KnightsTest$.ChessSet][SumDataList])Nil =>App((lam xIn721:(scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet] -> B#82197) -> scalus.prelude.List[B#82197][((ProdDataList -> TypeVar) -> SumDataList)].
                                                                                                                                                 App(App(scalus.prelude.List$.map154
                                                                                                                                                   App($TuplesListToDataList6
                                                                                                                                                     App((lam xIn705:(scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet] -> scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet] -> scalus.prelude.OrdCompanion$.Order) -> scalus.prelude.List[scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet]][((ProdDataList -> (ProdDataList -> DataConstr)) -> SumDataPairList)].
                                                                                                                                                           App($dataListToTuplesList14
                                                                                                                                                           App(App(scalus.prelude.List$.quicksort545
                                                                                                                                                               App(scalus.benchmarks.KnightsTest$.descAndNo526
                                                                                                                                                                 self699))
                                                                                                                                                             (lam xIn706:scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet] -> scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet] -> scalus.prelude.OrdCompanion$.Order[(TypeVar -> (TypeVar -> DataConstr))].
                                                                                                                                                                 (lam xIn707:scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet] -> scalus.prelude.OrdCompanion$.Order[(TypeVar -> DataConstr)].
                                                                                                                                                                   App(App(xIn705
                                                                                                                                                                     SndPair(
                                                                                                                                                                         UnConstrData(
                                                                                                                                                                           repr.proxy(
                                                                                                                                                                             xIn706
                                                                                                                                                                           [ProdDataConstr])
                                                                                                                                                                         )
                                                                                                                                                                       ))
                                                                                                                                                                   SndPair(
                                                                                                                                                                       UnConstrData(
                                                                                                                                                                         repr.proxy(
                                                                                                                                                                           xIn707
                                                                                                                                                                         [ProdDataConstr])
                                                                                                                                                                       )
                                                                                                                                                                     ))
                                                                                                                                                                 )
                                                                                                                                                               )))
                                                                                                                                                         )
                                                                                                                                                       App((lam xIn710:(scalus.benchmarks.KnightsTest$.ChessSet -> scalus.benchmarks.KnightsTest$.ChessSet -> scalus.prelude.OrdCompanion$.Order) -> scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet] -> scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet] -> scalus.prelude.OrdCompanion$.Order[((ProdDataList -> (ProdDataList -> DataConstr)) -> (ProdDataList -> (ProdDataList -> DataConstr)))].
                                                                                                                                                             App(App(scalus.prelude.OrdCompanion$.given_Ord_A_B643
                                                                                                                                                               (lam xIn708:Int -> Int -> scalus.prelude.OrdCompanion$.Order[(TypeVar -> (TypeVar -> DataConstr))].
                                                                                                                                                                   (lam xIn709:Int -> scalus.prelude.OrdCompanion$.Order[(TypeVar -> DataConstr)].
                                                                                                                                                                     App(App(scalus.prelude.OrdCompanion$.given_Ord_BigInt648
                                                                                                                                                                       UnIData(
                                                                                                                                                                           xIn708
                                                                                                                                                                         ))
                                                                                                                                                                     UnIData(
                                                                                                                                                                         xIn709
                                                                                                                                                                       ))
                                                                                                                                                                   )
                                                                                                                                                                 ))
                                                                                                                                                             (lam xIn711:scalus.benchmarks.KnightsTest$.ChessSet -> scalus.benchmarks.KnightsTest$.ChessSet -> scalus.prelude.OrdCompanion$.Order[(TypeVar -> (TypeVar -> DataConstr))].
                                                                                                                                                                 (lam xIn712:scalus.benchmarks.KnightsTest$.ChessSet -> scalus.prelude.OrdCompanion$.Order[(TypeVar -> DataConstr)].
                                                                                                                                                                   App(App(xIn710
                                                                                                                                                                     SndPair(
                                                                                                                                                                         UnConstrData(
                                                                                                                                                                           repr.proxy(
                                                                                                                                                                             xIn711
                                                                                                                                                                           [ProdDataConstr])
                                                                                                                                                                         )
                                                                                                                                                                       ))
                                                                                                                                                                   SndPair(
                                                                                                                                                                       UnConstrData(
                                                                                                                                                                         repr.proxy(
                                                                                                                                                                           xIn712
                                                                                                                                                                         [ProdDataConstr])
                                                                                                                                                                       )
                                                                                                                                                                     ))
                                                                                                                                                                 )
                                                                                                                                                               ))
                                                                                                                                                           )
                                                                                                                                                         scalus.benchmarks.KnightsTest$.given_Ord_ChessSet698))))
                                                                                                                                                 (lam xIn722:scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet] -> B#82197[(TypeVar -> TypeVar)].
                                                                                                                                                     App(xIn721
                                                                                                                                                     SndPair(
                                                                                                                                                         UnConstrData(
                                                                                                                                                           repr.proxy(
                                                                                                                                                             xIn722
                                                                                                                                                           [ProdDataConstr])
                                                                                                                                                         )
                                                                                                                                                       ))
                                                                                                                                                   ))
                                                                                                                                               )
                                                                                                                                             (lam _$6723:scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet] -> scalus.benchmarks.KnightsTest$.ChessSet[(ProdDataList -> ProdDataConstr)].
                                                                                                                                                 HeadList(
                                                                                                                                                   _$6723_tail_1(=
                                                                                                                                                     TailList(
                                                                                                                                                       _$6723
                                                                                                                                                     )
                                                                                                                                                   )
                                                                                                                                                 )
                                                                                                                                               ))}:scalus.prelude.List[scalus.benchmarks.KnightsTest$.ChessSet]
                                                                                                                                  
                                                                                                                              )in
                                                                                                                            
                                                                                                                              let scalus.benchmarks.KnightsTest$.grow737=(lam item726:scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet] -> scalus.prelude.List[scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet]][(ProdDataList -> SumDataList)].
                                                                                                                                  let $4$729=Constr(scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet],
                                                                                                                                      MkCons(cast.repr.proxy(
                                                                                                                                        x727(=
                                                                                                                                          HeadList(
                                                                                                                                            item726
                                                                                                                                          )
                                                                                                                                        )
                                                                                                                                      :Int[PackedData])
                                                                                                                                      MkCons(cast.repr.proxy(
                                                                                                                                        board728(=
                                                                                                                                          HeadList(
                                                                                                                                            item726_t(=
                                                                                                                                              TailList(
                                                                                                                                                item726
                                                                                                                                              )
                                                                                                                                            )
                                                                                                                                          )
                                                                                                                                        )
                                                                                                                                      :scalus.benchmarks.KnightsTest$.ChessSet[ProdDataConstr])
                                                                                                                                      [
                                                                                                                                        (builtin mkNilData)
                                                                                                                                        (con unit ())
                                                                                                                                      ]))
                                                                                                                                    )in
                                                                                                                                  
                                                                                                                                    let x730=HeadList(
                                                                                                                                        $4$729
                                                                                                                                      )in
                                                                                                                                    
                                                                                                                                      let board731=HeadList(
                                                                                                                                          $4$729_tail_1(=
                                                                                                                                            TailList(
                                                                                                                                              $4$729
                                                                                                                                            )
                                                                                                                                          )
                                                                                                                                        )in
                                                                                                                                      
                                                                                                                                        App((lam xIn732:(scalus.benchmarks.KnightsTest$.ChessSet -> B#82197) -> scalus.prelude.List[B#82197][((ProdDataList -> TypeVar) -> SumDataList)].
                                                                                                                                            App(App(scalus.prelude.List$.map154
                                                                                                                                              App(scalus.benchmarks.KnightsTest$.descendants725
                                                                                                                                                SndPair(
                                                                                                                                                    UnConstrData(
                                                                                                                                                      board731
                                                                                                                                                    )
                                                                                                                                                  )))
                                                                                                                                            (lam xIn733:scalus.benchmarks.KnightsTest$.ChessSet -> B#82197[(TypeVar -> TypeVar)].
                                                                                                                                                App(xIn732
                                                                                                                                                SndPair(
                                                                                                                                                    UnConstrData(
                                                                                                                                                      repr.proxy(
                                                                                                                                                        xIn733
                                                                                                                                                      [ProdDataConstr])
                                                                                                                                                    )
                                                                                                                                                  ))
                                                                                                                                              ))
                                                                                                                                          )
                                                                                                                                        (lam xIn736:scalus.benchmarks.KnightsTest$.ChessSet -> scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet][(ProdDataList -> ProdDataConstr)].
                                                                                                                                            ConstrData((con integer 0)
                                                                                                                                            App((lam _$7734:scalus.benchmarks.KnightsTest$.ChessSet -> scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet][(ProdDataList -> ProdDataList)].
                                                                                                                                                Constr(scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet],
                                                                                                                                                  MkCons(IData(
                                                                                                                                                    App(App((builtin addInteger)
                                                                                                                                                      UnIData(
                                                                                                                                                          x730
                                                                                                                                                        ))
                                                                                                                                                    (con integer 1))
                                                                                                                                                  )
                                                                                                                                                  MkCons(ConstrData((con integer 0)
                                                                                                                                                  _$7734)
                                                                                                                                                  [
                                                                                                                                                    (builtin mkNilData)
                                                                                                                                                    (con unit ())
                                                                                                                                                  ]))
                                                                                                                                                )
                                                                                                                                              )
                                                                                                                                            xIn736))
                                                                                                                                          ))
                                                                                                                                      
                                                                                                                                    
                                                                                                                                  
                                                                                                                                )in
                                                                                                                              
                                                                                                                                let scalus.benchmarks.KnightsTest$.isTourFinished743=(lam self738:scalus.benchmarks.KnightsTest$.ChessSet -> Boolean[(ProdDataList -> Constant)].
                                                                                                                                    if
                                                                                                                                      let i1739=HeadList(
                                                                                                                                          self738_tail_1(=
                                                                                                                                            TailList(
                                                                                                                                              self738
                                                                                                                                            )
                                                                                                                                          )
                                                                                                                                        )in
                                                                                                                                      
                                                                                                                                        let i2741=App(App((builtin multiplyInteger)
                                                                                                                                            UnIData(
                                                                                                                                                HeadList(
                                                                                                                                                  self738
                                                                                                                                                )
                                                                                                                                              ))
                                                                                                                                          UnIData(
                                                                                                                                              HeadList(
                                                                                                                                                self738
                                                                                                                                              )
                                                                                                                                            ))in
                                                                                                                                        
                                                                                                                                          App(App((builtin equalsInteger)
                                                                                                                                            UnIData(
                                                                                                                                                i1739
                                                                                                                                              ))
                                                                                                                                          i2741)
                                                                                                                                        
                                                                                                                                      
                                                                                                                                    then
                                                                                                                                      App(scalus.benchmarks.KnightsTest$.canJumpFirst428
                                                                                                                                      self738)
                                                                                                                                    else
                                                                                                                                      (con bool False)
                                                                                                                                  )in
                                                                                                                                
                                                                                                                                  let scalus.benchmarks.KnightsTest$.isDone745=(lam item744:scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet] -> Boolean[(ProdDataList -> Constant)].
                                                                                                                                      App(scalus.benchmarks.KnightsTest$.isTourFinished743
                                                                                                                                      SndPair(
                                                                                                                                          UnConstrData(
                                                                                                                                            HeadList(
                                                                                                                                              item744_tail_1(=
                                                                                                                                                TailList(
                                                                                                                                                  item744
                                                                                                                                                )
                                                                                                                                              )
                                                                                                                                            )
                                                                                                                                          )
                                                                                                                                        ))
                                                                                                                                    )in
                                                                                                                                  
                                                                                                                                    let scalus.benchmarks.KnightsTest$.runKnights763=(lam depth746:Int -> Int -> scalus.prelude.List[scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet]][(Constant -> (Constant -> PackedSumDataList))].
                                                                                                                                        (lam boardSize747:Int -> scalus.prelude.List[scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet]][(Constant -> PackedSumDataList)].
                                                                                                                                          App(scalus.benchmarks.KnightsTest$.toList17
                                                                                                                                          App(App(App((lam xIn748:scalus.benchmarks.KnightsTest$.Queue[scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet]] -> (scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet] -> scalus.prelude.List[scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet]]) -> (scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet] -> Boolean) -> scalus.benchmarks.KnightsTest$.Queue[scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet]][(ProdDataList -> ((ProdDataList -> SumDataPairList) -> ((ProdDataList -> Constant) -> ProdDataList)))].
                                                                                                                                                    (lam xIn749:(scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet] -> scalus.prelude.List[scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet]]) -> (scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet] -> Boolean) -> scalus.benchmarks.KnightsTest$.Queue[scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet]][((ProdDataList -> SumDataPairList) -> ((ProdDataList -> Constant) -> ProdDataList))].
                                                                                                                                                      (lam xIn751:(scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet] -> Boolean) -> scalus.benchmarks.KnightsTest$.Queue[scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet]][((ProdDataList -> Constant) -> ProdDataList)].
                                                                                                                                                        App(App(App(App(scalus.benchmarks.KnightsTest$.depthSearch65
                                                                                                                                                              depth746)
                                                                                                                                                            xIn748)
                                                                                                                                                          (lam xIn750:scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet] -> scalus.prelude.List[scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet]][(TypeVar -> SumDataList)].
                                                                                                                                                              App($TuplesListToDataList6
                                                                                                                                                              App(xIn749
                                                                                                                                                                SndPair(
                                                                                                                                                                    UnConstrData(
                                                                                                                                                                      repr.proxy(
                                                                                                                                                                        xIn750
                                                                                                                                                                      [ProdDataConstr])
                                                                                                                                                                    )
                                                                                                                                                                  )))
                                                                                                                                                            ))
                                                                                                                                                        (lam xIn752:scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet] -> Boolean[(TypeVar -> Constant)].
                                                                                                                                                            App(xIn751
                                                                                                                                                            SndPair(
                                                                                                                                                                UnConstrData(
                                                                                                                                                                  repr.proxy(
                                                                                                                                                                    xIn752
                                                                                                                                                                  [ProdDataConstr])
                                                                                                                                                                )
                                                                                                                                                              ))
                                                                                                                                                          ))
                                                                                                                                                      )
                                                                                                                                                    )
                                                                                                                                                  )
                                                                                                                                                App(scalus.benchmarks.KnightsTest$.root245
                                                                                                                                                  boardSize747))
                                                                                                                                              (lam xIn758:scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet] -> scalus.prelude.List[scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet]][(ProdDataList -> SumDataPairList)].
                                                                                                                                                  App($dataListToTuplesList14
                                                                                                                                                  App((lam item757:scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet] -> scalus.prelude.List[scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet]][(ProdDataList -> SumDataList)].
                                                                                                                                                        App(scalus.benchmarks.KnightsTest$.grow737
                                                                                                                                                        item757)
                                                                                                                                                      )
                                                                                                                                                    xIn758))
                                                                                                                                                ))
                                                                                                                                            (lam item761:scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet] -> Boolean[(ProdDataList -> Constant)].
                                                                                                                                                App(scalus.benchmarks.KnightsTest$.isDone745
                                                                                                                                                item761)
                                                                                                                                              )))
                                                                                                                                        )
                                                                                                                                      )in
                                                                                                                                    
                                                                                                                                      (letrec scalus.prelude.List$.listEq764=(lam evidence$1765:(A#81907 -> A#81907 -> Boolean) -> scalus.prelude.List[A#81907] -> scalus.prelude.List[A#81907] -> Boolean[((TypeVar -> (TypeVar -> Constant)) -> (SumDataList -> (SumDataList -> Constant)))].
                                                                                                                                          (lam lhs766:scalus.prelude.List[A#81907] -> scalus.prelude.List[A#81907] -> Boolean[(SumDataList -> (SumDataList -> Constant))].
                                                                                                                                            (lam rhs767:scalus.prelude.List[A#81907] -> Boolean[(SumDataList -> Constant)].
                                                                                                                                              ListMatch{listInput768(=
                                                                                                                                                var(lhs766:scalus.prelude.List[A#81907][SumDataList])
                                                                                                                                              ) matchCons(consHead769(=
                                                                                                                                                       HeadList(
                                                                                                                                                         listInput768
                                                                                                                                                       )
                                                                                                                                                     ),consTail770(=
                                                                                                                                                       TailList(
                                                                                                                                                         listInput768
                                                                                                                                                       )
                                                                                                                                                     )) =>ListMatch{listInput771(=
                                                                                                                                                         var(rhs767:scalus.prelude.List[A#81907][SumDataList])
                                                                                                                                                       ) matchCons(consHead772(=
                                                                                                                                                                HeadList(
                                                                                                                                                                  listInput771
                                                                                                                                                                )
                                                                                                                                                              ),consTail773(=
                                                                                                                                                                TailList(
                                                                                                                                                                  listInput771
                                                                                                                                                                )
                                                                                                                                                              )) =>if
                                                                                                                                                                     App(App(evidence$1765
                                                                                                                                                                       cast.repr.proxy(
                                                                                                                                                                           cast.repr.proxy(
                                                                                                                                                                             consHead769
                                                                                                                                                                           :A#81907[TypeVar])
                                                                                                                                                                         :A#81907[TypeVar]))
                                                                                                                                                                     cast.repr.proxy(
                                                                                                                                                                         cast.repr.proxy(
                                                                                                                                                                           consHead772
                                                                                                                                                                         :A#81907[TypeVar])
                                                                                                                                                                       :A#81907[TypeVar]))
                                                                                                                                                                   then
                                                                                                                                                                     App(App(App(scalus.prelude.List$.listEq764
                                                                                                                                                                         evidence$1765)
                                                                                                                                                                       consTail770)
                                                                                                                                                                     consTail773)
                                                                                                                                                                   else
                                                                                                                                                                     (con bool False)Nil =>(con bool False)}:BooleanNil =>ListMatch{listInput780(=
                                                                                                                                                         var(rhs767:scalus.prelude.List[A#81907][SumDataList])
                                                                                                                                                       ) matchCons(consHead781(=
                                                                                                                                                                HeadList(
                                                                                                                                                                  listInput780
                                                                                                                                                                )
                                                                                                                                                              ),consTail782(=
                                                                                                                                                                TailList(
                                                                                                                                                                  listInput780
                                                                                                                                                                )
                                                                                                                                                              )) =>(con bool False)Nil =>(con bool True)}:Boolean}:Boolean
                                                                                                                                            )
                                                                                                                                          )
                                                                                                                                        ) in
                                                                                                                                        let scalus.prelude.Option$.optionEq799=(lam eq783:(A#81633 -> A#81633 -> Boolean) -> scalus.prelude.Option[A#81633] -> scalus.prelude.Option[A#81633] -> Boolean[((TypeVar -> (TypeVar -> Constant)) -> (DataConstr -> (DataConstr -> Constant)))].
                                                                                                                                            (lam a784:scalus.prelude.Option[A#81633] -> scalus.prelude.Option[A#81633] -> Boolean[(DataConstr -> (DataConstr -> Constant))].
                                                                                                                                              (lam b785:scalus.prelude.Option[A#81633] -> Boolean[(DataConstr -> Constant)].
                                                                                                                                                if
                                                                                                                                                  EqualsInteger(_match_constr_idx787(=
                                                                                                                                                    FstPair(
                                                                                                                                                      _match_scrutinee786(=
                                                                                                                                                        UnConstrData(
                                                                                                                                                          a784
                                                                                                                                                        )
                                                                                                                                                      )
                                                                                                                                                    )
                                                                                                                                                  )
                                                                                                                                                  (con integer 0))
                                                                                                                                                then
                                                                                                                                                  if
                                                                                                                                                    EqualsInteger(_match_constr_idx795(=
                                                                                                                                                      FstPair(
                                                                                                                                                        _match_scrutinee794(=
                                                                                                                                                          UnConstrData(
                                                                                                                                                            b785
                                                                                                                                                          )
                                                                                                                                                        )
                                                                                                                                                      )
                                                                                                                                                    )
                                                                                                                                                    (con integer 0))
                                                                                                                                                  then
                                                                                                                                                    App(App(eq783
                                                                                                                                                      cast.repr.proxy(
                                                                                                                                                          cast.repr.proxy(
                                                                                                                                                            value793(=
                                                                                                                                                              HeadList(
                                                                                                                                                                _match_datalist788(=
                                                                                                                                                                  SndPair(
                                                                                                                                                                    _match_scrutinee786
                                                                                                                                                                  )
                                                                                                                                                                )
                                                                                                                                                              )
                                                                                                                                                            )
                                                                                                                                                          :A#81633[TypeVar])
                                                                                                                                                        :A#81633[TypeVar]))
                                                                                                                                                    cast.repr.proxy(
                                                                                                                                                        cast.repr.proxy(
                                                                                                                                                          value2797(=
                                                                                                                                                            HeadList(
                                                                                                                                                              _match_datalist796(=
                                                                                                                                                                SndPair(
                                                                                                                                                                  _match_scrutinee794
                                                                                                                                                                )
                                                                                                                                                              )
                                                                                                                                                            )
                                                                                                                                                          )
                                                                                                                                                        :A#81633[TypeVar])
                                                                                                                                                      :A#81633[TypeVar]))
                                                                                                                                                  else
                                                                                                                                                    if
                                                                                                                                                      EqualsInteger(_match_constr_idx795
                                                                                                                                                      (con integer 1))
                                                                                                                                                    then
                                                                                                                                                      (con bool False)
                                                                                                                                                    else
                                                                                                                                                      (force [
                                                                                                                                                        (force (builtin trace))
                                                                                                                                                        (con string "Incorrect constructor index for type scalus.prelude.Option[A#81633]")
                                                                                                                                                        (delay (error))
                                                                                                                                                      ])
                                                                                                                                                else
                                                                                                                                                  if
                                                                                                                                                    EqualsInteger(_match_constr_idx787
                                                                                                                                                    (con integer 1))
                                                                                                                                                  then
                                                                                                                                                    if
                                                                                                                                                      EqualsInteger(_match_constr_idx790(=
                                                                                                                                                        FstPair(
                                                                                                                                                          _match_scrutinee789(=
                                                                                                                                                            UnConstrData(
                                                                                                                                                              b785
                                                                                                                                                            )
                                                                                                                                                          )
                                                                                                                                                        )
                                                                                                                                                      )
                                                                                                                                                      (con integer 0))
                                                                                                                                                    then
                                                                                                                                                      (con bool False)
                                                                                                                                                    else
                                                                                                                                                      if
                                                                                                                                                        EqualsInteger(_match_constr_idx790
                                                                                                                                                        (con integer 1))
                                                                                                                                                      then
                                                                                                                                                        (con bool True)
                                                                                                                                                      else
                                                                                                                                                        (force [
                                                                                                                                                          (force (builtin trace))
                                                                                                                                                          (con string "Incorrect constructor index for type scalus.prelude.Option[A#81633]")
                                                                                                                                                          (delay (error))
                                                                                                                                                        ])
                                                                                                                                                  else
                                                                                                                                                    (force [
                                                                                                                                                      (force (builtin trace))
                                                                                                                                                      (con string "Incorrect constructor index for type scalus.prelude.Option[A#81633]")
                                                                                                                                                      (delay (error))
                                                                                                                                                    ])
                                                                                                                                              )
                                                                                                                                            )
                                                                                                                                          )in
                                                                                                                                        
                                                                                                                                          let scalus.benchmarks.KnightsTest$.given_Eq_ChessSet919=App((lam xIn889:(scalus.prelude.List[scala.Tuple2[Int, Int]] -> scalus.prelude.List[scala.Tuple2[Int, Int]] -> Boolean) -> scalus.benchmarks.KnightsTest$.ChessSet -> scalus.benchmarks.KnightsTest$.ChessSet -> Boolean[((SumDataPairList -> (SumDataPairList -> Constant)) -> (ProdDataList -> (ProdDataList -> Constant)))].
                                                                                                                                                App(App((lam xIn880:(scalus.benchmarks.KnightsTest$.ChessSet -> B#252131) -> (B#252131 -> B#252131 -> Boolean) -> scalus.benchmarks.KnightsTest$.ChessSet -> scalus.benchmarks.KnightsTest$.ChessSet -> Boolean[((ProdDataList -> TypeVar) -> ((TypeVar -> (TypeVar -> Constant)) -> (ProdDataList -> (ProdDataList -> Constant))))].
                                                                                                                                                      (lam xIn882:(B#252131 -> B#252131 -> Boolean) -> scalus.benchmarks.KnightsTest$.ChessSet -> scalus.benchmarks.KnightsTest$.ChessSet -> Boolean[((TypeVar -> (TypeVar -> Constant)) -> (ProdDataList -> (ProdDataList -> Constant)))].
                                                                                                                                                        (lam xIn885:scalus.benchmarks.KnightsTest$.ChessSet -> scalus.benchmarks.KnightsTest$.ChessSet -> Boolean[(ProdDataList -> (ProdDataList -> Constant))].
                                                                                                                                                          (lam xIn886:scalus.benchmarks.KnightsTest$.ChessSet -> Boolean[(ProdDataList -> Constant)].
                                                                                                                                                            App(App(App(App(App(scalus.prelude.EqCompanion$.orElseBy296
                                                                                                                                                                    (lam xIn878:scalus.benchmarks.KnightsTest$.ChessSet -> scalus.benchmarks.KnightsTest$.ChessSet -> Boolean[(TypeVar -> (TypeVar -> Constant))].
                                                                                                                                                                        (lam xIn879:scalus.benchmarks.KnightsTest$.ChessSet -> Boolean[(TypeVar -> Constant)].
                                                                                                                                                                          App(App(App((lam xIn848:(scalus.prelude.Option[scala.Tuple2[Int, Int]] -> scalus.prelude.Option[scala.Tuple2[Int, Int]] -> Boolean) -> scalus.benchmarks.KnightsTest$.ChessSet -> scalus.benchmarks.KnightsTest$.ChessSet -> Boolean[((DataConstr -> (DataConstr -> Constant)) -> (ProdDataList -> (ProdDataList -> Constant)))].
                                                                                                                                                                                  App(App((lam xIn839:(scalus.benchmarks.KnightsTest$.ChessSet -> B#252131) -> (B#252131 -> B#252131 -> Boolean) -> scalus.benchmarks.KnightsTest$.ChessSet -> scalus.benchmarks.KnightsTest$.ChessSet -> Boolean[((ProdDataList -> TypeVar) -> ((TypeVar -> (TypeVar -> Constant)) -> (ProdDataList -> (ProdDataList -> Constant))))].
                                                                                                                                                                                        (lam xIn841:(B#252131 -> B#252131 -> Boolean) -> scalus.benchmarks.KnightsTest$.ChessSet -> scalus.benchmarks.KnightsTest$.ChessSet -> Boolean[((TypeVar -> (TypeVar -> Constant)) -> (ProdDataList -> (ProdDataList -> Constant)))].
                                                                                                                                                                                          (lam xIn844:scalus.benchmarks.KnightsTest$.ChessSet -> scalus.benchmarks.KnightsTest$.ChessSet -> Boolean[(ProdDataList -> (ProdDataList -> Constant))].
                                                                                                                                                                                            (lam xIn845:scalus.benchmarks.KnightsTest$.ChessSet -> Boolean[(ProdDataList -> Constant)].
                                                                                                                                                                                              App(App(App(App(App(scalus.prelude.EqCompanion$.orElseBy296
                                                                                                                                                                                                      (lam xIn837:scalus.benchmarks.KnightsTest$.ChessSet -> scalus.benchmarks.KnightsTest$.ChessSet -> Boolean[(TypeVar -> (TypeVar -> Constant))].
                                                                                                                                                                                                          (lam xIn838:scalus.benchmarks.KnightsTest$.ChessSet -> Boolean[(TypeVar -> Constant)].
                                                                                                                                                                                                            App(App(App((lam xIn825:(Int -> Int -> Boolean) -> scalus.benchmarks.KnightsTest$.ChessSet -> scalus.benchmarks.KnightsTest$.ChessSet -> Boolean[((Constant -> (Constant -> Constant)) -> (ProdDataList -> (ProdDataList -> Constant)))].
                                                                                                                                                                                                                    App(App((lam xIn816:(scalus.benchmarks.KnightsTest$.ChessSet -> B#252131) -> (B#252131 -> B#252131 -> Boolean) -> scalus.benchmarks.KnightsTest$.ChessSet -> scalus.benchmarks.KnightsTest$.ChessSet -> Boolean[((ProdDataList -> TypeVar) -> ((TypeVar -> (TypeVar -> Constant)) -> (ProdDataList -> (ProdDataList -> Constant))))].
                                                                                                                                                                                                                          (lam xIn818:(B#252131 -> B#252131 -> Boolean) -> scalus.benchmarks.KnightsTest$.ChessSet -> scalus.benchmarks.KnightsTest$.ChessSet -> Boolean[((TypeVar -> (TypeVar -> Constant)) -> (ProdDataList -> (ProdDataList -> Constant)))].
                                                                                                                                                                                                                            (lam xIn821:scalus.benchmarks.KnightsTest$.ChessSet -> scalus.benchmarks.KnightsTest$.ChessSet -> Boolean[(ProdDataList -> (ProdDataList -> Constant))].
                                                                                                                                                                                                                              (lam xIn822:scalus.benchmarks.KnightsTest$.ChessSet -> Boolean[(ProdDataList -> Constant)].
                                                                                                                                                                                                                                App(App(App(App(App(scalus.prelude.EqCompanion$.orElseBy296
                                                                                                                                                                                                                                        (lam xIn814:scalus.benchmarks.KnightsTest$.ChessSet -> scalus.benchmarks.KnightsTest$.ChessSet -> Boolean[(TypeVar -> (TypeVar -> Constant))].
                                                                                                                                                                                                                                            (lam xIn815:scalus.benchmarks.KnightsTest$.ChessSet -> Boolean[(TypeVar -> Constant)].
                                                                                                                                                                                                                                              App(App(App((lam xIn802:(Int -> Int -> Boolean) -> scalus.benchmarks.KnightsTest$.ChessSet -> scalus.benchmarks.KnightsTest$.ChessSet -> Boolean[((Constant -> (Constant -> Constant)) -> (ProdDataList -> (ProdDataList -> Constant)))].
                                                                                                                                                                                                                                                      (lam xIn805:scalus.benchmarks.KnightsTest$.ChessSet -> scalus.benchmarks.KnightsTest$.ChessSet -> Boolean[(ProdDataList -> (ProdDataList -> Constant))].
                                                                                                                                                                                                                                                        (lam xIn806:scalus.benchmarks.KnightsTest$.ChessSet -> Boolean[(ProdDataList -> Constant)].
                                                                                                                                                                                                                                                          App(App(App(App(scalus.prelude.EqCompanion$.by277
                                                                                                                                                                                                                                                                (lam xIn801:scalus.benchmarks.KnightsTest$.ChessSet -> Int[(TypeVar -> PackedData)].
                                                                                                                                                                                                                                                                    App((lam _$1800:scalus.benchmarks.KnightsTest$.ChessSet -> Int[(ProdDataList -> PackedData)].
                                                                                                                                                                                                                                                                        HeadList(
                                                                                                                                                                                                                                                                          _$1800
                                                                                                                                                                                                                                                                        )
                                                                                                                                                                                                                                                                      )
                                                                                                                                                                                                                                                                    SndPair(
                                                                                                                                                                                                                                                                        UnConstrData(
                                                                                                                                                                                                                                                                          repr.proxy(
                                                                                                                                                                                                                                                                            xIn801
                                                                                                                                                                                                                                                                          [ProdDataConstr])
                                                                                                                                                                                                                                                                        )
                                                                                                                                                                                                                                                                      ))
                                                                                                                                                                                                                                                                  ))
                                                                                                                                                                                                                                                              (lam xIn803:Int -> Int -> Boolean[(TypeVar -> (TypeVar -> Constant))].
                                                                                                                                                                                                                                                                  (lam xIn804:Int -> Boolean[(TypeVar -> Constant)].
                                                                                                                                                                                                                                                                    App(App(xIn802
                                                                                                                                                                                                                                                                      UnIData(
                                                                                                                                                                                                                                                                          xIn803
                                                                                                                                                                                                                                                                        ))
                                                                                                                                                                                                                                                                    UnIData(
                                                                                                                                                                                                                                                                        xIn804
                                                                                                                                                                                                                                                                      ))
                                                                                                                                                                                                                                                                  )
                                                                                                                                                                                                                                                                ))
                                                                                                                                                                                                                                                            ConstrData((con integer 0)
                                                                                                                                                                                                                                                              xIn805))
                                                                                                                                                                                                                                                          ConstrData((con integer 0)
                                                                                                                                                                                                                                                            xIn806))
                                                                                                                                                                                                                                                        )
                                                                                                                                                                                                                                                      )
                                                                                                                                                                                                                                                    )
                                                                                                                                                                                                                                                  (lam i1807:Int -> Int -> Boolean[(Constant -> (Constant -> Constant))].
                                                                                                                                                                                                                                                      (lam i2808:Int -> Boolean[(Constant -> Constant)].
                                                                                                                                                                                                                                                        App(App((builtin equalsInteger)
                                                                                                                                                                                                                                                          i1807)
                                                                                                                                                                                                                                                        i2808)
                                                                                                                                                                                                                                                      )
                                                                                                                                                                                                                                                    ))
                                                                                                                                                                                                                                                SndPair(
                                                                                                                                                                                                                                                    UnConstrData(
                                                                                                                                                                                                                                                      repr.proxy(
                                                                                                                                                                                                                                                        xIn814
                                                                                                                                                                                                                                                      [ProdDataConstr])
                                                                                                                                                                                                                                                    )
                                                                                                                                                                                                                                                  ))
                                                                                                                                                                                                                                              SndPair(
                                                                                                                                                                                                                                                  UnConstrData(
                                                                                                                                                                                                                                                    repr.proxy(
                                                                                                                                                                                                                                                      xIn815
                                                                                                                                                                                                                                                    [ProdDataConstr])
                                                                                                                                                                                                                                                  )
                                                                                                                                                                                                                                                ))
                                                                                                                                                                                                                                            )
                                                                                                                                                                                                                                          ))
                                                                                                                                                                                                                                      (lam xIn817:scalus.benchmarks.KnightsTest$.ChessSet -> B#252131[(TypeVar -> TypeVar)].
                                                                                                                                                                                                                                          App(xIn816
                                                                                                                                                                                                                                          SndPair(
                                                                                                                                                                                                                                              UnConstrData(
                                                                                                                                                                                                                                                repr.proxy(
                                                                                                                                                                                                                                                  xIn817
                                                                                                                                                                                                                                                [ProdDataConstr])
                                                                                                                                                                                                                                              )
                                                                                                                                                                                                                                            ))
                                                                                                                                                                                                                                        ))
                                                                                                                                                                                                                                    xIn818)
                                                                                                                                                                                                                                  ConstrData((con integer 0)
                                                                                                                                                                                                                                    xIn821))
                                                                                                                                                                                                                                ConstrData((con integer 0)
                                                                                                                                                                                                                                  xIn822))
                                                                                                                                                                                                                              )
                                                                                                                                                                                                                            )
                                                                                                                                                                                                                          )
                                                                                                                                                                                                                        )
                                                                                                                                                                                                                      (lam _$2823:scalus.benchmarks.KnightsTest$.ChessSet -> Int[(ProdDataList -> PackedData)].
                                                                                                                                                                                                                          HeadList(
                                                                                                                                                                                                                            _$2823_tail_1(=
                                                                                                                                                                                                                              TailList(
                                                                                                                                                                                                                                _$2823
                                                                                                                                                                                                                              )
                                                                                                                                                                                                                            )
                                                                                                                                                                                                                          )
                                                                                                                                                                                                                        ))
                                                                                                                                                                                                                    (lam xIn826:Int -> Int -> Boolean[(TypeVar -> (TypeVar -> Constant))].
                                                                                                                                                                                                                        (lam xIn827:Int -> Boolean[(TypeVar -> Constant)].
                                                                                                                                                                                                                          App(App(xIn825
                                                                                                                                                                                                                            UnIData(
                                                                                                                                                                                                                                xIn826
                                                                                                                                                                                                                              ))
                                                                                                                                                                                                                          UnIData(
                                                                                                                                                                                                                              xIn827
                                                                                                                                                                                                                            ))
                                                                                                                                                                                                                        )
                                                                                                                                                                                                                      ))
                                                                                                                                                                                                                  )
                                                                                                                                                                                                                (lam i1830:Int -> Int -> Boolean[(Constant -> (Constant -> Constant))].
                                                                                                                                                                                                                    (lam i2831:Int -> Boolean[(Constant -> Constant)].
                                                                                                                                                                                                                      App(App((builtin equalsInteger)
                                                                                                                                                                                                                        i1830)
                                                                                                                                                                                                                      i2831)
                                                                                                                                                                                                                    )
                                                                                                                                                                                                                  ))
                                                                                                                                                                                                              SndPair(
                                                                                                                                                                                                                  UnConstrData(
                                                                                                                                                                                                                    repr.proxy(
                                                                                                                                                                                                                      xIn837
                                                                                                                                                                                                                    [ProdDataConstr])
                                                                                                                                                                                                                  )
                                                                                                                                                                                                                ))
                                                                                                                                                                                                            SndPair(
                                                                                                                                                                                                                UnConstrData(
                                                                                                                                                                                                                  repr.proxy(
                                                                                                                                                                                                                    xIn838
                                                                                                                                                                                                                  [ProdDataConstr])
                                                                                                                                                                                                                )
                                                                                                                                                                                                              ))
                                                                                                                                                                                                          )
                                                                                                                                                                                                        ))
                                                                                                                                                                                                    (lam xIn840:scalus.benchmarks.KnightsTest$.ChessSet -> B#252131[(TypeVar -> TypeVar)].
                                                                                                                                                                                                        App(xIn839
                                                                                                                                                                                                        SndPair(
                                                                                                                                                                                                            UnConstrData(
                                                                                                                                                                                                              repr.proxy(
                                                                                                                                                                                                                xIn840
                                                                                                                                                                                                              [ProdDataConstr])
                                                                                                                                                                                                            )
                                                                                                                                                                                                          ))
                                                                                                                                                                                                      ))
                                                                                                                                                                                                  xIn841)
                                                                                                                                                                                                ConstrData((con integer 0)
                                                                                                                                                                                                  xIn844))
                                                                                                                                                                                              ConstrData((con integer 0)
                                                                                                                                                                                                xIn845))
                                                                                                                                                                                            )
                                                                                                                                                                                          )
                                                                                                                                                                                        )
                                                                                                                                                                                      )
                                                                                                                                                                                    (lam _$3846:scalus.benchmarks.KnightsTest$.ChessSet -> scalus.prelude.Option[scala.Tuple2[Int, Int]][(ProdDataList -> DataConstr)].
                                                                                                                                                                                        HeadList(
                                                                                                                                                                                          _$3846_tail_2(=
                                                                                                                                                                                            TailList(
                                                                                                                                                                                              _$3846_tail_1(=
                                                                                                                                                                                                TailList(
                                                                                                                                                                                                  _$3846
                                                                                                                                                                                                )
                                                                                                                                                                                              )
                                                                                                                                                                                            )
                                                                                                                                                                                          )
                                                                                                                                                                                        )
                                                                                                                                                                                      ))
                                                                                                                                                                                  (lam xIn849:scalus.prelude.Option[scala.Tuple2[Int, Int]] -> scalus.prelude.Option[scala.Tuple2[Int, Int]] -> Boolean[(TypeVar -> (TypeVar -> Constant))].
                                                                                                                                                                                      (lam xIn850:scalus.prelude.Option[scala.Tuple2[Int, Int]] -> Boolean[(TypeVar -> Constant)].
                                                                                                                                                                                        App(App(xIn848
                                                                                                                                                                                          repr.proxy(
                                                                                                                                                                                              xIn849
                                                                                                                                                                                            [DataConstr]))
                                                                                                                                                                                        repr.proxy(
                                                                                                                                                                                            xIn850
                                                                                                                                                                                          [DataConstr]))
                                                                                                                                                                                      )
                                                                                                                                                                                    ))
                                                                                                                                                                                )
                                                                                                                                                                              App(scalus.prelude.Option$.optionEq799
                                                                                                                                                                                (lam xIn870:scala.Tuple2[Int, Int] -> scala.Tuple2[Int, Int] -> Boolean[(TypeVar -> (TypeVar -> Constant))].
                                                                                                                                                                                    (lam xIn871:scala.Tuple2[Int, Int] -> Boolean[(TypeVar -> Constant)].
                                                                                                                                                                                      App(App(App((lam xIn858:(Int -> Int -> Boolean) -> scala.Tuple2[Int, Int] -> scala.Tuple2[Int, Int] -> Boolean[((Constant -> (Constant -> Constant)) -> (ProdDataList -> (ProdDataList -> Constant)))].
                                                                                                                                                                                              App(App(scalus.prelude.EqCompanion$.given_Eq_A_B330
                                                                                                                                                                                                (lam xIn856:Int -> Int -> Boolean[(TypeVar -> (TypeVar -> Constant))].
                                                                                                                                                                                                    (lam xIn857:Int -> Boolean[(TypeVar -> Constant)].
                                                                                                                                                                                                      App(App((lam i1853:Int -> Int -> Boolean[(Constant -> (Constant -> Constant))].
                                                                                                                                                                                                            (lam i2854:Int -> Boolean[(Constant -> Constant)].
                                                                                                                                                                                                              App(App((builtin equalsInteger)
                                                                                                                                                                                                                i1853)
                                                                                                                                                                                                              i2854)
                                                                                                                                                                                                            )
                                                                                                                                                                                                          )
                                                                                                                                                                                                        UnIData(
                                                                                                                                                                                                            xIn856
                                                                                                                                                                                                          ))
                                                                                                                                                                                                      UnIData(
                                                                                                                                                                                                          xIn857
                                                                                                                                                                                                        ))
                                                                                                                                                                                                    )
                                                                                                                                                                                                  ))
                                                                                                                                                                                              (lam xIn859:Int -> Int -> Boolean[(TypeVar -> (TypeVar -> Constant))].
                                                                                                                                                                                                  (lam xIn860:Int -> Boolean[(TypeVar -> Constant)].
                                                                                                                                                                                                    App(App(xIn858
                                                                                                                                                                                                      UnIData(
                                                                                                                                                                                                          xIn859
                                                                                                                                                                                                        ))
                                                                                                                                                                                                    UnIData(
                                                                                                                                                                                                        xIn860
                                                                                                                                                                                                      ))
                                                                                                                                                                                                  )
                                                                                                                                                                                                ))
                                                                                                                                                                                            )
                                                                                                                                                                                          (lam i1863:Int -> Int -> Boolean[(Constant -> (Constant -> Constant))].
                                                                                                                                                                                              (lam i2864:Int -> Boolean[(Constant -> Constant)].
                                                                                                                                                                                                App(App((builtin equalsInteger)
                                                                                                                                                                                                  i1863)
                                                                                                                                                                                                i2864)
                                                                                                                                                                                              )
                                                                                                                                                                                            ))
                                                                                                                                                                                        SndPair(
                                                                                                                                                                                            UnConstrData(
                                                                                                                                                                                              repr.proxy(
                                                                                                                                                                                                xIn870
                                                                                                                                                                                              [ProdDataConstr])
                                                                                                                                                                                            )
                                                                                                                                                                                          ))
                                                                                                                                                                                      SndPair(
                                                                                                                                                                                          UnConstrData(
                                                                                                                                                                                            repr.proxy(
                                                                                                                                                                                              xIn871
                                                                                                                                                                                            [ProdDataConstr])
                                                                                                                                                                                          )
                                                                                                                                                                                        ))
                                                                                                                                                                                    )
                                                                                                                                                                                  )))
                                                                                                                                                                            SndPair(
                                                                                                                                                                                UnConstrData(
                                                                                                                                                                                  repr.proxy(
                                                                                                                                                                                    xIn878
                                                                                                                                                                                  [ProdDataConstr])
                                                                                                                                                                                )
                                                                                                                                                                              ))
                                                                                                                                                                          SndPair(
                                                                                                                                                                              UnConstrData(
                                                                                                                                                                                repr.proxy(
                                                                                                                                                                                  xIn879
                                                                                                                                                                                [ProdDataConstr])
                                                                                                                                                                              )
                                                                                                                                                                            ))
                                                                                                                                                                        )
                                                                                                                                                                      ))
                                                                                                                                                                  (lam xIn881:scalus.benchmarks.KnightsTest$.ChessSet -> B#252131[(TypeVar -> TypeVar)].
                                                                                                                                                                      App(xIn880
                                                                                                                                                                      SndPair(
                                                                                                                                                                          UnConstrData(
                                                                                                                                                                            repr.proxy(
                                                                                                                                                                              xIn881
                                                                                                                                                                            [ProdDataConstr])
                                                                                                                                                                          )
                                                                                                                                                                        ))
                                                                                                                                                                    ))
                                                                                                                                                                xIn882)
                                                                                                                                                              ConstrData((con integer 0)
                                                                                                                                                                xIn885))
                                                                                                                                                            ConstrData((con integer 0)
                                                                                                                                                              xIn886))
                                                                                                                                                          )
                                                                                                                                                        )
                                                                                                                                                      )
                                                                                                                                                    )
                                                                                                                                                  (lam xIn888:scalus.benchmarks.KnightsTest$.ChessSet -> scalus.prelude.List[scala.Tuple2[Int, Int]][(ProdDataList -> TypeVar)].
                                                                                                                                                      repr.proxy(
                                                                                                                                                        ListData(
                                                                                                                                                          App($TuplesListToDataList6
                                                                                                                                                          UnMapData(
                                                                                                                                                              App((lam _$4887:scalus.benchmarks.KnightsTest$.ChessSet -> scalus.prelude.List[scala.Tuple2[Int, Int]][(ProdDataList -> SumDataAssocMap)].
                                                                                                                                                                  HeadList(
                                                                                                                                                                    _$4887_tail_3(=
                                                                                                                                                                      TailList(
                                                                                                                                                                        _$4887_tail_2(=
                                                                                                                                                                          TailList(
                                                                                                                                                                            _$4887_tail_1(=
                                                                                                                                                                              TailList(
                                                                                                                                                                                _$4887
                                                                                                                                                                              )
                                                                                                                                                                            )
                                                                                                                                                                          )
                                                                                                                                                                        )
                                                                                                                                                                      )
                                                                                                                                                                    )
                                                                                                                                                                  )
                                                                                                                                                                )
                                                                                                                                                              xIn888)
                                                                                                                                                            ))
                                                                                                                                                        )
                                                                                                                                                      [TypeVar])
                                                                                                                                                    ))
                                                                                                                                                (lam xIn890:scalus.prelude.List[scala.Tuple2[Int, Int]] -> scalus.prelude.List[scala.Tuple2[Int, Int]] -> Boolean[(TypeVar -> (TypeVar -> Constant))].
                                                                                                                                                    (lam xIn891:scalus.prelude.List[scala.Tuple2[Int, Int]] -> Boolean[(TypeVar -> Constant)].
                                                                                                                                                      App(App(xIn889
                                                                                                                                                        App($dataListToTuplesList14
                                                                                                                                                          UnListData(
                                                                                                                                                              repr.proxy(
                                                                                                                                                                xIn890
                                                                                                                                                              [PackedSumDataList])
                                                                                                                                                            )))
                                                                                                                                                      App($dataListToTuplesList14
                                                                                                                                                        UnListData(
                                                                                                                                                            repr.proxy(
                                                                                                                                                              xIn891
                                                                                                                                                            [PackedSumDataList])
                                                                                                                                                          )))
                                                                                                                                                    )
                                                                                                                                                  ))
                                                                                                                                              )
                                                                                                                                            (lam xIn913:scalus.prelude.List[scala.Tuple2[Int, Int]] -> scalus.prelude.List[scala.Tuple2[Int, Int]] -> Boolean[(SumDataPairList -> (SumDataPairList -> Constant))].
                                                                                                                                                (lam xIn914:scalus.prelude.List[scala.Tuple2[Int, Int]] -> Boolean[(SumDataPairList -> Constant)].
                                                                                                                                                  App(App(App(scalus.prelude.List$.listEq764
                                                                                                                                                      (lam xIn911:scala.Tuple2[Int, Int] -> scala.Tuple2[Int, Int] -> Boolean[(TypeVar -> (TypeVar -> Constant))].
                                                                                                                                                          (lam xIn912:scala.Tuple2[Int, Int] -> Boolean[(TypeVar -> Constant)].
                                                                                                                                                            App(App(App((lam xIn899:(Int -> Int -> Boolean) -> scala.Tuple2[Int, Int] -> scala.Tuple2[Int, Int] -> Boolean[((Constant -> (Constant -> Constant)) -> (ProdDataList -> (ProdDataList -> Constant)))].
                                                                                                                                                                    App(App(scalus.prelude.EqCompanion$.given_Eq_A_B330
                                                                                                                                                                      (lam xIn897:Int -> Int -> Boolean[(TypeVar -> (TypeVar -> Constant))].
                                                                                                                                                                          (lam xIn898:Int -> Boolean[(TypeVar -> Constant)].
                                                                                                                                                                            App(App((lam i1894:Int -> Int -> Boolean[(Constant -> (Constant -> Constant))].
                                                                                                                                                                                  (lam i2895:Int -> Boolean[(Constant -> Constant)].
                                                                                                                                                                                    App(App((builtin equalsInteger)
                                                                                                                                                                                      i1894)
                                                                                                                                                                                    i2895)
                                                                                                                                                                                  )
                                                                                                                                                                                )
                                                                                                                                                                              UnIData(
                                                                                                                                                                                  xIn897
                                                                                                                                                                                ))
                                                                                                                                                                            UnIData(
                                                                                                                                                                                xIn898
                                                                                                                                                                              ))
                                                                                                                                                                          )
                                                                                                                                                                        ))
                                                                                                                                                                    (lam xIn900:Int -> Int -> Boolean[(TypeVar -> (TypeVar -> Constant))].
                                                                                                                                                                        (lam xIn901:Int -> Boolean[(TypeVar -> Constant)].
                                                                                                                                                                          App(App(xIn899
                                                                                                                                                                            UnIData(
                                                                                                                                                                                xIn900
                                                                                                                                                                              ))
                                                                                                                                                                          UnIData(
                                                                                                                                                                              xIn901
                                                                                                                                                                            ))
                                                                                                                                                                        )
                                                                                                                                                                      ))
                                                                                                                                                                  )
                                                                                                                                                                (lam i1904:Int -> Int -> Boolean[(Constant -> (Constant -> Constant))].
                                                                                                                                                                    (lam i2905:Int -> Boolean[(Constant -> Constant)].
                                                                                                                                                                      App(App((builtin equalsInteger)
                                                                                                                                                                        i1904)
                                                                                                                                                                      i2905)
                                                                                                                                                                    )
                                                                                                                                                                  ))
                                                                                                                                                              SndPair(
                                                                                                                                                                  UnConstrData(
                                                                                                                                                                    repr.proxy(
                                                                                                                                                                      xIn911
                                                                                                                                                                    [ProdDataConstr])
                                                                                                                                                                  )
                                                                                                                                                                ))
                                                                                                                                                            SndPair(
                                                                                                                                                                UnConstrData(
                                                                                                                                                                  repr.proxy(
                                                                                                                                                                    xIn912
                                                                                                                                                                  [ProdDataConstr])
                                                                                                                                                                )
                                                                                                                                                              ))
                                                                                                                                                          )
                                                                                                                                                        ))
                                                                                                                                                    App($TuplesListToDataList6
                                                                                                                                                      xIn913))
                                                                                                                                                  App($TuplesListToDataList6
                                                                                                                                                    xIn914))
                                                                                                                                                )
                                                                                                                                              ))in
                                                                                                                                          
                                                                                                                                            let result921=App((lam xIn920:Int -> scalus.prelude.List[scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet]][(Constant -> SumDataPairList)].
                                                                                                                                                  App($dataListToTuplesList14
                                                                                                                                                  UnListData(
                                                                                                                                                      App(App(scalus.benchmarks.KnightsTest$.runKnights763
                                                                                                                                                        (con integer 100))
                                                                                                                                                      xIn920)
                                                                                                                                                    ))
                                                                                                                                                )
                                                                                                                                              (con integer 4))in
                                                                                                                                            
                                                                                                                                              let expected922=cast.repr.proxy(
                                                                                                                                                  [
                                                                                                                                                    (builtin mkNilPairData)
                                                                                                                                                    (con unit ())
                                                                                                                                                  ]
                                                                                                                                                :scalus.prelude.List[scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet]][SumDataPairList])in
                                                                                                                                              
                                                                                                                                                if
                                                                                                                                                  App(App((lam xIn939:scalus.prelude.List[scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet]] -> scalus.prelude.List[scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet]] -> Boolean[(SumDataPairList -> (SumDataPairList -> Constant))].
                                                                                                                                                        (lam xIn940:scalus.prelude.List[scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet]] -> Boolean[(SumDataPairList -> Constant)].
                                                                                                                                                          App(App(App(scalus.prelude.List$.listEq764
                                                                                                                                                              (lam xIn937:scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet] -> scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet] -> Boolean[(TypeVar -> (TypeVar -> Constant))].
                                                                                                                                                                  (lam xIn938:scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet] -> Boolean[(TypeVar -> Constant)].
                                                                                                                                                                    App(App(App((lam xIn928:(scalus.benchmarks.KnightsTest$.ChessSet -> scalus.benchmarks.KnightsTest$.ChessSet -> Boolean) -> scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet] -> scala.Tuple2[Int, scalus.benchmarks.KnightsTest$.ChessSet] -> Boolean[((ProdDataList -> (ProdDataList -> Constant)) -> (ProdDataList -> (ProdDataList -> Constant)))].
                                                                                                                                                                            App(App(scalus.prelude.EqCompanion$.given_Eq_A_B330
                                                                                                                                                                              (lam xIn926:Int -> Int -> Boolean[(TypeVar -> (TypeVar -> Constant))].
                                                                                                                                                                                  (lam xIn927:Int -> Boolean[(TypeVar -> Constant)].
                                                                                                                                                                                    App(App((lam i1923:Int -> Int -> Boolean[(Constant -> (Constant -> Constant))].
                                                                                                                                                                                          (lam i2924:Int -> Boolean[(Constant -> Constant)].
                                                                                                                                                                                            App(App((builtin equalsInteger)
                                                                                                                                                                                              i1923)
                                                                                                                                                                                            i2924)
                                                                                                                                                                                          )
                                                                                                                                                                                        )
                                                                                                                                                                                      UnIData(
                                                                                                                                                                                          xIn926
                                                                                                                                                                                        ))
                                                                                                                                                                                    UnIData(
                                                                                                                                                                                        xIn927
                                                                                                                                                                                      ))
                                                                                                                                                                                  )
                                                                                                                                                                                ))
                                                                                                                                                                            (lam xIn929:scalus.benchmarks.KnightsTest$.ChessSet -> scalus.benchmarks.KnightsTest$.ChessSet -> Boolean[(TypeVar -> (TypeVar -> Constant))].
                                                                                                                                                                                (lam xIn930:scalus.benchmarks.KnightsTest$.ChessSet -> Boolean[(TypeVar -> Constant)].
                                                                                                                                                                                  App(App(xIn928
                                                                                                                                                                                    SndPair(
                                                                                                                                                                                        UnConstrData(
                                                                                                                                                                                          repr.proxy(
                                                                                                                                                                                            xIn929
                                                                                                                                                                                          [ProdDataConstr])
                                                                                                                                                                                        )
                                                                                                                                                                                      ))
                                                                                                                                                                                  SndPair(
                                                                                                                                                                                      UnConstrData(
                                                                                                                                                                                        repr.proxy(
                                                                                                                                                                                          xIn930
                                                                                                                                                                                        [ProdDataConstr])
                                                                                                                                                                                      )
                                                                                                                                                                                    ))
                                                                                                                                                                                )
                                                                                                                                                                              ))
                                                                                                                                                                          )
                                                                                                                                                                        scalus.benchmarks.KnightsTest$.given_Eq_ChessSet919)
                                                                                                                                                                      SndPair(
                                                                                                                                                                          UnConstrData(
                                                                                                                                                                            repr.proxy(
                                                                                                                                                                              xIn937
                                                                                                                                                                            [ProdDataConstr])
                                                                                                                                                                          )
                                                                                                                                                                        ))
                                                                                                                                                                    SndPair(
                                                                                                                                                                        UnConstrData(
                                                                                                                                                                          repr.proxy(
                                                                                                                                                                            xIn938
                                                                                                                                                                          [ProdDataConstr])
                                                                                                                                                                        )
                                                                                                                                                                      ))
                                                                                                                                                                  )
                                                                                                                                                                ))
                                                                                                                                                            App($TuplesListToDataList6
                                                                                                                                                              xIn939))
                                                                                                                                                          App($TuplesListToDataList6
                                                                                                                                                            xIn940))
                                                                                                                                                        )
                                                                                                                                                      )
                                                                                                                                                    result921)
                                                                                                                                                  expected922)
                                                                                                                                                then
                                                                                                                                                  (con unit ())
                                                                                                                                                else
                                                                                                                                                  (force [
                                                                                                                                                    (force (builtin trace))
                                                                                                                                                    (con string "RequirementError")
                                                                                                                                                    (delay (error))
                                                                                                                                                  ])
                                                                                                                                              
                                                                                                                                            
                                                                                                                                          
                                                                                                                                        
                                                                                                                                      )
                                                                                                                                    
                                                                                                                                  
                                                                                                                                
                                                                                                                              
                                                                                                                            
                                                                                                                          
                                                                                                                        )
                                                                                                                      
                                                                                                                    
                                                                                                                  
                                                                                                                
                                                                                                              
                                                                                                            )
                                                                                                          
                                                                                                        
                                                                                                      
                                                                                                    
                                                                                                  
                                                                                                
                                                                                              
                                                                                            
                                                                                          
                                                                                        
                                                                                      
                                                                                    
                                                                                  
                                                                                
                                                                              
                                                                            
                                                                          
                                                                        
                                                                      
                                                                    
                                                                  
                                                                
                                                              
                                                            
                                                          
                                                        
                                                      
                                                    )
                                                  
                                                
                                              )
                                            )
                                          
                                        )
                                      
                                    
                                  
                                
                              
                            )
                          )
                        )
                      
                    
                  
                
              
            
          
        
      
    
  

BenchmarkComparison[KnightsTest.100_4x4]: {cpu: {scalus: 148279342639, ref: 54958831939, comparison: 269.80%}, memory: {scalus: 513226542, ref: 160204421, comparison: 320.36%}}
[info] - 100_4x4
result=Failure executing script:
 exception: Builtin error: UnListData Apply(Builtin(UnListData), Const(Data({3: 2, 5: 3, 6: 1, 4: 2, 3: 4, 2: 6, 4: 5, 6: 6, 5: 4, 6: 2, 4: 1, 2: 2, 1: 4, 3: 3, 2: 1, 1: 3, 2: 5, 4: 6, 6: 5, 4: 4, 5: 2, 6: 4, 5: 6, 3: 5, 1: 6, 2: 4, 1: 2, 3: 1, 4: 3, 5: 1, 6: 3, 5: 5, 3: 6, 1: 5, 2: 3, 1: 1}))), caused by scalus.uplc.eval.DeserializationError: Deserialization error in UnListData: VCon(Data({3: 2, 5: 3, 6: 1, 4: 2, 3: 4, 2: 6, 4: 5, 6: 6, 5: 4, 6: 2, 4: 1, 2: 2, 1: 4, 3: 3, 2: 1, 1: 3, 2: 5, 4: 6, 6: 5, 4: 4, 5: 2, 6: 4, 5: 6, 3: 5, 1: 6, 2: 4, 1: 2, 3: 1, 4: 3, 5: 1, 6: 3, 5: 5, 3: 6, 1: 5, 2: 3, 1: 1}))
 budget: { mem: 1995.641148, cpu: 585771.723811 }
 costs:
Startup: 1 { mem: 0.000100, cpu: 0.000100 }
Apply: 7874292 { mem: 787.429200, cpu: 125988.672000 }
Delay: 796776 { mem: 79.677600, cpu: 12748.416000 }
Force: 398398 { mem: 39.839800, cpu: 6374.368000 }
LamAbs: 1486372 { mem: 148.637200, cpu: 23781.952000 }
Builtin: 1131164 { mem: 113.116400, cpu: 18098.624000 }
Const: 655572 { mem: 65.557200, cpu: 10489.152000 }
Var: 6497062 { mem: 649.706200, cpu: 103952.992000 }
AddInteger: 5705 { mem: 0.011410, cpu: 577.391640 }
SubtractInteger: 5286 { mem: 0.010572, cpu: 534.985488 }
MultiplyInteger: 101 { mem: 0.000202, cpu: 9.186253 }
RemainderInteger: 36 { mem: 0.000036, cpu: 4.749480 }
EqualsInteger: 70661 { mem: 0.070661, cpu: 3697.902113 }
LessThanInteger: 8743 { mem: 0.008743, cpu: 395.970470 }
LessThanEqualsInteger: 13942 { mem: 0.013942, cpu: 611.175454 }
IfThenElse: 136506 { mem: 0.136506, cpu: 10381.144794 }
FstPair: 204164 { mem: 6.533248, cpu: 28969.850780 }
SndPair: 437493 { mem: 13.999776, cpu: 62120.506056 }
ChooseList: 261882 { mem: 8.380224, cpu: 34828.734708 }
MkCons: 609076 { mem: 19.490432, cpu: 44073.957512 }
HeadList: 616912 { mem: 19.741184, cpu: 51296.232800 }
TailList: 325837 { mem: 10.426784, cpu: 26608.826931 }
ConstrData: 337101 { mem: 10.787232, cpu: 7467.124251 }
MapData: 787 { mem: 0.025184, cpu: 53.709602 }
ListData: 24366 { mem: 0.779712, cpu: 824.837832 }
IData: 12080 { mem: 0.386560, cpu: 184.811920 }
UnConstrData: 269481 { mem: 8.623392, cpu: 6625.998828 }
UnMapData: 8323 { mem: 0.266336, cpu: 204.937229 }
UnListData: 24289 { mem: 0.777248, cpu: 629.886637 }
UnIData: 122775 { mem: 3.928800, cpu: 2546.844600 }
MkPairData: 9546 { mem: 0.305472, cpu: 110.218116 }
MkNilData: 217323 { mem: 6.954336, cpu: 1574.070489 }
MkNilPairData: 608 { mem: 0.019456, cpu: 4.493728 }
 logs: 
[info] - 100_6x6 *** FAILED ***
[info]   result.isSuccess was false (KnightsTest.scala:267)
[info] - 100_8x8
[info] BilinearAccumulatorTest:
[info] - get final poly
[info] - get final poly large
[info] - check membership one element
[info] - check membership two elements
[info] - check membership three elements
[info] - check membership four elements
[info] - check membership five elements
[info] - check membership ten elements
[info] - check membership fifteen elements
[info] - check membership twenty elements
[info] - check membership twenty five elements
[info] - check membership thirty elements
[info] - check membership thirty five elements
[info] - check membership forty elements
[info] - check membership forty five elements
[info] - check non membership one elements
[info] - check non membership two elements
[info] - check non membership three elements
[info] - check non membership four elements
[info] - check non membership five elements
[info] PaymentSplitterTest:
[info] - success when payments are correctly split for a single payee
[info] - success when payments are correctly split between 2 payees
BenchmarkComparison[PaymentSplitterTest.success when payments are correctly split between 3 payees]: {cpu: {scalus: 201475488, ref: 290456791, comparison: 69.37%}, memory: {scalus: 928805, ref: 742305, comparison: 125.12%}}
[info] - success when payments are correctly split between 3 payees
[info] - failure when a payee is not present in the inputs
[info] - failure when a payee is not payed out (1 payee)
BenchmarkComparison[PaymentSplitterTest.failure when a one of the payee is not payed out]: {cpu: {scalus: 135983994, ref: 177206757, comparison: 76.74%}, memory: {scalus: 597991, ref: 476022, comparison: 125.62%}}
[info] - failure when a one of the payee is not payed out
[info] - failure when payee not present in contact to be payed
[info] - success when split equally and remainder compensates fee - o1
[info] - success when split equally and remainder compensates fee - o2
[info] - success when split equally and remainder compensates fee - o3
[info] - failure when inflated fee reduces the split payout
[info] - failure when multiple payees are present in the inputs
[info] - success when multiple payees are correctly split
[info] - success between 5 splitters with merged outputs
[info] - success between 5 splitters were first splitter have separate outputs for fee and payout
[info] PreimageExampleTest:
[info] - Preimage Validator
[info] - Optimized Preimage Validator
[info] Run completed in 23 seconds, 931 milliseconds.
[info] Total number of tests run: 78
[info] Suites: completed 12, aborted 0
[info] Tests: succeeded 77, failed 1, canceled 0, ignored 0, pending 0
[info] *** 1 TEST FAILED ***
[error] Failed tests:
[error] 	scalus.benchmarks.KnightsTest
[error] (scalusExamplesJVM / Test / test) sbt.TestsFailedException: Tests unsuccessful
[error] Total time: 107 s (0:01:47.0), completed 29 Jul 2025, 09:01:42
